
Title:
Enterprise architecture framework
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Frame in which the architecture of a company is defined
  NIST Enterprise Architecture Model initiated in 1989, one of the earliest frameworks for enterprise architecture.[1]
An enterprise architecture framework (EA framework) defines how to create and use an enterprise architecture. An architecture framework provides principles and practices for creating and using the architecture description of a system. It structures architects' thinking by dividing the architecture description into domains, layers, or views, and offers models - typically matrices and diagrams - for documenting each view.  This allows for making systemic design decisions on all the components of the system and making long-term decisions around new design requirements, sustainability, and support.[2]

Contents

1 Overview
2 History
3 EA framework topics

3.1 Architecture domain
3.2 Layers of the enterprise architecture


4 Components of enterprise architecture framework

4.1 Enterprise architecture domains and subdomains
4.2 View model
4.3 Standardization


5 Types of enterprise architecture framework

5.1 Consortia-developed frameworks
5.2 Defense industry frameworks
5.3 Government frameworks
5.4 Open-source frameworks
5.5 Proprietary frameworks


6 See also
7 References
8 External links



Overview[edit]
Enterprise architecture regards the enterprise as a large and complex system or system of systems.[3] To manage the scale and complexity of this system, an architectural framework provides tools and approaches that help architects abstract from the level of detail at which builders work, to bring enterprise design tasks into focus and produce valuable architecture description documentation.
The components of an architecture framework provide structured guidance that is divided into three main areas:[4] 

Descriptions of architecture: how to document the enterprise as a system, from several viewpoints. Each view describes one slice of the architecture; it includes those entities and relationships that address particular concerns of interest to particular stakeholders; it may take the form of a list, a table, a diagram, or a higher level of composite of such.
Methods for designing architecture: processes that architects follow. Usually, an overarching enterprise architecture process, composed of phases, broken into lower-level processes composed of finer grained activities. A process is defined by its objectives, inputs, phases (steps or activities) and outputs. It may be supported by approaches, techniques, tools, principles, rules, and practices.
Organization of architects: guidance on the team structure and the governance of the team, including the skills, experience, and training needed.
History[edit]
  Overview of Enterprise Architecture Frameworks evolution (1987â2003).[4][5] On the left: The Zachman Framework 1987, NIST Enterprise Architecture 1989, EAP 1992, TISAF 1997, FEAF 1999 and TEAF 2000. On the right: TAFIM influenced by POSIX, JTA, JTAA, TOGAF 1995, DoD TRM[6] and C4ISR 1996, and DoDAF 2003.
The earliest rudiments of the step-wise planning methodology currently advocated by The Open Group Architecture Framework (TOGAF) and other EA frameworks can be traced back to the article of Marshall K. Evans and Lou R. Hague titled "Master Plan for Information Systems"[7] published in 1962 in Harvard Business Review.[8]
Since the 1970s people working in IS/IT have looked for ways to engage business people â to enable business roles and processes - and to influence investment in business information systems and technologies â with a view to the wide and long term benefits of the enterprise. Many of the aims, principles, concepts and methods now employed in EA frameworks were established in the 1980s, and can be found in IS and IT architecture frameworks published in that decade and the next.[9]
By 1980, IBM's Business Systems Planning (BSP) was promoted as a method for analyzing and designing an organization's information architecture, with the following goals:

understand the issues and opportunities with the current applications and technical architecture;
develop a future state and migration path for the technology that supports the enterprise;
provide business executives with a direction and decision making framework for IT capital expenditures;
provide the information system (IS) with a blueprint for development.
In 1982, when working for IBM and with BSP, John Zachman outlined his framework for enterprise-level "Information Systems Architecture". Then and in later papers, Zachman used the word enterprise as a synonym for business. "Although many popular information systems planning methodologies, design approaches, and various tools and techniques do not preclude or are not inconsistent with enterprise-level analysis, few of them explicitly address or attempt to define enterprise architectures."[10] However, in this article the term "Enterprise Architecture" was mentioned only once without any specific definition and all subsequent works of Zachman used the term "Information Systems Architecture".[11][12]
In 1986, the PRISM architecture framework was developed as a result of the research project sponsored by a group of companies, including IBM, which was seemingly the first published EA framework.[13]
In 1987, John Zachman, who was a marketing specialist at IBM, published the paper, A Framework for Information Systems Architecture.[11] The paper provided a classification scheme for artifacts that describe (at several levels of abstraction) the what, how, where, who, when and why of information systems. Given IBM already employed BSP, Zachman had no need to provide planning process. The paper did not mention enterprise architecture.
In 1989, the National Institute of Standards and Technology (NIST) published the NIST Enterprise Architecture Model.[14] This was a five-layer reference model that illustrates the interrelationship of business, information system, and technology domains. It was promoted within the U.S. federal government. It was not an EA framework as we see it now, but it helped to establish the notion of dividing EA into architecture domains or layers. The NIST Enterprise Architecture Model seemingly was the first publication that consistently used the term "Enterprise Architecture".[13]
In 1990, the term "Enterprise Architecture" was formally defined for the first time as an architecture that "defines and interrelates data, hardware, software, and communications resources, as well as the supporting organization required to maintain the overall physical structure required by the architecture".[13][15]
In 1992, a paper by Zachman and Sowa[12] started thus "John Zachman introduced a framework for information systems architecture (ISA) that has been widely adopted by systems analysts and database designers." The term enterprise architecture did not appear. The paper was about using the ISA framework to describe, â...the overall information system and how it relates to the enterprise and its surrounding environment.â The word enterprise was used as a synonym for business.
In 1993, Stephen Spewak's book Enterprise Architecture Planning (EAP) defined a process for defining architectures for the use of information in support of the business and the plan for implementing those architectures. The business mission is the primary driver. Then the data required to satisfy the mission. Then the applications built to store and provide that data. Finally the technology to implement the applications. Enterprise Architecture Planning is a data-centric approach to architecture planning. An aim is to improve data quality, access to data, adaptability to changing requirements, data interoperability and sharing, and cost containment. EAP has its roots in IBM's Business Systems Planning (BSP).[13]
In 1994, the Open Group selected TAFIM from the US DoD as a basis for development of TOGAF, where architecture meant IT architecture. TOGAF started out taking a strategic and enterprise-wide, but technology-oriented, view. It emerged from the desire to rationalize a messy IT estate. Right up to version 7, TOGAF was still focused on defining and using a Technical Reference Model (or foundation architecture) to define the platform services required from the technologies that an entire enterprise uses to support business applications.[9]
In 1996, the US IT Management Reform Act, more commonly known as the Clinger-Cohen Act, repeatedly directed that a US federal government agency's investment in IT must be mapped to identifiable business benefits. In addition, it made the agency CIO responsible for, â...developing, maintaining and facilitating the implementation of a sound and integrated IT architecture for the executive agency.â
By 1997, Zachman had renamed and refocused his ISA framework as an EA framework; it remained a classification scheme for descriptive artifacts, not a process for planning systems or changes to systems.
In 1998, The Federal CIO Council began developing the Federal Enterprise Architecture Framework (FEAF) in accordance with the priorities enunciated in Clinger-Cohen and issued it in 1999. FEAF was a process much like TOGAF's ADM, in which âThe architecture team generates a sequencing plan for the transition of systems, applications, and associated business practices predicated upon a detailed gap analysis [between baseline and target architectures].â
In 2001, the US Chief CIO council published A practical guide to Federal Enterprise Architecture, which starts, âAn enterprise architecture (EA) establishes the Agency-wide roadmap to achieve an Agencyâs mission through optimal performance of its core business processes within an efficient information technology (IT) environment."
At that point, the processes in TOGAF, FEAF, EAP and BSP were clearly related.
In 2002/3, in its Enterprise Edition, TOGAF 8 shifted focus from the technology architecture layer to the higher business, data and application layers. It introduced structured analysis, after information technology engineering, which features, for example, mappings of organization units to business functions and data entities to business functions. Today, business functions are often called business capabilities. And many enterprise architects regard their business function/capability hierarchy/map as the fundamental Enterprise Architecture artifact. They relate data entities, use cases, applications and technologies to the functions/capabilities.
In 2006, the popular book Enterprise Architecture As Strategy[16] reported the results of work by MIT's Center for Information System Research. This book emphasises the need for enterprise architects to focus on core business processes ("Companies excel because they've [decided] which processes they must execute well, and have implemented the IT systems to digitise those processes.") and to engage business managers with the benefits that strategic cross-organisational process integration and/or standardisation could provide.
A 2008 research project for the development of professional certificates in enterprise and solution architecture by the British Computer Society (BCS) showed that enterprise architecture has always been inseparable from information system architecture, which is natural, since business people need information to make decisions and carry out business processes.[9]
In 2011, the TOGAF 9.1. specification says: "Business planning at the strategy level provides the initial direction to enterprise architecture."[17] Normally, the business principles, business goals, and strategic drivers of the organization are defined elsewhere.[9] In other words, Enterprise Architecture is not a business strategy, planning or management methodology. Enterprise Architecture strives to align business information systems technology with given business strategy, goals and drivers. The TOGAF 9.1 specification clarified, that, "A complete enterprise architecture description should contain all four architecture domains (business, data, application, technology), but the realities of resource and time constraints often mean there is not enough time, funding, or resources to build a top-down, all-inclusive architecture description encompassing all four architecture domains, even if the enterprise scope is [...] less than the full extent of the overall enterprise."[18]
In 2013, TOGAF[19] is the most popular Architecture framework (judged by published certification numbers) that some assume it defines EA.[9] However, some still use the term Enterprise Architecture as a synonym for Business Architecture, rather than covering all four architecture domains - business, data, applications and technology.

EA framework topics[edit]
Architecture domain[edit]
  Layers of the enterprise architecture.[20]
Since Stephen Spewak's Enterprise Architecture Planning (EAP) in 1993 â and perhaps before then â it has been normal to divide enterprises architecture into four architecture domains.

Business architecture,
Data architecture,
Applications architecture,
Technology architecture.
Note that the applications architecture is about the choice of and relationships between applications in the enterprise's application portfolio, not about the internal architecture of a single application (which is often called application architecture).
Many EA frameworks combine data and application domains into a single (digitized) information system layer, sitting below the business (usually a human activity system) and above the technology (the platform IT infrastructure).

Layers of the enterprise architecture[edit]
  Example of the federal enterprise architecture, which has defined five architectural layers.[21]
For many years, it has been common to regard the architecture domains as layers, with the idea that each layer contains components that execute processes and offer services to the layer above. This way of looking at the architecture domains was evident in TOGAF v1 (1996), which encapsulated the technology component layer behind the platform services defined in the "Technical Reference Model" - very much according to the philosophy of TAFIM and POSIX.
The view of architecture domains as layers can be presented thus:

Environment (the external entities and activities monitored, supported or directed by the business).
Business Layer (business functions offering services to each other and to external entities).
Data Layer (Business information and other valuable stored data)
Information System Layer (business applications offering information services to each other and to business functions)
Technology Layer (generic hardware, network and platform applications offering platform services to each other and to business applications).
Each layer delegates work to the layer below. In each layer, the components, the processes and the services can be defined at a coarse-grained level and decomposed into finer-grained components, processes and services. The graphic shows a variation on this theme.

Components of enterprise architecture framework[edit]
In addition to three major framework components discussed above. 

Description advice: some kind of Architecture Artifacts Map or Viewpoint Library
Process advice: some kind of Architecture Development Method, with supporting guidance.
Organization advice: including an EA Governance Model
An ideal EA framework should feature:

Business value measurement metrics
EA initiative model
EA maturity model
Enterprise communication model
Most modern EA frameworks (e.g. TOGAF, ASSIMPLER, EAF) include most of the above. Zachman has always focused on architecture description advice.

Enterprise architecture domains and subdomains[edit]
  Enterprise architecture reference architecture with sub domains
The application and technology domains (not to be confused with business domains) are characterized by domain capabilities and domain services. The capabilities are supported by the services. The application services are also referred to in service-oriented architecture (SOA). The technical services are typically supported by software products.
The data view starts with the data classes which can be decomposed into data subjects which can be further decomposed into data entities. The basic data model type which is most commonly used is called merda (master entity relationship diagrams assessment, see entity-relationship model). The Class, subject and entity forms a hierarchical view of data. Enterprises may have millions of instances of data entities.
The Enterprise Architecture Reference Traditional Model offers a clear distinction between the architecture domains (business, information/data, application/integration and technical/infrastructure). These domains can be further divided into Sub domain disciplines. An example of the EA domain and subdomains is in the image on the right.
Many enterprise architecture teams consist of Individuals with Skills aligned with the Enterprise Architecture Domains and sub-domain disciplines. Here are some examples: enterprise business architect, enterprise documentational architect, enterprise application architect, enterprise infrastructure architect, enterprise information architect, etc.
An example of the list of reference architecture patterns in the application and information architecture domains are available at Architectural pattern (computer science).

View model[edit]
  Illustration of the 4+1 view model of architecture.
A view model is a framework that defines the set of views or approaches used in systems analysis, systems design, or the construction of an enterprise architecture.
Since the early 1990s, there have been a number of efforts to define standard approaches for describing and analyzing system architectures. Many of the recent Enterprise Architecture frameworks have some kind of set of views defined, but these sets are not always called view models.

Standardization[edit]
Perhaps the best-known standard in the field of software architecture and system architecture started life as IEEE 1471, an IEEE Standard for describing the architecture of a software-intensive system approved in 2000.
In its latest version, the standard is published as ISO/IEC/IEEEÂ 42010:2011. The standard defines an architecture framework as conventions, principles and practices for the description of architectures established within a specific domain of application and/or community of stakeholders, and proposes an architecture framework is specified by:

the relevant stakeholders in the domain,
the types of concerns arising in that domain,
architecture viewpoints framing those concerns and
correspondence rules integrating those viewpoints cited before.
Architecture frameworks conforming to the standard can include additional methods, tools, definitions, and practices beyond those specified.

Types of enterprise architecture framework[edit]
  Just a few of the Enterprise Architecture frameworks utilized today, 2011[22]
Nowadays there are now countless EA frameworks, many more than in the following listing.

Consortia-developed frameworks[edit]
ARCON â A Reference Architecture for Collaborative Networks â not focused on a single enterprise but rather on networks of enterprises[23][24]
The Cloud Security Alliance (Trusted Cloud Initiative) TCI reference architectue.[25]
Generalised Enterprise Reference Architecture and Methodology (GERAM)
RM-ODP â the Reference Model of Open Distributed Processing (ITU-T Rec. X.901-X.904 | ISO/IEC 10746) defines an enterprise architecture framework for structuring the specifications of open distributed systems.
IDEAS Group â a four-nation effort to develop a common ontology for architecture interoperability
ISO 19439 Framework for enterprise modelling
TOGAF â The Open Group Architecture Framework â a widely used framework including an architectural Development Method and standards for describing various types of architecture.
Defense industry frameworks[edit]
AGATE â the France DGA Architecture Framework
DNDAF[26] â the DND/CF Architecture Framework (CAN)
DoDAF â the US Department of Defense Architecture Framework
MODAF â the UK Ministry of Defence Architecture Framework
NAF â the NATO Architecture Framework
Government frameworks[edit]
European Space Agency Architectural Framework (ESAAF) - a framework for European space-based Systems of Systems[27]
FDIC Enterprise Architecture Framework
Federal Enterprise Architecture Framework (FEAF) â a framework produced in 1999 by the US Federal CIO Council for use within the US Government (not to be confused with the 2002 Federal Enterprise Architecture (FEA) guidance on categorizing and grouping IT investments, issued by the US Federal Office of Management and Budget)
Government Enterprise Architecture (GEA) â a common framework legislated for use by departments of the Queensland Government
Nederlandse Overheid Referentie Architectuur (NORA) â a reference framework from the Dutch Government E-overheid NORA
NIST Enterprise Architecture Model
Treasury Enterprise Architecture Framework (TEAF) â a framework for  treasury, published by the US Department of the Treasury in July 2000.[28]
Colombian Enterprise Architecture Framework - MRAE - Marco de Referencia de Arquitectura Empresarial a framework for all the Colombian Public Agencies
India Enterprise Architecture (IndEA) framework - IndEA is a reference framework from Government of India.
Open-source frameworks[edit]
Enterprise architecture frameworks that are released as open source:

Lean Architecture Framework (LAF)[29] is a collection of good practices thanks to which the IT environment will respond consistently and quickly to a changing business situation while maintaining its consistent form.
MEGAF[30] is an infrastructure for realizing architecture frameworks that conform to the definition of architecture framework provided in ISO/IEC/IEEE 42010.
Praxeme, an open enterprise methodology, contains an enterprise architecture framework called the Enterprise System Topology (EST)
TRAK â a general systems-oriented framework based on MODAF 1.2 and released under GPL/GFDL.
Sherwood Applied Business Security Architecture (SABSA)[31] is an open framework and methodology for Enterprise Security Architecture and Service Management, that is risk based and focuses on integrating security into business and IT management.
Proprietary frameworks[edit]
ASSIMPLER Framework â an architecture framework, based on the work of Mandar Vanarse at Wipro in 2002
Avancier Methods (AM)[32] Processes and documentation advice for enterprise and solution architects, supported by training and certification.
BRM (Build-Run-Manage) Framework - an architecture framework created by Sanjeev "Sunny" Mishra during his early days at IBM in 2000.
Capgemini Integrated Architecture Framework (IAF) â from Capgemini company in 1993
Dragon1 - An open Visual Enterprise Architecture Method recently recognized by The Open Group as Architecture Framework
DYA framework developed by Sogeti since 2004.
Dynamic Enterprise Enterprise architecture concept based on Web 2.0 technology
Extended Enterprise Architecture Framework - from Institute For Enterprise Architecture Developments in 2003
EACOE Framework [3] â an Enterprise Architecture framework, as an elaboration of the work of John Zachman
IBM Information FrameWork (IFW) â conceived by Roger Evernden in 1996
Infomet - conceived by Pieter Viljoen in 1990
Labnaf [33] - Unified Framework for Driving Enterprise Transformations
Pragmatic Enterprise Architecture Framework (PEAF)[34] - part of Pragmatic Family of Frameworks developed by Kevin Lee Smith, Pragmatic EA, from 2008
Purdue Enterprise Reference Architecture developed by Theodore J. Williams at the Purdue University early 1990s.
SAP Enterprise Architecture Framework
Service-oriented modeling framework (SOMF), based on the work of Michael Bell
Solution Architecting Mechanism (SAM)[35] â A coherent architecture framework consisting of a set of integral modules.[36]
Zachman Framework â an architecture framework, based on the work of John Zachman at IBM in the 1980s
See also[edit]
Architecture patterns (EA reference architecture)
EABOK (The Guide to the Enterprise Architecture Body of Knowledge)
Enterprise architecture
Enterprise architecture artifacts
Enterprise architecture planning
Enterprise engineering
ISO/IEC/IEEE 42010
Reference architecture
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ The Chief Information Officers Council (1999). Federal Enterprise Architecture Framework Version 1.1 Archived 2012-02-13 at the Wayback Machine. September 1999.

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"Tech Target". SearchCIO.

^ The Open Group (2008) TOGAF Version 9. Van Haren Publishing, 1 nov. 2008.p. 73

^ Jump up to: a b Stephen Marley (2003). Architectural Framework. NASA /SCI. At Webarchive.org, retrieved 3-04-2015.

^ Jaap Schekkerman (2004) How to Survive in the Jungle of Enterprise Architecture Frameworks. p.89 gives a similar scheme.

^ US Department of Defense (2001) Department of Defense Technical Reference Model. Version 2.0. 9 April 2001. p. 11, mentioned that also the DoD TRM is influenced by POSIX.

^ Evans, M. K. and Hague, L. R. (1962) Master Plan for Information Systems, Harvard Business Review, Vol. 40, No. 1, pp. 92-103.

^ Kotusev, Svyatoslav (2021) The Practice of Enterprise Architecture: A Modern Approach to Business and IT Alignment (2nd Edition). Melbourne, Australia: SK Publishing.

^ Jump up to: a b c d e Graham Berrisford (2008-13) "A brief history of EA: what is in it and what is not Archived 2013-09-18 at the Wayback Machine" on grahamberrisford.com, last update 16/07/2013. Accessed 16/07?2003

^ John Zachman (1982) Business Systems Planning and Business Information Control Study: A comparison in IBM Systems Journal 21(1). p32.

^ Jump up to: a b John A. Zachman (1987).  A Framework for Information Systems Architecture. In: IBM Systems Journal, vol 26, no 3. IBM Publication G321-5298.

^ Jump up to: a b Zachman and Sowa (1992) Extending and formalising the framework of information systems architecture IBM Systems Journal, Vol 31, No 3

^ Jump up to: a b c d Svyatoslav Kotusev (2016). The History of Enterprise Architecture: An Evidence-Based Review. In: Journal of Enterprise Architecture, vol. 12, no. 1, pp. 29-37.

^ W.B. Rigdon (1989). Architectures and Standards. In Information Management Directions: The Integration Challenge (NIST Special Publication 500-167), E.N. Fong, A.H. Goldfine (Eds.), Gaithersburg, MD: National Institute of Standards and Technology (NIST), pp.135-150.

^ Richardson, G.L.; Jackson, B.M.; Dickson, G.W. (1990). "A Principles-Based Enterprise Architecture: Lessons from Texaco and Star Enterprise". MIS Quarterly. 14 (4): 385â403. doi:10.2307/249787. JSTORÂ 249787.

^ Jeanne W. Ross, Peter Weill, and David C. Robertson ( (2006) Enterprise Architecture As Strategy: Creating a Foundation for Business Execution. Harvard Business Review Press

^ The Open Group (2011) TOGAFÂ® 9.1 > Part II: Architecture Development Method (ADM) > Preliminary Phase. Accessed July 16, 2013

^ The Open Group (2011) TOGAFÂ® 9.1 > Part II: Architecture Development Method (ADM) > Introduction to the ADM. Accessed July 16, 2013

^ TOGAF 9.1 White Paper An Introduction to TOGAF Version 9.1 http://www.opengroup.org/togaf/

^ Niles E Hewlett (2006), The USDA Enterprise Architecture Program Archived 2007-05-08 at the Wayback Machine. PMP CEA, Enterprise Architecture Team, USDA-OCIO. January 25, 2006.

^ FEA Consolidated Reference Model Document Archived 2010-07-05 at the Wayback Machine. whitehouse.gov May 2005.

^ Dennis E. Wisnosky (2011) Engineering Enterprise Architecture: Call to Action. in: Common Defense Quarterly. January 2011, p. 9

^ L.M. Camarinha-Matos, H. Afsarmanesh, Collaborative Networks: Reference Modeling, Springer, 2008.

^ Camarinha-Matos, L.M.; Afsarmanesh, H. (2008). "On reference models for collaborative networked organizations". International Journal Production Research. 46 (9): 2453â2469. doi:10.1080/00207540701737666. S2CIDÂ 51802872.

^ "The CSA TCI reference architectue" (PDF). Cloud Security Alliance. Archived from the original on 11 June 2016. Retrieved 7 July 2020. 

^ DNDAF Archived 2011-04-24 at the Wayback Machine

^ Gianni, Daniele; Lindman, Niklas; Fuchs, Joachim; Suzic, Robert (2012). "Introducing the European Space Agency Architectural Framework for Space-Based Systems of Systems Engineering". Complex Systems Design & Management. Proceedings of the Second International Conference on Complex Systems Design & Management CSDM 2011. Springer. pp.Â 335â346. CiteSeerXÂ 10.1.1.214.9671. doi:10.1007/978-3-642-25203-7_24. ISBNÂ 978-3-642-25202-0.

^ US Department of the Treasury Chief Information Officer Council (2000). Treasury Enterprise Architecture Framework Archived 2009-03-18 at the Wayback Machine. Version 1, July 2000.

^ https://lafinstitute.org/

^ MEGAF

^ SABSA

^ Avancier Methods (AM)

^ Labnaf [1]

^ Pragmatic EA [2]

^ Solution Architecting Mechanism (SAM)

^ Tony Shan and Winnie Hua (2006). Solution Architecting Mechanism. Proceedings of the 10th IEEE International EDOC Enterprise Computing Conference (EDOC 2006), October 2006, p23-32.


External links[edit]
Enterprise Architecture Frameworks: The Fad of the Century (July 2016)
A Comparison of the Top Four Enterprise Architecture Frameworks (July 2021)
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteSystems engineeringSubfields
Aerospace engineering
Biological systems engineering
Configuration management
Earth systems engineering and management
Electrical engineering
Enterprise systems engineering
Performance engineering
Reliability engineering
Safety engineering
Processes
Requirements engineering
Functional specification
System integration
Verification and validation
Design review
Concepts
Business process
System
System lifecycle
V-Model
Systems development life cycle
Tools
Decision-making
Function modelling
IDEF
Optimization
Quality function deployment
System dynamics
Systems Modeling Language
Systems analysis
Systems modeling
Work breakdown structure
People
James S. Albus
Ruzena Bajcsy
Benjamin S. Blanchard
Wernher von Braun
Kathleen Carley
Harold Chestnut
Wolt Fabrycky
Barbara Grosz
Arthur David Hall III
Derek Hitchins
Robert E. Machol
Radhika Nagpal
Simon Ramo
Joseph Francis Shea
Katia Sycara
Manuela M. Veloso
John N. Warfield
Related fields
Control engineering
Computer engineering
Industrial engineering
Operations research
Project management
Quality management
Risk management
Software engineering

Category

showvteSoftware engineeringFields
Computer programming
DevOps
Requirements engineering
Site reliability engineering
Software deployment
Software design
Software maintenance
Software testing
Systems analysis
Formal methods
Concepts
Data modeling
Enterprise architecture
Functional specification
Modeling language
Programming paradigm
Software
Software archaeology
Software architecture
Software configuration management
Software development process/methodology
Software quality
Software quality assurance
Software verification and validation
Structured analysis
Essential Analysis
Orientations
Agile
Aspect-oriented
Object orientation
Ontology
Service orientation
SDLC
ModelsDevelopmental
Agile
EUP
Executable UML
Incremental model
Iterative model
Prototype model
RAD
UP
Scrum
Spiral model
V-Model
Waterfall model
XP
Other
SPICE
CMMI
Data model
ER model
Function model
Information model
Metamodeling
Object model
Systems model
View model
Languages
IDEF
UML
USL
SysML
Related fields
Computer science
Computer engineering
Information science
Project management
Risk management
Systems engineering

 Category
 Commons





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Enterprise_architecture_framework&oldid=1058279130"
		Categories: Enterprise architectureEnterprise architecture frameworksHidden categories: Webarchive template wayback linksArticles with short descriptionShort description matches Wikidata
	
