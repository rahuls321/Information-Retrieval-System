
Title:
Malware
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Portmanteau for malicious software
 

.mw-parser-output .sidebar{width:22em;float:right;clear:right;margin:0.5em 0 1em 1em;background:#f8f9fa;border:1px solid #aaa;padding:0.2em;text-align:center;line-height:1.4em;font-size:88%;border-collapse:collapse;display:table}body.skin-minerva .mw-parser-output .sidebar{display:table!important;float:right!important;margin:0.5em 0 1em 1em!important}.mw-parser-output .sidebar-subgroup{width:100%;margin:0;border-spacing:0}.mw-parser-output .sidebar-left{float:left;clear:left;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-none{float:none;clear:both;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-outer-title{padding:0 0.4em 0.2em;font-size:125%;line-height:1.2em;font-weight:bold}.mw-parser-output .sidebar-top-image{padding:0.4em}.mw-parser-output .sidebar-top-caption,.mw-parser-output .sidebar-pretitle-with-top-image,.mw-parser-output .sidebar-caption{padding:0.2em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-pretitle{padding:0.4em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-title,.mw-parser-output .sidebar-title-with-pretitle{padding:0.2em 0.8em;font-size:145%;line-height:1.2em}.mw-parser-output .sidebar-title-with-pretitle{padding:0.1em 0.4em}.mw-parser-output .sidebar-image{padding:0.2em 0.4em 0.4em}.mw-parser-output .sidebar-heading{padding:0.1em 0.4em}.mw-parser-output .sidebar-content{padding:0 0.5em 0.4em}.mw-parser-output .sidebar-content-with-subgroup{padding:0.1em 0.4em 0.2em}.mw-parser-output .sidebar-above,.mw-parser-output .sidebar-below{padding:0.3em 0.8em;font-weight:bold}.mw-parser-output .sidebar-collapse .sidebar-above,.mw-parser-output .sidebar-collapse .sidebar-below{border-top:1px solid #aaa;border-bottom:1px solid #aaa}.mw-parser-output .sidebar-navbar{text-align:right;font-size:115%;padding:0 0.4em 0.4em}.mw-parser-output .sidebar-list-title{padding:0 0.4em;text-align:left;font-weight:bold;line-height:1.6em;font-size:105%}.mw-parser-output .sidebar-list-title-c{padding:0 0.4em;text-align:center;margin:0 3.3em}@media(max-width:720px){body.mediawiki .mw-parser-output .sidebar{width:100%!important;clear:both;float:none!important;margin-left:0!important;margin-right:0!important}}Part of a series onInformation security
Related security categories
Computer security
Automotive security
Cybercrime
Cybersex trafficking
Computer fraud
Cybergeddon
Cyberterrorism
Cyberwarfare
Electronic warfare
Information warfare
Internet security
Mobile security
Network security
Copy protection
Digital rights management

Threats
Adware
Advanced persistent threat
Arbitrary code execution
Backdoors
Hardware backdoors
Code injection
Crimeware
Cross-site scripting
Cryptojacking malware
Botnets
Data breach
Drive-by download
browser helper objects
Computer crime
Viruses
Data scraping
Denial of service
Eavesdropping
Email fraud
Email spoofing
Exploits
Keyloggers
Logic bombs
Time bombs
Fork bombs
Zip bombs
Fraudulent dialers
Malware
Payload
Phishing
Polymorphic engine
Privilege escalation
Ransomware
Rootkits
Bootkits
Scareware
Shellcode
Spamming
Social engineering (security)
Screen scraping
Spyware
Software bugs
Trojan horses
Hardware Trojans
Remote access trojans
Vulnerability
Web shells
Wiper
Worms
SQL injection
Rogue security software
Zombie

Defenses
Application security
Secure coding
Secure by default
Secure by design
Misuse case
Computer access control
Authentication
Multi-factor authentication
Authorization
Computer security software
Antivirus software
Security-focused operating system
Data-centric security
Code obfuscation
Data masking
Encryption
Firewall
Intrusion detection system
Host-based intrusion detection system (HIDS)
Anomaly detection
Security information and event management (SIEM)
Mobile secure gateway
Runtime application self-protection
.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vte
Part of a series onComputer hacking
History
Phreaking
Cryptovirology
Hacking of consumer electronics
List of hackers

Hacker culture and ethic
Hackathon
Hacker Manifesto
Hackerspace
Hacktivism
Maker culture
Types of hackers
Black hat
Grey hat
White hat

Conferences
Black Hat Briefings
Chaos Communication Congress
DEF CON
Hackers on Planet Earth
Security BSides
ShmooCon
Summercon

Computer crime
Crimeware
List of computer criminals
Script kiddie

Hacking tools
Exploit
forensics-focused operating systems
Payload
Social engineering
Vulnerability

Practice sites
HackThisSite
Zone-H

Malware
Rootkit
Backdoor
Trojan horse
Virus
Worm
Spyware
Ransomware
Logic bomb
Botnet
Keystroke logging
HIDS
Web shell
RCE

Computer security
Application security
Cloud computing security
Network security

Groups
Anonymous
Chaos Computer Club
Homebrew Computer Club (defunct)
Legion of Doom (defunct)
LulzSec (defunct)
Masters of Deception (defunct)
Red team / Blue team

Publications
2600: The Hacker Quarterly
Hacker News
Nuts and Volts
Phrack
vteMalware (a portmanteau for malicious software) is any software intentionally designed to cause disruption to a computer, server, client, or computer network, leak private information, gain unauthorized access to information or systems, deprive users access to information or which unknowingly interferes with the user's computer security and privacy.[1][2][3][4] By contrast, software that causes harm due to some deficiency is typically described as a software bug.[5] Malware poses serious problems to individuals and businesses.[6] According to Symantecâs 2018 Internet Security Threat Report (ISTR), malware variants number has got up to 669,947,865 in 2017, which is twice as many malware variants in 2016.[7]
Many types of malware exist, including computer viruses, worms, Trojan horses, ransomware, spyware, adware, rogue software, wiper, and scareware. The defense strategies against malware differs according to the type of malware but most can be thwarted by installing antivirus software, firewalls, applying regular patches to reduce zero-day attacks, securing networks from intrusion, having regular backups and isolating infected systems. Malware is now being designed to evade antivirus software detection algorithms.[7]

Contents

1 History
2 Purposes
3 Types

3.1 Trojan horse
3.2 Rootkits
3.3 Backdoors
3.4 Infectious Malware

3.4.1 Worm
3.4.2 Virus


3.5 Ransomware

3.5.1 Screen-locking ransomware
3.5.2 Encryption-based ransomware


3.6 Grayware

3.6.1 Potentially Unwanted Program (PUP)




4 Evasion
5 Risks

5.1 Vulnerable software
5.2 Excessive privileges
5.3 Weak passwords
5.4 Use of the same operating system


6 Mitigation

6.1 Antivirus / Anti-malware software

6.1.1 Real-time protection
6.1.2 Sandboxing


6.2 Website security scans
6.3 Network Segregation
6.4 "Air gap" isolation or "parallel network"


7 See also
8 References
9 External links



History[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Main article: History of computer viruses
Further information: Timeline of computer viruses and worms
The notion of a self-reproducing computer program can be traced back to initial theories about the operation of complex automata.[8] John von Neumann showed that in theory a program could reproduce itself. This constituted a plausibility result in computability theory. Fred Cohen experimented with computer viruses and confirmed Neumann's postulate and investigated other properties of malware such as detectability and self-obfuscation using rudimentary encryption. His 1987 doctoral dissertation was on the subject of computer viruses.[9] The combination of cryptographic technology as part of the payload of the virus, exploiting it for attack purposes was initialized and investigated from the mid 1990s, and includes initial ransomware and evasion ideas.[10]
Before Internet access became widespread, viruses spread on personal computers by infecting executable programs or boot sectors of floppy disks. By inserting a copy of itself into the machine code instructions in these programs or boot sectors, a virus causes itself to be run whenever the program is run or the disk is booted. Early computer viruses were written for the Apple II and Macintosh, but they became more widespread with the dominance of the IBM PC and MS-DOS system. The first IBM PC virus in the "wild" was a boot sector virus dubbed (c)Brain,[11] created in 1986 by the Farooq Alvi brothers in Pakistan.[12] Malware distributors would trick the user into booting or running from an infected device or medium. For example, a virus could make an infected computer add autorunnable code to any USB stick plugged into it. Anyone who then attached the stick to another computer set to autorun from USB would in turn become infected, and also pass on the infection in the same way.[13]
Older email software would automatically open HTML email containing potentially malicious JavaScript code. Users may also execute disguised malicious email attachments. The 2018 Data Breach Investigations Report by Verizon, cited by CSO Online, states that emails are the primary method of malware delivery, accounting for 92% of malware delivery around the world.[14][15]
The first worms, network-borne infectious programs, originated not on personal computers, but on multitasking Unix systems. The first well-known worm was the Internet Worm of 1988, which infected SunOS and VAX BSD systems. Unlike a virus, this worm did not insert itself into other programs. Instead, it exploited security holes (vulnerabilities) in network server programs and started itself running as a separate process.[16] This same behavior is used by today's worms as well.[17]
With the rise of the Microsoft Windows platform in the 1990s, and the flexible macros of its applications, it became possible to write infectious code in the macro language of Microsoft Word and similar programs. These macro viruses infect documents and templates rather than applications (executables), but rely on the fact that macros in a Word document are a form of executable code.[18]
Many early infectious programs, including the Morris Worm, the first internet worm, were written as experiments or pranks.[19] Today, malware is used by both black hat hackers and governments to steal personal, financial, or business information.[20][21] Today, any device that plugs into a USB port â even lights, fans, speakers, toys, or peripherals such as a digital microscope â can be used to spread malware. Devices can be infected during manufacturing or supply if quality control is inadequate.[13]

Purposes[edit]
Malware is sometimes used broadly against government or corporate websites to gather guarded information,[22] or to disrupt their operation in general. However, malware can be used against individuals to gain information such as personal identification numbers or details, bank or credit card numbers, and passwords.
Since the rise of widespread broadband Internet access, malicious software has more frequently been designed for profit. Since 2003, the majority of widespread viruses and worms have been designed to take control of users' computers for illicit purposes.[23] Infected "zombie computers" can be used to send email spam, to host contraband data such as child pornography,[24] or to engage in distributed denial-of-service attacks as a form of extortion.[25]
Programs designed to monitor users' web browsing, display unsolicited advertisements, or redirect affiliate marketing revenues are called spyware. Spyware programs do not spread like viruses; instead they are generally installed by exploiting security holes. They can also be hidden and packaged together with unrelated user-installed software.[26] The Sony BMG rootkit was intended to prevent illicit copying; but also reported on users' listening habits, and unintentionally created extra security vulnerabilities.[27]
Ransomware prevents a user from accessing their files until a ransom is paid. There are two variations of ransomware, being crypto ransomware and locker ransomware.[28] Locker ransomware just locks down a computer system without encrypting its contents, whereas crypto ransomware locks down a system and encrypts its contents. For example, programs such as CryptoLocker encrypt files securely, and only decrypt them on payment of a substantial sum of money.[29]
Some malware is used to generate money by click fraud, making it appear that the computer user has clicked an advertising link on a site, generating a payment from the advertiser. It was estimated in 2012 that about 60 to 70% of all active malware used some kind of click fraud, and 22% of all ad-clicks were fraudulent.[30]
In addition to criminal money-making, malware can be used for sabotage, often for political motives. Stuxnet, for example, was designed to disrupt very specific industrial equipment. There have been politically motivated attacks which spread over and shut down large computer networks, including massive deletion of files and corruption of master boot records, described as "computer killing." Such attacks were made on Sony Pictures Entertainment (25 November 2014, using malware known as Shamoon or W32.Disttrack) and Saudi Aramco (August 2012).[31][32]

Types[edit]
These categories are not mutually exclusive, so malware may use multiple techniques.[33]

Trojan horse[edit]
Main article: Trojan horse (computing)
A Trojan horse is a harmful program that misrepresents itself to masquerade as a regular, benign program or utility in order to persuade a victim to install it. A Trojan horse usually carries a hidden destructive function that is activated when the application is started. The term is derived from the Ancient Greek story of the Trojan horse used to invade the city of Troy by stealth.[34][35][36][37][38]
Trojan horses are generally spread by some form of social engineering, for example, where a user is duped into executing an email attachment disguised to be unsuspicious, (e.g., a routine form to be filled in), or by drive-by download. Although their payload can be anything, many modern forms act as a backdoor, contacting a controller (phoning home) which can then have unauthorized access to the affected computer, potentially installing additional software such as a keylogger to steal confidential information, cryptomining software or adware to generate revenue to the operator of the trojan.[39] While Trojan horses and backdoors are not easily detectable by themselves, computers may appear to run slower, emit more heat or fan noise due to heavy processor or network usage, as may occur when cryptomining software is installed. Cryptominers may limit resource usage and/or only run during idle times in an attempt to evade detection.
Unlike computer viruses and worms, Trojan horses generally do not attempt to inject themselves into other files or otherwise propagate themselves.[40]
In spring 2017 Mac users were hit by the new version of Proton Remote Access Trojan (RAT)[41] trained to extract password data from various sources, such as browser auto-fill data, the Mac-OS keychain, and password vaults.[42]

Rootkits[edit]
Main article: Rootkit
Once malicious software is installed on a system, it is essential that it stays concealed, to avoid detection. Software packages known as rootkits allow this concealment, by modifying the host's operating system so that the malware is hidden from the user. Rootkits can prevent a harmful process from being visible in the system's list of processes, or keep its files from being read.[43]
Some types of harmful software contain routines to evade identification and/or removal attempts, not merely to hide themselves. An early example of this behavior is recorded in the Jargon File tale of a pair of programs infesting a Xerox CP-V time sharing system:

.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 40px}.mw-parser-output .templatequote .templatequotecite{line-height:1.5em;text-align:left;padding-left:1.6em;margin-top:0}Each ghost-job would detect the fact that the other had been killed, and would start a new copy of the recently stopped program within a few milliseconds. The only way to kill both ghosts was to kill them simultaneously (very difficult) or to deliberately crash the system.[44]
Backdoors[edit]
Main article: Backdoor (computing)
A backdoor is a method of bypassing normal authentication procedures, usually over a connection to a network such as the Internet. Once a system has been compromised, one or more backdoors may be installed in order to allow access in the future,[45] invisibly to the user.
The idea has often been suggested that computer manufacturers preinstall backdoors on their systems to provide technical support for customers, but this has never been reliably verified. It was reported in 2014 that US government agencies had been diverting computers purchased by those considered "targets" to secret workshops where software or hardware permitting remote access by the agency was installed, considered to be among the most productive operations to obtain access to networks around the world.[46] Backdoors may be installed by Trojan horses, worms, implants, or other methods.[47][48]

Infectious Malware[edit]
The best-known types of malware, viruses and worms, are known for the manner in which they spread, rather than any specific types of behavior and have been likened to biological viruses.[3]  Hex dump of the Blaster worm, showing a message left for Microsoft co-founder Bill Gates by the worm's programmer
Worm[edit]
A  worm is a stand-alone malware software that actively transmits itself over a network to infect other computers and can copy itself without infecting files. These definitions lead to the observation that a virus requires the user to run an infected software or operating system for the virus to spread, whereas a worm spreads itself.[49]

Virus[edit]
Main article: Computer virus
A computer virus is software usually hidden within another seemingly innocuous program that can produce copies of itself and insert them into other programs or files, and that usually performs a harmful action (such as destroying data).[50]  An example of this is a portable execution infection, a technique, usually used to spread malware, that inserts extra data or executable code into PE files.[51] A computer virus is software that embeds itself in some other executable software (including the operating system itself) on the target system without the user's knowledge and consent and when it is run, the virus is spread to other executable files.

Ransomware[edit]
Main article: Ransomware
Screen-locking ransomware[edit]
Lock-screens, or screen lockers is a type of âcyber policeâ ransomware that blocks screens on Windows or Android devices with a false accusation in harvesting illegal content, trying to scare the victims into paying up a fee.[52]
Jisut and SLocker impact Android devices more than other lock-screens, with Jisut making up nearly 60 percent of all Android ransomware detections.[53]

Encryption-based ransomware[edit]
Main article: Ransomware
Encryption-based ransomware, like the name suggests, is a type of ransomware that encrypts all files on an infected machine. These types of malware then display a pop-up informing the user that their files have been encrypted and that they must pay (usually in Bitcoin) to recover them. Some examples of encryption-based ransomware are CryptoLocker and WannaCry.[54]

Grayware[edit]
See also: Privacy-invasive software and Potentially unwanted program
Grayware (sometimes spelled as greyware) is a term, coming into use around 2004, that applies to any unwanted application or file that can worsen the performance of computers and may cause security risks but which is not  typically considered malware.[55][56]  Greyware are applications that behave in an annoying or undesirable manner, and yet are less serious or troublesome than malware. Grayware encompasses spyware, adware, fraudulent dialers, joke programs ("jokeware"), remote access tools and other unwanted programs that may harm the performance of computers or cause inconvenience.  For example, at one point, Sony BMG compact discs silently installed a rootkit on purchasers' computers with the intention of preventing illicit copying.[27]

Potentially Unwanted Program (PUP)[edit]
Potentially unwanted programs (PUPs) or potentially unwanted applications (PUAs) are applications that would be considered unwanted despite being downloaded often by the user, possibly after failing to read a download agreement.[57] PUPs include spyware, adware, and fraudulent dialers. Many security products classify unauthorised key generators as grayware, although they frequently carry true malware in addition to their ostensible purpose. Malwarebytes lists several criteria for classifying a program as a PUP.[58] Some types of adware (using stolen certificates) turn off anti-malware and virus protection; technical remedies are available.[59]

Evasion[edit]
Since the beginning of 2015, a sizable portion of malware has been utilizing a combination of many techniques designed to avoid detection and analysis.[60] From the more common, to the least common:

evasion of analysis and detection by fingerprinting the environment when executed.[61]
confusing automated tools' detection methods. This allows malware to avoid detection by technologies such as signature-based antivirus software by changing the server used by the malware.[62]
timing-based evasion. This is when malware runs at certain times or following certain actions taken by the user, so it executes during certain vulnerable periods, such as during the boot process, while remaining dormant the rest of the time.
obfuscating internal data so that automated tools do not detect the malware.[63]
An increasingly common technique (2015) is adware that uses stolen certificates to disable anti-malware and virus protection; technical remedies are available to deal with the adware.[59]
Nowadays, one of the most sophisticated and stealthy ways of evasion is to use information hiding techniques, namely stegomalware. A survey on stegomalware was published by Cabaj et al. in 2018.[64]
Another type of evasion technique is Fileless malware or Advanced Volatile Threats (AVTs). Fileless malware does not require a file to operate. It runs within memory and utilizes existing system tools to carry out malicious acts. Because there are no files on the system, there are no executable files for antivirus and forensic tools to analyze, making such malware nearly impossible to detect. The only way to detect fileless malware is to catch it operating in real time. Recently these types of attacks have become more frequent with a 432% increase in 2017 and makeup 35% of the attacks in 2018. Such attacks are not easy to perform but are becoming more prevalent with the help of exploit-kits.[65][66]

Risks[edit]
Vulnerable software[edit]
A vulnerability is a weakness, flaw or software bug in an application, a complete computer, an operating system, or a computer network that is exploited by malware to bypass defences or gain privileges it requires to run. For example, TestDisk 6.4 or earlier contained a vulnerability that allowed attackers to inject code into Windows.[67] Malware can exploit security defects (security bugs or vulnerabilities) in the operating system, applications (such as browsers, e.g. older versions of Microsoft Internet Explorer supported by Windows XP[68]), or in vulnerable versions of browser plugins such as Adobe Flash Player, Adobe Acrobat or Reader, or Java SE.[69][70] For example,  a common method is exploitation of a buffer overrun vulnerability, where software designed to store data in a specified region of memory does not prevent more data than the buffer can accommodate being supplied. Malware may provide data that overflows the buffer, with malicious executable code or data after the end; when this payload is accessed it does what the attacker, not the legitimate software, determines.
Malware can exploit recently discovered vulnerabilities before developers have had time to release a suitable patch.[6] Even when new patches addressing the vulnerability have been released, they may not necessarily be installed immediately, allowing malware to take advantage of systems lacking patches. Sometimes even applying patches or installing new versions does not automatically uninstall the old versions. Security advisories from plug-in providers announce security-related updates.[71] Common vulnerabilities are assigned CVE IDs and listed in the US National Vulnerability Database. Secunia PSI[72] is an example of software, free for personal use, that will check a PC for vulnerable out-of-date software, and attempt to update it. Other approaches involve using firewalls and intrusion prevention systems to monitor unusual traffic patterns on the local computer network.[73]

Excessive privileges[edit]
Users and programs can be assigned more privileges than they require, and malware can take advantage of this. For example, of 940 Android apps sampled, one third of them asked for more privileges than they required.[74] Apps targeting the Android platform can be a major source of malware infection but one solution is to use third party software to detect apps that have been assigned excessive privileges.[75]
Some systems allow all users to modify their internal structures, and such users today would be considered over-privileged users. This was the standard operating procedure for early microcomputer and home computer systems, where there was no distinction between an administrator or root, and a regular user of the system. In some systems, non-administrator users are over-privileged by design, in the sense that they are allowed to modify internal structures of the system. In some environments, users are over-privileged because they have been inappropriately granted administrator or equivalent status.[76] This can be because users tend to demand more privileges than they need, so often end up being assigned unnecessary privileges.[77]
Some systems allow code executed by a user to access all rights of that user, which is known as over-privileged code. This was also standard operating procedure for early microcomputer and home computer systems. Malware, running as over-privileged code, can use this privilege to subvert the system. Almost all currently popular operating systems, and also many scripting applications allow code too many privileges, usually in the sense that when a user executes code, the system allows that code all rights of that user.

Weak passwords[edit]
A credential attack occurs when a user account with administrative privileges is cracked and that account is used to provide malware with appropriate privileges.[78] Typically, the attack succeeds because the weakest form of account security is used, which is typically a short password that can be cracked using a dictionary or brute force attack. Using strong passwords and enabling two-factor authentication can reduce this risk. With the latter enabled, even if an attacker can crack the password, they cannot use the account without also having the token possessed by the legitimate user of that account.

Use of the same operating system[edit]
Homogeneity can be a vulnerability. For example, when all computers in a network run the same operating system, upon exploiting one, one worm can exploit them all:[79] In particular, Microsoft Windows or Mac OS X have such a large share of the market that an exploited vulnerability concentrating on either operating system could subvert a large number of systems. It is estimated that approximately 83% of malware infections between January and March 2020 were spread via systems running Windows 10.[80] This risk is mitigated by segmenting the networks into different subnetworks and setting up firewalls to block traffic between them.[81][82]

Mitigation[edit]
Antivirus / Anti-malware software[edit]
Anti-malware (sometimes also called antivirus) programs block and remove some or all types of malware. For example, Microsoft Security Essentials (for Windows XP, Vista, and Windows 7) and Windows Defender (for Windows 8, 10 and 11) provides real-time protection. The Windows Malicious Software Removal Tool removes malicious software from the system.[83] Additionally, several capable antivirus software programs are available for free download from the Internet (usually restricted to non-commercial use).[84] Tests found some free programs to be competitive with commercial ones.[84][85][86]
Typically, antivirus software can combat malware in the following ways:

Real-time protection: They can provide real time protection against the installation of malware software on a computer. This type of malware protection works the same way as that of antivirus protection in that the anti-malware software scans all incoming network data for malware and blocks any threats it comes across.
Removal: Anti-malware software programs can be used solely for detection and removal of malware software that has already been installed onto a computer. This type of anti-malware software scans the contents of the Windows registry, operating system files, and installed programs on a computer and will provide a list of any threats found, allowing the user to choose which files to delete or keep, or to compare this list to a list of known malware components, removing files that match.[87]
Sandboxing: Provide sandboxing of apps considered dangerous (such as web browsers where most vulnerabilities are likely to be installed from).[88]
Real-time protection[edit]
A specific component of anti-malware software, commonly referred to as an on-access or real-time scanner, hooks deep into the operating system's core or kernel and functions in a manner similar to how certain malware itself would attempt to operate, though with the user's informed permission for protecting the system. Any time the operating system accesses a file, the on-access scanner checks if the file infected or not. Typically, when an infected file is found, execution is stopped and the file is quarantined to prevent further damage with the intention to prevent irreversible system damage. Most AVs allow users to override this behaviour. This can have a considerable performance impact on the operating system, though the degree of impact is dependent on how many pages it creates in virtual memory.[89]

Sandboxing[edit]
Because many malware components are installed as a result of browser exploits or user error, using security software (some of which are anti-malware, though many are not) to "sandbox" browsers (essentially isolate the browser from the computer and hence any malware induced change) can also be effective in helping to restrict any damage done.[88]

Website security scans[edit]
Website vulnerability scans check the website, detect malware, may note outdated software, and may report known security issues, in order to reduce the risk of the site being compromised.

Network Segregation[edit]
Structuring a network as a set of smaller networks, and limiting the flow of traffic between them to that known to be legitimate, can hinder the ability of infectious malware to replicate itself across the wider network. Software Defined Networking provides techniques to implement such controls.

"Air gap" isolation or "parallel network"[edit]
As a last resort, computers can be protected from malware, and the risk of infected computers disseminating trusted information can be greatly reduced by imposing an "air gap" (i.e. completely disconnecting them from all other networks) and applying enhanced controls over the entry and exit of software and data from the outside world. However, malware can still cross the air gap in some situations, not least due to the need to introduce software into the air-gapped network and can damage the availability or integrity of assets thereon. Stuxnet is an example of malware that is introduced to the target environment via a USB drive, causing damage to processes supported on the environment without the need to exfiltrate data.
AirHopper,[90] BitWhisper,[91] GSMem [92] and Fansmitter[93] are four techniques introduced by researchers that can leak data from air-gapped computers using electromagnetic, thermal and acoustic emissions.

See also[edit]
.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}
Botnet
Browser hijacking
Comparison of antivirus software
Computer security
Cuckoo's egg (metaphor)
Cyber spying
Domain generation algorithm
Facebook malware
File binder
Identity theft
Industrial espionage
Linux malware
Malvertising
Phishing
Riskware
Security in Web apps
Social engineering (security)
Targeted threat
Technical support scam
Telemetry software
Typosquatting
Web server overload causes
Webattacker
Zombie (computer science)

References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"Defining Malware: FAQ". technet.microsoft.com. Retrieved 10 September 2009.

^ "An Undirected Attack Against Critical Infrastructure" (PDF). United States Computer Emergency Readiness Team(Us-cert.gov). Retrieved 28 September 2014.

^ a b Cani, Andrea; Gaudesi, Marco; Sanchez, Ernesto; Squillero, Giovanni; Tonda, Alberto (24 March 2014). "Towards automated malware creation: code generation and code integration". Proceedings of the 29th Annual ACM Symposium on Applied Computing. SAC '14. New York, NY, USA: Association for Computing Machinery: 157â160. doi:10.1145/2554850.2555157. ISBNÂ 978-1-4503-2469-4. S2CIDÂ 14324560.

^ Brewer, Ross (1 September 2016). "Ransomware attacks: detection, prevention and cure". Network Security. 2016 (9): 5â9. doi:10.1016/S1353-4858(16)30086-1. ISSNÂ 1353-4858.

^ Klein, Tobias (11 October 2011). A Bug Hunter's Diary: A Guided Tour Through the Wilds of Software Security. No Starch Press. ISBNÂ 978-1-59327-415-3.

^ a b Kim, Jin-Young; Bu, Seok-Jun; Cho, Sung-Bae (1 September 2018). "Zero-day malware detection using transferred generative adversarial networks based on deep autoencoders". Information Sciences. 460â461: 83â102. doi:10.1016/j.ins.2018.04.092. ISSNÂ 0020-0255. S2CIDÂ 51882216.

^ a b Xiao, Fei; Sun, Yi; Du, Donggao; Li, Xuelei; Luo, Min (21 March 2020). "A Novel Malware Classification Method Based on Crucial Behavior". Mathematical Problems in Engineering. 2020: 1â12. doi:10.1155/2020/6804290. ISSNÂ 1024-123X.

^ John von Neumann, "Theory of Self-Reproducing Automata", Part 1: Transcripts of lectures given at the University of Illinois, December 1949, Editor: A. W. Burks, University of Illinois, USA, 1966.

^ Fred Cohen, "Computer Viruses", PhD Thesis, University of Southern California, ASP Press, 1988.

^ Young, Adam; Yung, Moti (2004). Malicious cryptography - exposing cryptovirology. Wiley. pp.Â 1â392. ISBNÂ 978-0-7645-4975-5.

^ "Boot sector virus repair". Antivirus.about.com. 10 June 2010. Archived from the original on 12 January 2011. Retrieved 27 August 2010.

^ Avoine, Gildas; Pascal Junod; Philippe Oechslin (2007). Computer system security: basic concepts and solved exercises. EFPL Press. p.Â 20. ISBNÂ 978-1-4200-4620-5. The first PC virus is credited to two brothers, Basit Farooq Alvi and Amjad Farooq Alvi, from Pakistan

^ a b "USB devices spreading viruses". CNET. CBS Interactive. Retrieved 18 February 2015.

^ https://enterprise.verizon.com/resources/reports/DBIR_2018_Report.pdf

^ Fruhlinger, Josh (10 October 2018). "Top cybersecurity facts, figures and statistics for 2018". CSO Online. Retrieved 20 January 2020.

^ William A Hendric (4 September 2014). "Computer Virus history". The Register. Retrieved 29 March 2015.

^ "Cryptomining Worm MassMiner Exploits Multiple Vulnerabilities - Security Boulevard". Security Boulevard. 2 May 2018. Retrieved 9 May 2018.

^ "Beware of Word Document Viruses". us.norton.com. Retrieved 25 September 2017.

^ Tipton, Harold F. (26 December 2002). Information Security Management Handbook. CRC Press. ISBNÂ 978-1-4200-7241-9.

^ "Malware". FEDERAL TRADE COMMISSION- CONSUMER INFORMATION. Retrieved 27 March 2014.

^ Hernandez, Pedro. "Microsoft Vows to Combat Government Cyber-Spying". eWeek. Retrieved 15 December 2013.

^ Kovacs, Eduard (27 February 2013). "MiniDuke Malware Used Against European Government Organizations". Softpedia. Retrieved 27 February 2013.

^ "Malware Revolution: A Change in Target". March 2007.

^ "Child Porn: Malware's Ultimate Evil". November 2009.

^ PC World â Zombie PCs: Silent, Growing Threat.

^ "Peer To Peer Information". NORTH CAROLINA STATE UNIVERSITY. Retrieved 25 March 2011.

^ a b Russinovich, Mark (31 October 2005). "Sony, Rootkits and Digital Rights Management Gone Too Far". Mark's Blog. Microsoft MSDN. Retrieved 29 July 2009.

^ Richardson, Ronny; North, Max (1 January 2017). "Ransomware: Evolution, Mitigation and Prevention". International Management Review. 13 (1): 10â21.

^ Fruhlinger, Josh (1 August 2017). "The 5 biggest ransomware attacks of the last 5 years". CSO. Retrieved 23 March 2018.

^ "Another way Microsoft is disrupting the malware ecosystem". Archived from the original on 20 September 2015. Retrieved 18 February 2015.

^ "Shamoon is latest malware to target energy sector". Retrieved 18 February 2015.

^ "Computer-killing malware used in Sony attack a wake-up call". Retrieved 18 February 2015.

^ "All about Malware and Information Privacy - TechAcute". techacute.com. 31 August 2014.

^ Landwehr, C. E; A. R Bull; J. P McDermott; W. S Choi (1993). A taxonomy of computer program security flaws, with examples. DTIC Document. Retrieved 5 April 2012.

^ "Trojan Horse Definition". Retrieved 5 April 2012.

^ "Trojan horse". Webopedia. Retrieved 5 April 2012.

^ "What is Trojan horse? â Definition from Whatis.com". Retrieved 5 April 2012.

^ "Trojan Horse: [coined By MIT-hacker-turned-NSA-spook Dan Edwards] N." Archived from the original on 5 July 2017. Retrieved 5 April 2012.

^ "What is the difference between viruses, worms, and Trojan horses?". Symantec Corporation. Retrieved 10 January 2009.

^ "VIRUS-L/comp.virus Frequently Asked Questions (FAQ) v2.00 (Question B3: What is a Trojan Horse?)". 9 October 1995. Retrieved 13 September 2012.

^ "Proton Mac Trojan Has Apple Code Signing Signatures Sold to Customers for $50k". AppleInsider.

^ "Non-Windows Malware". Betanews. 24 August 2017.

^ McDowell, Mindi. "Understanding Hidden Threats: Rootkits and Botnets". US-CERT. Retrieved 6 February 2013.

^ "The Meaning of 'Hack'". Catb.org. Retrieved 15 April 2010.

^ Vincentas (11 July 2013). "Malware in SpyWareLoop.com". Spyware Loop. Retrieved 28 July 2013.

^ Staff, SPIEGEL (29 December 2013). "Inside TAO: Documents Reveal Top NSA Hacking Unit". Spiegel Online. SPIEGEL. Retrieved 23 January 2014.

^ Edwards, John. "Top Zombie, Trojan Horse and Bot Threats". IT Security. Archived from the original on 9 February 2017. Retrieved 25 September 2007.

^ Appelbaum, Jacob (29 December 2013). "Shopping for Spy Gear:Catalog Advertises NSA Toolbox". Spiegel Online. SPIEGEL. Retrieved 29 December 2013.

^ "computer virus â EncyclopÃ¦dia Britannica". Britannica.com. Retrieved 28 April 2013.

^ "What are viruses, worms, and Trojan horses?". Indiana University. The Trustees of Indiana University. Retrieved 23 February 2015.

^ Peter Szor (3 February 2005). The Art of Computer Virus Research and Defense. Pearson Education. p.Â 204. ISBNÂ 978-0-672-33390-3.

^ "Rise of Android Ransomware, research" (PDF). ESET.

^ "State of Malware, research" (PDF). Malwarebytes.

^ O'Kane, P., Sezer, S. and Carlin, D. (2018), Evolution of ransomware. IET Netw., 7: 321-327. https://doi.org/10.1049/iet-net.2017.0207

^ Vincentas (11 July 2013). "Grayware in SpyWareLoop.com". Spyware Loop. Archived from the original on 15 July 2014. Retrieved 28 July 2013.

^ "Threat Encyclopedia â Generic Grayware". Trend Micro. Retrieved 27 November 2012.

^ "Rating the best anti-malware solutions". Arstechnica. 15 December 2009. Retrieved 28 January 2014.

^ "PUP Criteria". malwarebytes.org. Retrieved 13 February 2015.

^ a b Casey, Henry T. (25 November 2015). "Latest adware disables antivirus software". Tom's Guide. Yahoo.com. Retrieved 25 November 2015.

^ "Evasive malware goes mainstream - Help Net Security". net-security.org. 22 April 2015.

^ Kirat, Dhilung; Vigna, Giovanni; Kruegel, Christopher (2014). Barecloud: bare-metal analysis-based evasive malware detection. ACM. pp.Â 287â301. ISBNÂ 978-1-931971-15-7.  Freely accessible at: "Barecloud: bare-metal analysis-based evasive malware detection" (PDF).

^ The Four Most Common Evasive Techniques Used by Malware. 27 April 2015.

^ Young, Adam; Yung, Moti (1997). "Deniable Password Snatching: On the Possibility of Evasive Electronic Espionage". Symp. on Security and Privacy. IEEE. pp.Â 224â235. ISBNÂ 0-8186-7828-3.

^ Cabaj, Krzysztof; Caviglione, Luca; Mazurczyk, Wojciech; Wendzel, Steffen; Woodward, Alan; Zander, Sebastian (May 2018). "The New Threats of Information Hiding: The Road Ahead". IT Professional. 20 (3): 31â39. arXiv:1801.00694. doi:10.1109/MITP.2018.032501746. S2CIDÂ 22328658.

^ "Penn State WebAccess Secure Login". webaccess.psu.edu. doi:10.1145/3365001. Retrieved 29 February 2020.

^ "Malware Dynamic Analysis Evasion Techniques: A Survey". ResearchGate. Retrieved 29 February 2020.

^ NÃ©meth, Z. L. (2015). Modern binary attacks and defences in the windows environmentâFighting against microsoft EMET in seven rounds. 2015 IEEE 13th International Symposium on Intelligent Systems and Informatics (SISY), 275â280. https://doi.org/10.1109/SISY.2015.7325394

^ "Global Web Browser... Security Trends" (PDF). Kaspersky lab. November 2012.

^ Rashid, Fahmida Y. (27 November 2012). "Updated Browsers Still Vulnerable to Attack if Plugins Are Outdated". pcmag.com. Archived from the original on 9 April 2016. Retrieved 17 January 2013.

^ Danchev, Dancho (18 August 2011). "Kaspersky: 12 different vulnerabilities detected on every PC". pcmag.com.

^ "Adobe Security bulletins and advisories". Adobe.com. Retrieved 19 January 2013.

^ Rubenking, Neil J. "Secunia Personal Software Inspector 3.0 Review & Rating". PCMag.com. Retrieved 19 January 2013.

^ Morales, Jose Andre; Al-Bataineh, Areej; Xu, Shouhuai; Sandhu, Ravi (2010).  Jajodia, Sushil; Zhou, Jianying (eds.). "Analyzing and Exploiting Network Behaviors of Malware". Security and Privacy in Communication Networks. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering. Berlin, Heidelberg: Springer. 50: 20â34. doi:10.1007/978-3-642-16161-2_2. ISBNÂ 978-3-642-16161-2.

^ Felt, Adrienne Porter; Chin, Erika; Hanna, Steve; Song, Dawn; Wagner, David (17 October 2011). "Android permissions demystified". Proceedings of the 18th ACM Conference on Computer and Communications Security. CCS '11. New York, NY, USA: Association for Computing Machinery: 627â638. doi:10.1145/2046707.2046779. ISBNÂ 978-1-4503-0948-6. S2CIDÂ 895039.

^ Wu, Sha; Liu, Jiajia (May 2019). "Overprivileged Permission Detection for Android Applications". ICC 2019 - 2019 IEEE International Conference on Communications (ICC): 1â6. doi:10.1109/ICC.2019.8761572. ISBNÂ 978-1-5386-8088-9. S2CIDÂ 198168673.

^ "Malware, viruses, worms, Trojan horses and spyware". list.ercacinnican.tk. Retrieved 14 November 2020.

^ Mutch, John; Anderson, Brian (2011),  Mutch, John; Anderson, Brian (eds.), "The Hard and Soft Cost of Apathy", Preventing Good People from doing Bad Things: Implementing Least Privilege, Berkeley, CA: Apress, pp.Â 163â175, doi:10.1007/978-1-4302-3922-2_10, ISBNÂ 978-1-4302-3922-2, retrieved 2 December 2021

^ Singh, Vaishali; Pandey, S. K. (2021).  Rathore, Vijay Singh; Dey, Nilanjan; Piuri, Vincenzo; Babo, Rosalina; Polkowski, Zdzislaw; Tavares, JoÃ£o Manuel R. S. (eds.). "Revisiting Cloud Security Attacks: Credential Attack". Rising Threats in Expert Applications and Solutions. Advances in Intelligent Systems and Computing. Singapore: Springer. 1187: 339â350. doi:10.1007/978-981-15-6014-9_39. ISBNÂ 978-981-15-6014-9. S2CIDÂ 224940546.

^ "LNCS 3786 â Key Factors Influencing Worm Infection", U. Kanlayasiri, 2006, web (PDF): SL40-PDF.

^ Cohen, Jason (28 August 2020). "Windows Computers Account for 83% of All Malware Attacks in Q1 2020". PCMag Australia. Retrieved 2 December 2021.

^ Wagner, Neal; Åahin, Cem Å.; Winterrose, Michael; Riordan, James; Pena, Jaime; Hanson, Diana; Streilein, William W. (December 2016). "Towards automated cyber decision support: A case study on network segmentation for security". 2016 IEEE Symposium Series on Computational Intelligence (SSCI): 1â10. doi:10.1109/SSCI.2016.7849908. ISBNÂ 978-1-5090-4240-1. S2CIDÂ 9065830.

^ Hemberg, Erik; Zipkin, Joseph R.; Skowyra, Richard W.; Wagner, Neal; O'Reilly, Una-May (6 July 2018). "Adversarial co-evolution of attack and defense in a segmented computer network environment". Proceedings of the Genetic and Evolutionary Computation Conference Companion. GECCO '18. New York, NY, USA: Association for Computing Machinery: 1648â1655. doi:10.1145/3205651.3208287. ISBNÂ 978-1-4503-5764-7. S2CIDÂ 51603533.

^ "Malicious Software Removal Tool". Microsoft. Archived from the original on 21 June 2012. Retrieved 21 June 2012.

^ a b Rubenking, Neil J. (8 January 2014). "The Best Free Antivirus for 2014". pcmag.com.

^ "Free antivirus profiles in 2018". antivirusgratis.org. Archived from the original on 10 August 2018. Retrieved 13 February 2020.

^ "Quickly identify malware running on your PC". techadvisor.co.uk.

^ "How Antivirus Software Works?". Retrieved 16 October 2015.

^ a b Souppaya, Murugiah; Scarfone, Karen (July 2013). "Guide to Malware Incident Prevention and Handling for Desktops and Laptops". National Institute of Standards and Technology. doi:10.6028/nist.sp.800-83r1. {{cite journal}}: Cite journal requires |journal= (help)

^ Al-Saleh, Mohammed Ibrahim; Espinoza, Antonio M.; Crandall, Jedediah R. (2013). "Antivirus performance characterisation: system-wide view". IET Information Security. 7 (2): 126â133. doi:10.1049/iet-ifs.2012.0192. ISSNÂ 1751-8717.

^ M. Guri, G. Kedma, A. Kachlon and Y. Elovici, "AirHopper: Bridging the air-gap between isolated networks and mobile phones using radio frequencies," Malicious and Unwanted Software: The Americas (MALWARE), 2014 9th International Conference on, Fajardo, PR, 2014, pp. 58-67.

^ M. Guri, M. Monitz, Y. Mirski and Y. Elovici, "BitWhisper: Covert Signaling Channel between Air-Gapped Computers Using Thermal Manipulations," 2015 IEEE 28th Computer Security Foundations Symposium, Verona, 2015, pp. 276-289.

^ GSMem: Data Exfiltration from Air-Gapped Computers over GSM Frequencies. Mordechai Guri, Assaf Kachlon, Ofer Hasson, Gabi Kedma, Yisroel Mirsky, and Yuval Elovici, Ben-Gurion University of the Negev; USENIX Security Symposium 2015

^ Hanspach, Michael; Goetz, Michael; Daidakulov, Andrey; Elovici, Yuval (2016). "Fansmitter: Acoustic Data Exfiltration from (Speakerless) Air-Gapped Computers". arXiv:1606.05915 [cs.CR].


External links[edit]



Look up malware in Wiktionary, the free dictionary.




Wikimedia Commons has media related to Malware.

Malicious Software at Curlie
Further Reading: Research Papers and Documents about Malware on IDMARCH (Int. Digital Media Archive)
Advanced Malware Cleaning â a Microsoft video
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}vteMalware topicsInfectious malware
Comparison of computer viruses
Computer virus
Computer worm
List of computer worms
Timeline of computer viruses and worms
Concealment
Backdoor
Clickjacking
Man-in-the-browser
Man-in-the-middle
Rootkit
Trojan horse
Zombie computer
Malware for profit
Adware
Botnet
Crimeware
Fleeceware
Form grabbing
Fraudulent dialer
Malbot
Keystroke logging
Privacy-invasive software
Ransomware
Rogue security software
Scareware
Spyware
Web threats
By operating system
Android malware
Classic Mac OS viruses
iOS malware
Linux malware
MacOS malware
Macro virus
Mobile malware
Palm OS viruses
HyperCard viruses
Protection
Anti-keylogger
Antivirus software
Browser security
Data loss prevention software
Defensive computing
Firewall
Internet security
Intrusion detection system
Mobile security
Network security
Countermeasures
Computer and network surveillance
Honeypot
Operation: Bot Roast

vteSoftware distributionLicenses
Beerware
Floating licensing
Free and open-source
Free
Open source
Freely redistributable
Proprietary
Public domain
Source-available
Compensation models
Adware
Commercial software
Retail software
Crippleware
Crowdfunding
Freemium
Freeware
Pay what you want
Careware
Donationware
Open-core model
Postcardware
Shareware
Nagware
Delivery methods
Digital distribution
File sharing
On-premises
Pre-installed
Product bundling
Retail software
Sneakernet
Software as a service
Deceptive and/or illicit
Unwanted software bundling
Malware
Spyware
Trojan horse
Worm
Ransomware
Scareware
Shovelware
Vaporware
list
Software release life cycle
Abandonware
End-of-life
Long-term support
Software maintenance
Software maintainer
Software publisher
Copy protection
Digital rights management
Software protection dongle
Hardware restrictions
License manager
Product activation
Product key
Software copyright
Software patent
Torrent poisoning

.mw-parser-output .portal-bar{font-size:88%;font-weight:bold;display:flex;justify-content:center;align-items:baseline}.mw-parser-output .portal-bar-bordered{padding:0 2em;background-color:#fdfdfd;border:1px solid #a2a9b1;clear:both;margin:1em auto 0}.mw-parser-output .portal-bar-unbordered{padding:0 1.7em;margin-left:0}.mw-parser-output .portal-bar-header{margin:0 1em 0 0.5em;padding:0.2em 0;flex:0 0 auto;min-height:24px;line-height:22px}.mw-parser-output .portal-bar-content{display:flex;flex-flow:row wrap;align-items:baseline;flex:0 1 auto;padding:0.15em 0;column-gap:1em}.mw-parser-output .portal-bar-item{display:flex;align-items:baseline;margin:0.15em 0;min-height:24px;text-align:left}.mw-parser-output .portal-bar-logo{width:22px;line-height:22px;margin:0 0.2em;text-align:right}.mw-parser-output .portal-bar-link{margin:0 0.2em;text-align:left}@media screen and (max-width:768px){.mw-parser-output .portal-bar{font-size:88%;font-weight:bold;display:flex;flex-flow:column wrap}.mw-parser-output .portal-bar-header{text-align:center;flex:0;padding-left:0.5em;margin:0 auto}.mw-parser-output .portal-bar-content{display:flex;flex-flow:row wrap;align-items:baseline;flex:0;margin:0 auto;column-gap:1em;border-top:1px solid #a2a9b1}}.mw-parser-output .navbox+link+.portal-bar-bordered{margin-top:-1px}.mw-parser-output .navbox+style+.portal-bar-bordered{margin-top:-1px}.mw-parser-output .portal-bar+.navbox-styles+.navbox{margin-top:-1px}Portal:Internet
Authority control General
Integrated Authority File (Germany)
National libraries
United States





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Malware&oldid=1069538785"
		Categories: MalwareComputer security exploitsSecurity breachesComputer programmingCybercrimeHidden categories: CS1: long volume valueCS1 errors: missing periodicalArticles with short descriptionShort description is different from WikidataUse dmy dates from August 2017Commons category link from WikidataArticles with Curlie linksArticles with GND identifiersArticles with LCCN identifiers
	
