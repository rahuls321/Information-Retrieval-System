
Title:
Parametric design
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		hideThis article has multiple issues. Please help improve it or discuss these issues on the talk page. (Learn how and when to remove these template messages)

      This article may be confusing or unclear to readers. Please help clarify the article. There might be a discussion about this on the talk page.  (November 2016) (Learn how and when to remove this template message)
The neutrality of this article is disputed. Relevant discussion may be found on the talk page. Please do not remove this message until conditions to do so are met.  (December 2015) (Learn how and when to remove this template message)
    
 (Learn how and when to remove this template message)
  Sharan Architecture+Design
Parametric design is a process based on algorithmic thinking that enables the expression of parameters and rules that, together, define, encode and clarify the relationship between design intent and design response.[1][2]
Parametric design is a paradigm in design where the relationship between elements is used to manipulate and inform the design of complex geometries and structures. 
The term parametric originates from mathematics (parametric equation) and refers to the use of certain parameters or variables that can be edited to manipulate or alter the end result of an equation or system. While today the term is used in reference to computational design systems, there are precedents for these modern systems in the works of architects such as Antoni GaudÃ­, who used analog models to explore design space.[3]
Parametric modeling systems can be divided into two main types:

Propagation-based systems where one computes from known to unknowns with a dataflow model.
Constraint systems which solve sets of continuous and discrete constraints.[4]
Form-finding is one of the strategies implemented through propagation-based systems. The idea behind form-finding is to optimize certain design goals against a set of design constraints.[4]

Contents

1 History (early examples)

1.1 Analogue parametric design

1.1.1 Features of Gaudi's method




2 Architecture
3 Urban design
4 Software

4.1 Power Surfacing
4.2 Catia
4.3 Autodesk 3DS Max
4.4 Autodesk Maya
4.5 Grasshopper 3D
4.6 Autodesk Revit
4.7 Autodesk Dynamo
4.8 GenerativeComponents
4.9 VIKTOR
4.10 Marionette
4.11 Modelur
4.12 Archimatix


5 See also
6 References



History (early examples)[edit]
Analogue parametric design[edit]
  An upside down force model of the Sagrada FamÃ­lia, Sagrada FamÃ­lia Museum
One of the earliest examples of parametric design was the upside down model of churches by Antonio Gaudi. In his design for the Church of ColÃ²nia GÃ¼ell he created a model of strings weighted down with birdshot to create complex vaulted ceilings and arches. By adjusting the position of the weights or the length of the strings he could alter the shape of each arch and also see how this change influenced the arches connected to it. He placed a mirror on the bottom of the model to see how it should look upside-down.

Features of Gaudi's method[edit]
Gaudi's analogue method includes the main features of a computational of a parametric model (input parameters, equation, output):

The string length, birdshot weight and anchor point location all form independent input parameters
The vertex locations of the points on the strings being the outcomes of the model
The outcomes are derived by explicit functions, in this case gravity or Newtons law of motion.
By modifying individual parameters of these models Gaudi could generate different versions of his model while being certain the resulting structure would stand in pure compression.
Instead of having to manually calculate the results of parametric equations he could automatically derive the shape of the catenary curves through the force of gravity acting on the strings.[5]

Architecture[edit]
  Departure Hall of Shenzhen Bao'an International Airport
Nature has often served as inspiration for architects and designers.[citation needed] Computer technology has given designers and architects the tools to analyse and simulate the complexity observed in nature and apply it to structural building shapes and urban organizational patterns. In the 1980s architects and designers started using computers running software developed for the aerospace and moving picture industries to "animate form".[6]
One of the first architects and theorists that used computers to generate architecture was Greg Lynn. His blob and fold architecture is some of the early examples of computer generated architecture. Shenzhen Bao'an International Airport's new Terminal 3, finished in 2013, designed by Italian architect Massimiliano Fuksas, with parametric design support by the engineering firm Knippers Helbig, is an example for the use of parametric design and production technologies in a large scale building.

Urban design[edit]
Parametric urbanism is concerned with the study and prediction of settlement patterns. Architect Frei Otto distinguishes occupying and connecting as the two fundamental processes that are involved with all urbanisation.[7] Studies look at producing solutions that reduce overall path length in systems while maintaining low average detour factor or facade differentiation[clarification needed].

Software[edit]
This section contains content that is written like an advertisement. Please help improve it by removing promotional content and inappropriate external links, and by adding encyclopedic content written from a neutral point of view.  (July 2021) (Learn how and when to remove this template message)
Power Surfacing[edit]
Power Surfacing is a SolidWorks application for industrial design / freeform organic surface / solids modeling. Tightly integrated with SolidWorks, it works with all SolidWorks commands. Scanned meshes can be reverse engineered with Power Surfacing RE.

Catia[edit]
CATIA (Computer-aided three-dimensional interactive application) was used by architect Frank Gehry to design some of his award-winning curvilinear buildings such as the Guggenheim Museum Bilbao.[8] Gehry Technologies, the technology arm of his firm, have since created Digital Project, their own parametric design software based on their experience with CATIA.

Autodesk 3DS Max[edit]
Autodesk 3ds Max is a parametric 3D modeling software which provides modeling, animation, simulation, and rendering functions for games, film, and motion graphics. 3ds Max uses the concept of modifiers and wired parameters to control its geometry and gives the user the ability to script its functionality. Max Creation Graph is a visual programming node-based tool creation environment in 3ds Max 2016 that is similar to Grasshopper and Dynamo.

Autodesk Maya[edit]
Autodesk Maya is a 3D computer graphics software originally developed by Alias Systems Corporation (formerly Alias|Wavefront) and currently owned and developed by Autodesk, Inc. It is used to create interactive 3D applications, including video games, animated film, TV series, or visual effects. Maya exposes a node graph architecture. Scene elements are node-based, each node having its own attributes and customization. As a result, the visual representation of a scene is based on a network of interconnecting nodes, depending on each other's information. Maya is equipped with a cross-platform scripting language, called Maya Embedded Language. MEL is provided for scripting and a means to customize the core functionality of the software, since many of the tools and commands used are written in it. MEL or Python can be used to engineer modifications, plug-ins or be injected into runtime. User interaction is recorded in MEL, allowing novice users to implement subroutines.

Grasshopper 3D[edit]
  The Grasshopper canvas with some nodes
Grasshopper 3d (originally Explicit History) is a plug-in for Rhinoceros 3D that presents the users with a visual programming language interface to create and edit geometry.[9]
Components or nodes are dragged onto a canvas in order to build a grasshopper definition. Grasshopper is based on graphs (see Graph (discrete mathematics)) that map the flow of relations from parameters through user-defined functions (nodes), resulting in the generation of geometry. Changing parameters or geometry causes the changes to propagate throughout all functions, and the geometry to be redrawn.[5]

Autodesk Revit[edit]
Autodesk Revit is building information modeling (BIM) software used by architects and other building professionals. Revit was developed in response to the need for software that could create three-dimensional parametric models that include both geometry and non-geometric design and construction information. Every change made to an element in Revit is automatically propagated through the model to keep all components, views and annotations consistent. This eases collaboration between teams and ensures that all information (floor areas, schedules, etc.) are updated dynamically when changes in the model are made.

Autodesk Dynamo[edit]
Dynamo is an open source graphical programming environment for design. Dynamo extends building information modeling with the data and logic environment of a graphical algorithm editor.

GenerativeComponents[edit]
GenerativeComponents, parametric CAD software developed by Bentley Systems,[10] was first introduced in 2003, became increasingly used in practice (especially by the London architectural community) by early 2005, and was commercially released in November 2007. GenerativeComponents has a strong traditional base of users in academia and at technologically advanced design firms.[citation needed] GenerativeComponents is often referred to by the nickname of 'GC'. GC epitomizes the quest to bring parametric modeling capabilities of 3D solid modeling into architectural design, seeking to provide greater fluidity and fluency than mechanical 3D solid modeling.[citation needed]
Users can interact with the software by either dynamically modeling and directly manipulating geometry, or by applying rules and capturing relationships among model elements, or by defining complex forms and systems through concisely expressed algorithms. The software supports many industry standard file input and outputs including DGN by Bentley Systems, DWG by Autodesk, STL (Stereo Lithography), Rhino, and others. The software can also integrate with Building Information Modeling systems.
The software has a published API and uses a simple scripting language, both allowing the integration with many different software tools, and the creation of custom programs by users.
This software is primarily used by architects and engineers in the design of buildings, but has also been used to model natural and biological structures and mathematical systems.
Generative Components runs exclusively on Microsoft Windows operating systems.

VIKTOR[edit]
VIKTOR is an application development platform that enables engineers and other domain experts to rapidly build their own online applications using Python. It is used to create parametric design models and integrates with many software packages.[11] It enables users to make intuitive user interfaces (GUI), which include different form of visualizing results like 3D models, drawings, map or satellite views, and interactive graphs. This makes it possible to make the applications available to persons without programming affinity. 
Applications made with VIKTOR are online, meaning data is update automatically and everyone works with the same information and the latest models. It includes a user management system, allowing to give different rights to users. 

Marionette[edit]
Marionette is an open source[citation needed] graphical scripting tool (or visual programming environment) for the architecture, engineering, construction, landscape, and entertainment design industries that is built into the Mac and Windows versions of Vectorworks software. The tool was first made available in the Vectorworks 2016 line of software products. Marionette enables designers to create custom application algorithms that build interactive parametric objects and streamline complex workflows, as well as build automated 2D drawing, 3D modeling, and BIM workflows within Vectorworks software.
Built in the Python programming language, everything in Marionette consists of nodes which are linked together in a flowchart arrangement. Each node contains a Python script with predefined inputs and outputs that can be accessed and modified with a built-in editor. Nodes are placed directly into the Vectorworks document and then connected to create complex algorithms. Since Marionette is fully integrated into Vectorworks software, it can also be used to create entirely self-contained parametric objects that can be inserted into new and existing designs.

Modelur[edit]
Modelur is a parametric urban design software plug-in for Trimble SketchUp, developed by Agilicity d.o.o. (LLC). Its primary goal is to help the users create conceptual urban massing. In contrast to common CAD applications, where the user designs buildings with usual dimensions such as width, depth and height, Modelur offers design of built environment through key urban parameters such as number of storeys and gross floor area of a building.
Modelur calculates key urban control parameters on the fly (e.g. floor area ratio or required number of parking lots), delivering urban design information while the development is still evolving. This way it helps taking well-informed decision during the earliest stages, when design decisions have the highest impact.

Archimatix[edit]
Archimatix is a node-based parametric modeler extension for Unity 3D. It enables visual modeling of 3D models within the Unity 3D editor.

See also[edit]
Design computing
Generative design
Parametricism
Responsive computer-aided design
Typography
Visual programming language
References[edit]
[1]
[2]
[3][4][5][6][7]

.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ Jump up to: a b .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Jabi, Wassim (2013). Parametric Design for Architecture. London: Laurence King. ISBNÂ 9781780673141.

^ Jump up to: a b 
Woodbury, Robert (2010). Elements of Parametric Design. Routledge. ISBNÂ 978-0415779876.

^ Jump up to: a b 
Frazer, John (2016). "Parametric Computation: History and Future". Architectural Design. 86 (March/April): 18â23. doi:10.1002/ad.2019. S2CIDÂ 63435340.

^ Jump up to: a b c 
Woodbury, Robert; Williamson, Shane; Beesley, Philip (2006). "Parametric Modeling as a Design Representation in Architecture: a process account". Cumulative Index of Computer Aided Architectural Design.

^ Jump up to: a b c 
Davis, Daniel. "A History of Parametric". Retrieved 5 April 2014.

^ Jump up to: a b 
"Parametric Design: a Brief History". AIACC. Retrieved 5 April 2014.

^ Jump up to: a b 
Schumacher, Patrik (2009). "Parametricism - A New Global Style for Architecture and Urban Design". AD Architectural Design. 79 (4).

^ "The construction - Guggenheim Museum Bilbao". Guggenheim Museum Bilbao. Retrieved 2017-05-20.

^ "Grasshopper". Retrieved 25 February 2016.

^ "Computational Design Software". Retrieved 25 February 2016.

^ "Platform". VIKTOR. Retrieved 2020-09-16.


.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteDesign
Outline
Designer
showDisciplinesCommunicationdesign
Advertising
Book design
Brand design
Exhibit design
Film title design
Graphic design
Motion
Postage stamp design
Print design
Illustration
Information design
Instructional design
News design
Photography
Retail design
SignageÂ / Traffic sign design
TypographyÂ / Type design
Video design
Visual merchandising
Environmentaldesign
Architecture
Architectural lighting design
Building design
Passive solar
Ecological design
Environmental impact design
Garden design
Computer-aided
Healthy community design
Hotel design
Interior architecture
Interior design
EID
Keyline design
Landscape architecture
Sustainable
Landscape design
Spatial design
Urban design
Industrialdesign
Automotive design
Automotive suspension design
CMF design
Corrugated box design
Electric guitar design
Furniture design
Sustainable
Hardware interface design
Motorcycle design
Packaging and labeling
Photographic lens design
Product design
Production design
Sensory design
Service design
Interactiondesign
Experience design
EED
Game design
Level design
Video game design
Hardware interface design
Icon design
Immersive design
Information design
Sonic interaction design
User experience design
User interface design
Web design
Otherapplied arts
Public art design
CeramicÂ / glass design
Fashion design
Costume design
Jewellery design
Floral design
Game art design
Property design
Scenic design
Sound design
Stage/set lighting design
Textile design
Otherdesign& engineering
Algorithm design
Behavioural design
Boiler design
Database design
Drug design
Electrical system design
Experimental design
Filter design
Geometric design
Work design
Integrated circuit design
Circuit design
Physical design
Power network design
Mechanism design
Nuclear weapon design
Nucleic acid design
Organization design
Process design
Processor design
Protein design
Research design
Social design
Software design
Spacecraft design
Strategic design
Systems design
showApproaches
Activity-centered
Adaptive web
Affective
Brainstorming
By committee
By contract
C-K theory
Closure
Co-design
Concept-oriented
Configuration
Contextual
Continuous
Cradle-to-cradle
Creative problem-solving
Creativity techniques
Critical
Design fiction
Defensive
Designâbidâbuild
Designâbuild
architect-led
Diffuse
Domain-driven
Ecological design
Energy neutral
Engineering design process
Probabilistic design
Error-tolerant
Fault-tolerant
Framework-oriented
For assembly
For behaviour change
For manufacturability
For Six Sigma
For testing
For X
Functional
Generative
Geodesign
HCD
High-level
Inclusive
Integrated
Integrated topside
Intelligence-based
Iterative
KISS principle
Low-level
Metadesign
Mind mapping
Modular
New Wave
Object-oriented
Open
Parametric
Participatory
Platform-based
Policy-based
Process-centered
Public interest
Rational
Regenerative
Reliability engineering
Research-based
Responsibility-driven
RWD
Safe-life
Sustainable
Systemic
SOD
Tableless web
Theory of constraints
Top-down and bottom-up
Transformation
Transgenerational
TRIZ
Universal
Design for All
Usage-centered
Use-centered
User-centered
Empathic
User innovation
Value-driven
Value sensitive
Privacy by
Design choice
computing
controls
culture
flow
leadership
management
marker
methods
pattern
research
science
sprint
strategy
theory
thinking
showToolsIntellectual propertyOrganizationsAwardsTools
AAD
Architectural model
Blueprint
Comprehensive layout
CAD
CAID
Virtual home design software
CAutoD
Design quality indicator
Electronic design automation
Flowchart
Mockup
Design specification
Prototype
Sketch
Storyboard
Technical drawing
HTML editor
Website wireframe
Intellectualproperty
Community design
Design around
Design infringement
Design patent
Fashion design copyright
Geschmacksmuster
Industrial design rights
European Union
Organizations
American Institute of Graphic Arts
Chartered Society of Designers
Design and Industries Association
Design Council
International Forum Design
The Design Society
Design Research Society
Awards
European Design Award
German Design Award
Good Design Award (Museum of Modern Art)
Good Design Award (Chicago Athenaeum)
Graphex
IF Product Design Award
James Dyson Award
Prince Philip Designers Prize
showRelated topics
Aesthetics
Agile
Concept art
Conceptual design
Creative industries
Cultural icon
.design
Enterprise architecture
Form factor
Futures studies
Indie design
Innovation management
Intelligent design
Lean startup
New product development
OODA loop
Philosophy of design
Process simulation
Slow design
STEAM fields
Unintelligent design
Visualization
Wicked problem
Design brief
change
classic
competition
architectural
student
director
education
elements and principles
engineer
firm
history
knowledge
language
life
load
museum
paradigm
rationale
review
specification
studies
studio
technology

 Commons    
 Wikibooks  
 Wikinews   
 Wikiquote  
 Wikisource 
 Wiktionary 





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Parametric_design&oldid=1057974581"
		Categories: Computer-aided designDesignArchitectureHidden categories: Wikipedia articles needing clarification from November 2016All Wikipedia articles needing clarificationWikipedia neutral point of view disputes from December 2015All Wikipedia neutral point of view disputesArticles with multiple maintenance issuesAll articles with unsourced statementsArticles with unsourced statements from February 2016Wikipedia articles needing clarification from December 2015Articles with a promotional tone from July 2021All articles with a promotional toneArticles with unsourced statements from December 2018
	
