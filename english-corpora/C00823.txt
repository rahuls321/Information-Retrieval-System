
Title:
Transitive closure
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}For other uses, see Closure (disambiguation).
This article is about the transitive closure of a binary relation. For the transitive closure of a set, see transitive set Â§Â Transitive closure.
In mathematics, the transitive closure of a binary relation R on a set X is the smallest relation on X that contains R and is transitive. For finite sets, "smallest" can be taken in its usual sense, of having the fewest related pairs; for infinite sets it is the unique minimal transitive superset of R.
For example, if X is a set of airports and xRy means "there is a direct flight from airport x to airport y" (for x and y in X), then the transitive closure of R on X is the relation R+ such that x R+ y means "it is possible to fly from x to y in one or more flights". Informally, the transitive closure gives you the set of all places you can get to from any starting place.
More formally, the transitive closure of a binary relation R on a set X is the transitive relation R+ on set X such that R+ contains R and R+ is minimal Lidl & Pilz (1998, p.Â 337). If the binary relation itself is transitive, then the transitive closure is that same binary relation; otherwise, the transitive closure is a different relation.
Conversely, transitive reduction adduces a minimal relation S from a given relation R such that they have the same closure, that is, S+ = R+; however, many different S with this property may exist.
Both transitive closure and transitive reduction are also used in the closely related area of graph theory.

Contents

1 Transitive relations and examples
2 Existence and description
3 Properties
4 In graph theory
5 In logic and computational complexity
6 In database query languages
7 Algorithms
8 See also
9 References
10 External links



Transitive relations and examples[edit]
A relation R on a set X is transitive if, for all x, y, z in X, whenever x R y and y R z then x R z. Examples of transitive relations include the equality relation on any set, the "less than or equal" relation on any linearly ordered set, and the relation "x was born before y" on the set of all people. Symbolically, this can be denoted as: if x < y and y < z then x < z.
One example of a non-transitive relation is "city x can be reached via a direct flight from city y" on the set of all cities. Simply because there is a direct flight from one city to a second city, and a direct flight from the second city to the third, does not imply there is a direct flight from the first city to the third. The transitive closure of this relation is a different relation, namely "there is a sequence of direct flights that begins at city x and ends at city y". Every relation can be extended in a similar way to a transitive relation.
An example of a non-transitive relation with a less meaningful transitive closure is "x is the day of the week after y". The transitive closure of this relation is "some day x comes after a day y on the calendar", which is trivially true for all days of the week x and y (and thus equivalent to the Cartesian square, which is "x and y are both days of the week").

Existence and description[edit]
For any relation R, the transitive closure of R always exists. To see this, note that the intersection of any family of transitive relations is again transitive. Furthermore, there exists at least one transitive relation containing R, namely the trivial one: X Ã X. The transitive closure of R is then given by the intersection of all transitive relations containing R.
For finite sets, we can construct the transitive closure step by step, starting from R and adding transitive edges.
This gives the intuition for a general construction. For any set X, we
can prove that transitive closure is given by the following expression


  
    
      
        
          R
          
            +
          
        
        =
        
          â
          
            i
            =
            1
          
          
            â
          
        
        
          R
          
            i
          
        
        .
      
    
    {\displaystyle R^{+}=\bigcup _{i=1}^{\infty }R^{i}.}
  

where 
  
    
      
        
          R
          
            i
          
        
      
    
    {\displaystyle R^{i}}
  
 is the i-th power of R, defined inductively by


  
    
      
        
          R
          
            1
          
        
        =
        R
      
    
    {\displaystyle R^{1}=R}
  

and, for 
  
    
      
        i
        >
        0
      
    
    {\displaystyle i>0}
  
,


  
    
      
        
          R
          
            i
            +
            1
          
        
        =
        R
        â
        
          R
          
            i
          
        
      
    
    {\displaystyle R^{i+1}=R\circ R^{i}}
  

where 
  
    
      
        â
      
    
    {\displaystyle \circ }
  
 denotes composition of relations.
To show that the above definition of R+ is the least transitive relation containing R, we show that it contains R, that it is transitive, and that it is the smallest set with both of those characteristics.


  
    
      
        R
        â
        
          R
          
            +
          
        
      
    
    {\displaystyle R\subseteq R^{+}}
  
: 
  
    
      
        
          R
          
            +
          
        
      
    
    {\displaystyle R^{+}}
  
 contains all of the 
  
    
      
        
          R
          
            i
          
        
      
    
    {\displaystyle R^{i}}
  
, so in particular 
  
    
      
        
          R
          
            +
          
        
      
    
    {\displaystyle R^{+}}
  
 contains 
  
    
      
        R
      
    
    {\displaystyle R}
  
.

  
    
      
        
          R
          
            +
          
        
      
    
    {\displaystyle R^{+}}
  
 is transitive: If 
  
    
      
        (
        
          s
          
            1
          
        
        ,
        
          s
          
            2
          
        
        )
        ,
        (
        
          s
          
            2
          
        
        ,
        
          s
          
            3
          
        
        )
        â
        
          R
          
            +
          
        
      
    
    {\displaystyle (s_{1},s_{2}),(s_{2},s_{3})\in R^{+}}
  
, then 
  
    
      
        (
        
          s
          
            1
          
        
        ,
        
          s
          
            2
          
        
        )
        â
        
          R
          
            j
          
        
      
    
    {\displaystyle (s_{1},s_{2})\in R^{j}}
  
 and 
  
    
      
        (
        
          s
          
            2
          
        
        ,
        
          s
          
            3
          
        
        )
        â
        
          R
          
            k
          
        
      
    
    {\displaystyle (s_{2},s_{3})\in R^{k}}
  
 for some 
  
    
      
        j
        ,
        k
      
    
    {\displaystyle j,k}
  
 by definition of 
  
    
      
        
          R
          
            +
          
        
      
    
    {\displaystyle R^{+}}
  
. Since composition is associative, 
  
    
      
        
          R
          
            j
            +
            k
          
        
        =
        
          R
          
            j
          
        
        â
        
          R
          
            k
          
        
      
    
    {\displaystyle R^{j+k}=R^{j}\circ R^{k}}
  
; hence 
  
    
      
        (
        
          s
          
            1
          
        
        ,
        
          s
          
            3
          
        
        )
        â
        
          R
          
            j
            +
            k
          
        
        â
        
          R
          
            +
          
        
      
    
    {\displaystyle (s_{1},s_{3})\in R^{j+k}\subseteq R^{+}}
  
 by definition of 
  
    
      
        â
      
    
    {\displaystyle \circ }
  
 and 
  
    
      
        
          R
          
            +
          
        
      
    
    {\displaystyle R^{+}}
  
.

  
    
      
        
          R
          
            +
          
        
      
    
    {\displaystyle R^{+}}
  
 is minimal, that is, if 
  
    
      
        T
      
    
    {\displaystyle T}
  
 is any transitive relation containing 
  
    
      
        R
      
    
    {\displaystyle R}
  
, then 
  
    
      
        
          R
          
            +
          
        
        â
        T
      
    
    {\displaystyle R^{+}\subseteq T}
  
: Given any such 
  
    
      
        T
      
    
    {\displaystyle T}
  
, induction on 
  
    
      
        i
      
    
    {\displaystyle i}
  
 can be used to show 
  
    
      
        
          R
          
            i
          
        
        â
        T
      
    
    {\displaystyle R^{i}\subseteq T}
  
 for all 
  
    
      
        i
      
    
    {\displaystyle i}
  
 as follows: Base: 
  
    
      
        
          R
          
            1
          
        
        =
        R
        â
        T
      
    
    {\displaystyle R^{1}=R\subseteq T}
  
 by assumption. Step: If 
  
    
      
        
          R
          
            i
          
        
        â
        T
      
    
    {\displaystyle R^{i}\subseteq T}
  
 holds, and 
  
    
      
        (
        
          s
          
            1
          
        
        ,
        
          s
          
            3
          
        
        )
        â
        
          R
          
            i
            +
            1
          
        
        =
        R
        â
        
          R
          
            i
          
        
      
    
    {\displaystyle (s_{1},s_{3})\in R^{i+1}=R\circ R^{i}}
  
, then 
  
    
      
        (
        
          s
          
            1
          
        
        ,
        
          s
          
            2
          
        
        )
        â
        R
      
    
    {\displaystyle (s_{1},s_{2})\in R}
  
 and 
  
    
      
        (
        
          s
          
            2
          
        
        ,
        
          s
          
            3
          
        
        )
        â
        
          R
          
            i
          
        
      
    
    {\displaystyle (s_{2},s_{3})\in R^{i}}
  
 for some 
  
    
      
        
          s
          
            2
          
        
      
    
    {\displaystyle s_{2}}
  
, by definition of 
  
    
      
        â
      
    
    {\displaystyle \circ }
  
. Hence, 
  
    
      
        (
        
          s
          
            1
          
        
        ,
        
          s
          
            2
          
        
        )
        ,
        (
        
          s
          
            2
          
        
        ,
        
          s
          
            3
          
        
        )
        â
        T
      
    
    {\displaystyle (s_{1},s_{2}),(s_{2},s_{3})\in T}
  
 by assumption and by induction hypothesis. Hence 
  
    
      
        (
        
          s
          
            1
          
        
        ,
        
          s
          
            3
          
        
        )
        â
        T
      
    
    {\displaystyle (s_{1},s_{3})\in T}
  
 by transitivity of 
  
    
      
        T
      
    
    {\displaystyle T}
  
; this completes the induction. Finally, 
  
    
      
        
          R
          
            i
          
        
        â
        T
      
    
    {\displaystyle R^{i}\subseteq T}
  
 for all 
  
    
      
        i
      
    
    {\displaystyle i}
  
 implies 
  
    
      
        
          R
          
            +
          
        
        â
        T
      
    
    {\displaystyle R^{+}\subseteq T}
  
 by definition of 
  
    
      
        
          R
          
            +
          
        
      
    
    {\displaystyle R^{+}}
  
.
Properties[edit]
The intersection of two transitive relations is transitive.
The union of two transitive relations need not be transitive. To preserve transitivity, one must take the transitive closure. This occurs, for example, when taking the union of two equivalence relations or two preorders. To obtain a new equivalence relation or preorder one must take the transitive closure (reflexivity and symmetryâin the case of equivalence relationsâare automatic).

In graph theory[edit]
  Transitive closure constructs the output graph from the input graph.
In computer science, the concept of transitive closure can be thought of as constructing a data structure that makes it possible to answer reachability questions. That is, can one get from node a to node d in one or more hops? A binary relation tells you only that node a is connected to node b, and that node b is connected to node c, etc. After the transitive closure is constructed, as depicted in the following figure, in an O(1) operation one may determine that node d is reachable from node a. The data structure is typically stored as a matrix, so if matrix[1][4] = 1, then it is the case that node 1 can reach node 4 through one or more hops.
The transitive closure of the adjacency relation of a directed acyclic graph (DAG) is the reachability relation of the DAG and a strict partial order.

  A cluster graph, the transitive closure of an undirected graph
The transitive closure of an undirected graph produces a cluster graph, a disjoint union of cliques. Constructing the transitive closure is an equivalent formulation of the problem of finding the components of the graph.[1]

In logic and computational complexity[edit]
The transitive closure of a binary relation cannot, in general, be expressed in first-order logic (FO).
This means that one cannot write a formula using predicate symbols R and T that will be satisfied in
any model if and only if T is the transitive closure of R.
In finite model theory, first-order logic (FO) extended with a transitive closure operator is usually called transitive closure logic, and abbreviated FO(TC) or just TC. TC is a sub-type of fixpoint logics. The fact that FO(TC) is strictly more expressive than FO was discovered by Ronald Fagin in 1974; the result was then rediscovered by Alfred Aho and Jeffrey Ullman in 1979, who proposed to use fixpoint logic as a database query language.[2] With more recent concepts of finite model theory, proof that FO(TC) is strictly more expressive than FO follows immediately from the fact that FO(TC) is not Gaifman-local.[3]
In computational complexity theory, the complexity class NL corresponds precisely to the set of logical sentences expressible in TC. This is because the transitive closure property has a close relationship with the NL-complete problem STCON for finding directed paths in a graph. Similarly, the class L is first-order logic with the commutative, transitive closure. When transitive closure is added to second-order logic instead, we obtain PSPACE.

In database query languages[edit]
Further information: Hierarchical and recursive queries in SQL
Since the 1980s Oracle Database has implemented a proprietary SQL extension CONNECT BY... START WITH that allows the computation of a transitive closure as part of a declarative query. The SQL 3 (1999) standard added a more general WITH RECURSIVE construct also allowing transitive closures to be computed inside the query processor; as of 2011 the latter is implemented in IBM DB2, Microsoft SQL Server, Oracle, PostgreSQL, and MySQL (v8.0+).
Datalog also implements transitive closure computations.[4]
MariaDB implements Recursive Common Table Expressions, which can be used to compute transitive closures. This feature was introduced in release 10.2.2 of April 2016.[5]

Algorithms[edit]
Efficient algorithms for computing the transitive closure of the adjacency relation of a graph can be found in Nuutila (1995). The fastest worst-case methods, which are not practical, reduce the problem to matrix multiplication. The problem can also be solved by the FloydâWarshall algorithm, or by repeated breadth-first search or depth-first search starting from each node of the graph.
More recent research has explored efficient ways of computing transitive closure on distributed systems based on the MapReduce paradigm.[6]

See also[edit]
Ancestral relation
Deductive closure
Reflexive closure
Symmetric closure
Transitive reduction (a smallest relation having the transitive closure of R as its transitive closure)
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}McColl, W. F.; Noshita, K. (1986), "On the number of edges in the transitive closure of a graph", Discrete Applied Mathematics, 15 (1): 67â73, doi:10.1016/0166-218X(86)90020-X, MRÂ 0856101

^ (Libkin 2004:vii)

^ (Libkin 2004:49)

^ (Silberschatz et al. 2010:C.3.6)

^ "Recursive Common Table Expressions Overview". mariadb.com.

^ (Afrati et al. 2011)


Lidl, R.; Pilz, G. (1998), Applied abstract algebra, Undergraduate Texts in Mathematics (2ndÂ ed.), Springer, ISBNÂ 0-387-98290-6
Keller, U., 2004, Some Remarks on the Definability of Transitive Closure in First-order Logic and Datalog (unpublished manuscript)
Erich GrÃ¤del; Phokion G. Kolaitis; Leonid Libkin; Maarten Marx; Joel Spencer; Moshe Y. Vardi; Yde Venema; Scott Weinstein (2007). Finite Model Theory and Its Applications. Springer. pp.Â 151â152. ISBNÂ 978-3-540-68804-4.
Libkin, Leonid (2004), Elements of Finite Model Theory, Springer, ISBNÂ 978-3-540-21202-7
Heinz-Dieter Ebbinghaus; JÃ¶rg Flum (1999). Finite Model Theory (2ndÂ ed.). Springer. pp.Â 123â124, 151â161, 220â235. ISBNÂ 978-3-540-28787-2.
Aho, A. V.; Ullman, J. D. (1979). "Universality of data retrieval languages". Proceedings of the 6th ACM SIGACT-SIGPLAN Symposium on Principles of programming languages - POPL '79. pp.Â 110â119. doi:10.1145/567752.567763.
Benedikt, M.; Senellart, P. (2011). "Databases".  In Blum, Edward K.; Aho, Alfred V. (eds.). Computer Science. The Hardware, Software and Heart of It. pp.Â 169â229. doi:10.1007/978-1-4614-1168-0_10. ISBNÂ 978-1-4614-1167-3.
Nuutila, E., Efficient Transitive Closure Computation in Large Digraphs. Acta Polytechnica Scandinavica, Mathematics and Computing in Engineering Series No. 74, Helsinki 1995, 124 pages. Published by the Finnish Academy of Technology. ISBNÂ 951-666-451-2, ISSNÂ 1237-2404, UDC 681.3.
Abraham Silberschatz; Henry Korth; S. Sudarshan (2010). Database System Concepts (6thÂ ed.). McGraw-Hill. ISBNÂ 978-0-07-352332-3. Appendix C (online only)
Foto N. Afrati, Vinayak Borkar, Michael Carey, Neoklis Polyzotis, Jeffrey D. Ullman, Map-Reduce Extensions and Recursive Queries, EDBT 2011, March 22â24, 2011, Uppsala, Sweden, ISBNÂ 978-1-4503-0528-0
External links[edit]
"Transitive closure and reduction", The Stony Brook Algorithm Repository, Steven Skiena.




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Transitive_closure&oldid=1064377497"
		Categories: Binary relationsClosure operatorsGraph algorithms
	
