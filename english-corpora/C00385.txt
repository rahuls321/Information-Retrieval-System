
Title:
Vertex cover
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Set of vertices that includes at least one endpoint of every edge in a graph
  Example graph that has a vertex cover comprising 2 vertices (bottom), but none with fewer.
In graph theory, a vertex cover (sometimes node cover) of a graph is a set of vertices that includes at least one endpoint of every edge  of the graph. In computer science, the problem of finding a minimum vertex cover is a classical optimization problem. It is NP-hard, so it cannot be solved by a polynomial-time algorithm if P â  NP. Moreover, it is hard to approximate - it cannot be approximated up to a factor smaller than 2 if the unique games conjecture is true. On the other hand, it has several simple 2-factor approximations. It is a typical example of an NP-hard optimization problem that has an approximation algorithm. Its decision version, the vertex cover problem, was one of Karp's 21 NP-complete problems and is therefore a classical NP-complete problem in computational complexity theory. Furthermore, the vertex cover problem is fixed-parameter tractable and a central problem in parameterized complexity theory.
The minimum vertex cover problem can be formulated as a half-integral linear program whose dual linear program is the maximum matching problem.
Vertex cover problems have been generalized to hypergraphs, see Vertex cover in hypergraphs.

.mw-parser-output .sidebar{width:22em;float:right;clear:right;margin:0.5em 0 1em 1em;background:#f8f9fa;border:1px solid #aaa;padding:0.2em;text-align:center;line-height:1.4em;font-size:88%;border-collapse:collapse;display:table}body.skin-minerva .mw-parser-output .sidebar{display:table!important;float:right!important;margin:0.5em 0 1em 1em!important}.mw-parser-output .sidebar-subgroup{width:100%;margin:0;border-spacing:0}.mw-parser-output .sidebar-left{float:left;clear:left;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-none{float:none;clear:both;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-outer-title{padding:0 0.4em 0.2em;font-size:125%;line-height:1.2em;font-weight:bold}.mw-parser-output .sidebar-top-image{padding:0.4em}.mw-parser-output .sidebar-top-caption,.mw-parser-output .sidebar-pretitle-with-top-image,.mw-parser-output .sidebar-caption{padding:0.2em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-pretitle{padding:0.4em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-title,.mw-parser-output .sidebar-title-with-pretitle{padding:0.2em 0.8em;font-size:145%;line-height:1.2em}.mw-parser-output .sidebar-title-with-pretitle{padding:0.1em 0.4em}.mw-parser-output .sidebar-image{padding:0.2em 0.4em 0.4em}.mw-parser-output .sidebar-heading{padding:0.1em 0.4em}.mw-parser-output .sidebar-content{padding:0 0.5em 0.4em}.mw-parser-output .sidebar-content-with-subgroup{padding:0.1em 0.4em 0.2em}.mw-parser-output .sidebar-above,.mw-parser-output .sidebar-below{padding:0.3em 0.8em;font-weight:bold}.mw-parser-output .sidebar-collapse .sidebar-above,.mw-parser-output .sidebar-collapse .sidebar-below{border-top:1px solid #aaa;border-bottom:1px solid #aaa}.mw-parser-output .sidebar-navbar{text-align:right;font-size:115%;padding:0 0.4em 0.4em}.mw-parser-output .sidebar-list-title{padding:0 0.4em;text-align:left;font-weight:bold;line-height:1.6em;font-size:105%}.mw-parser-output .sidebar-list-title-c{padding:0 0.4em;text-align:center;margin:0 3.3em}@media(max-width:720px){body.mediawiki .mw-parser-output .sidebar{width:100%!important;clear:both;float:none!important;margin-left:0!important;margin-right:0!important}}Covering/packing-problem pairs
 Covering problems Packing problems Minimum set cover Maximum set packing Minimum edge cover Maximum matching Minimum vertex cover Maximum independent set Bin covering Bin packing Polygon covering Rectangle packing
.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vte
Contents

1 Definition

1.1 Examples
1.2 Properties


2 Computational problem

2.1 ILP formulation
2.2 Exact evaluation

2.2.1 Fixed-parameter tractability


2.3 Approximate evaluation

2.3.1 Inapproximability
2.3.2 Pseudocode




3 Applications
4 Notes
5 References
6 External links



Definition[edit]
  Examples of vertex covers
  Examples of minimum vertex covers
Formally, a vertex cover 
  
    
      
        
          V
          â²
        
      
    
    {\displaystyle V'}
  
 of an undirected graph 
  
    
      
        G
        =
        (
        V
        ,
        E
        )
      
    
    {\displaystyle G=(V,E)}
  
 is a subset of 
  
    
      
        V
      
    
    {\displaystyle V}
  
 such that 
  
    
      
        u
        v
        â
        E
        â
        u
        â
        
          V
          â²
        
        â¨
        v
        â
        
          V
          â²
        
      
    
    {\displaystyle uv\in E\Rightarrow u\in V'\lor v\in V'}
  
, that is to say it is a set of vertices 
  
    
      
        
          V
          â²
        
      
    
    {\displaystyle V'}
  
 where every edge has at least one endpoint in the vertex cover 
  
    
      
        
          V
          â²
        
      
    
    {\displaystyle V'}
  
. Such a set is said to cover the edges of 
  
    
      
        G
      
    
    {\displaystyle G}
  
. The upper figure shows two examples of vertex covers, with some vertex cover 
  
    
      
        
          V
          â²
        
      
    
    {\displaystyle V'}
  
 marked in red.
A minimum vertex cover is a vertex cover of smallest possible size.  The vertex cover number 
  
    
      
        Ï
      
    
    {\displaystyle \tau }
  
 is the size of a minimum vertex cover, i.e. 
  
    
      
        Ï
        =
        
          |
        
        
          V
          â²
        
        
          |
        
      
    
    {\displaystyle \tau =|V'|}
  
. The lower figure shows examples of minimum vertex covers in the previous graphs.

Examples[edit]
The set of all vertices is a vertex cover.
The endpoints of any maximal matching form a vertex cover.
The complete bipartite graph 
  
    
      
        
          K
          
            m
            ,
            n
          
        
      
    
    {\displaystyle K_{m,n}}
  
 has a minimum vertex cover of size 
  
    
      
        Ï
        (
        
          K
          
            m
            ,
            n
          
        
        )
        =
        min
        {
        
        m
        ,
        n
        
        }
      
    
    {\displaystyle \tau (K_{m,n})=\min\{\,m,n\,\}}
  
.
Properties[edit]
A set of vertices is a vertex cover if and only if its complement is an independent set.
Consequently, the number of vertices of a graph is equal to its minimum vertex cover number plus the size of a maximum independent set (Gallai 1959).
Computational problem[edit]
The minimum vertex cover problem is the optimization problem of finding a smallest vertex cover in a given graph.

INSTANCE: Graph 
  
    
      
        G
      
    
    {\displaystyle G}
  

OUTPUT: Smallest number 
  
    
      
        k
      
    
    {\displaystyle k}
  
 such that 
  
    
      
        G
      
    
    {\displaystyle G}
  
 has a vertex cover  of size 
  
    
      
        k
      
    
    {\displaystyle k}
  
.
If the problem is stated as a decision problem, it is called the vertex cover problem:

INSTANCE: Graph 
  
    
      
        G
      
    
    {\displaystyle G}
  
 and positive integer 
  
    
      
        k
      
    
    {\displaystyle k}
  
.
QUESTION: Does 
  
    
      
        G
      
    
    {\displaystyle G}
  
 have a vertex cover of size at most 
  
    
      
        k
      
    
    {\displaystyle k}
  
?
The vertex cover problem is an NP-complete problem: it was one of Karp's 21 NP-complete problems. It is often used in computational complexity theory as a starting point for NP-hardness proofs.

ILP formulation[edit]
Assume that every vertex has an associated cost of 
  
    
      
        c
        (
        v
        )
        â¥
        0
      
    
    {\displaystyle c(v)\geq 0}
  
.
The (weighted) minimum vertex cover problem can be formulated as the following integer linear program (ILP).[1]



minimize


  
    
      
        
          
            â
            
              v
              â
              V
            
          
          c
          (
          v
          )
          
            x
            
              v
            
          
        
      
    
    {\displaystyle \textstyle \sum _{v\in V}c(v)x_{v}}
  


Â Â 

(minimize the total cost)


subject to


  
    
      
        
          x
          
            u
          
        
        +
        
          x
          
            v
          
        
        â¥
        1
      
    
    {\displaystyle x_{u}+x_{v}\geq 1}
  


for all 
  
    
      
        {
        u
        ,
        v
        }
        â
        E
      
    
    {\displaystyle \{u,v\}\in E}
  




(cover every edge of the graph),





  
    
      
        
          x
          
            v
          
        
        â
        {
        0
        ,
        1
        }
      
    
    {\displaystyle x_{v}\in \{0,1\}}
  


for all 
  
    
      
        v
        â
        V
      
    
    {\displaystyle v\in V}
  
.



(every vertex is either in the vertex cover or not)

This ILP belongs to the more general class of ILPs for covering problems.
The integrality gap of this ILP is 
  
    
      
        2
      
    
    {\displaystyle 2}
  
, so its relaxation (allowing each variable to be in the interval from 0 to 1, rather than requiring the variables to be only 0 or 1) gives a factor-
  
    
      
        2
      
    
    {\displaystyle 2}
  
 approximation algorithm for the minimum vertex cover problem.
Furthermore, the linear programming relaxation of that ILP is half-integral, that is, there exists an optimal solution for which each entry 
  
    
      
        
          x
          
            v
          
        
      
    
    {\displaystyle x_{v}}
  
 is either 0, 1/2, or 1. A 2-approximate vertex cover can be obtained from this fractional solution by selecting the subset of vertices whose variables are nonzero.

Exact evaluation[edit]
The decision variant of the vertex cover problem is NP-complete, which means it is unlikely that there is an efficient algorithm to solve it exactly for arbitrary graphs. NP-completeness can be proven by reduction from 3-satisfiability or, as Karp did, by reduction from the clique problem. Vertex cover remains NP-complete even in cubic graphs[2] and even in planar graphs of degree at most 3.[3]
For bipartite graphs, the equivalence between vertex cover and maximum matching described by KÅnig's theorem allows the bipartite vertex cover problem to be solved in polynomial time.
For tree graphs, an algorithm finds a minimal vertex cover in polynomial time by finding the first leaf in the tree and adding its parent to the minimal vertex cover, then deleting the leaf and parent and all associated edges and continuing repeatedly until no edges remain in the tree.

Fixed-parameter tractability[edit]
An exhaustive search algorithm can solve the problem in time 2knO(1), where k is the size of the vertex cover. Vertex cover is therefore fixed-parameter tractable, and if we are only interested in small k, we can solve the problem in polynomial time. One algorithmic technique that works here is called bounded search tree algorithm, and its idea is to repeatedly choose some vertex and recursively branch, with two cases at each step: place either the current vertex or all its neighbours into the vertex cover.
The algorithm for solving vertex cover that achieves the best asymptotic dependence on the parameter runs in time 
  
    
      
        O
        (
        
          1.2738
          
            k
          
        
        +
        (
        k
        â
        n
        )
        )
      
    
    {\displaystyle O(1.2738^{k}+(k\cdot n))}
  
.[4] The klam value of this time bound (an estimate for the largest parameter value that could be solved in a reasonable amount of time) is approximately 190. That is, unless additional algorithmic improvements can be found, this algorithm is suitable only for instances whose vertex cover number is 190 or less. Under reasonable complexity-theoretic assumptions, namely the exponential time hypothesis, the running time cannot be improved to 2o(k), even when 
  
    
      
        n
      
    
    {\displaystyle n}
  
 is 
  
    
      
        O
        (
        k
        )
      
    
    {\displaystyle O(k)}
  
.
However, for planar graphs, and more generally, for graphs excluding some fixed graph as a minor,  a vertex cover of size k can be found in time 
  
    
      
        
          2
          
            O
            (
            
              
                k
              
            
            )
          
        
        
          n
          
            O
            (
            1
            )
          
        
      
    
    {\displaystyle 2^{O({\sqrt {k}})}n^{O(1)}}
  
, i.e., the problem is subexponential fixed-parameter tractable.[5] This algorithm is again optimal, in the sense that, under the exponential time hypothesis, no algorithm can solve vertex cover on planar graphs in time 
  
    
      
        
          2
          
            o
            (
            
              
                k
              
            
            )
          
        
        
          n
          
            O
            (
            1
            )
          
        
      
    
    {\displaystyle 2^{o({\sqrt {k}})}n^{O(1)}}
  
.[6]

Approximate evaluation[edit]
One can find a factor-2 approximation by repeatedly taking both endpoints of an edge into the vertex cover, then removing them from the graph. Put otherwise, we find a maximal matching M with a greedy algorithm and construct a vertex cover C that consists of all endpoints of the edges in M. In the following figure, a maximal matching M is marked with red, and the vertex cover C is marked with blue.


The set C constructed this way is a vertex cover: suppose that an edge e is not covered by C; then MÂ âªÂ {e} is a matching and eÂ âÂ M, which is a contradiction with the assumption that M is maximal. Furthermore, if eÂ =Â {u,Â v} â M, then any vertex cover â including an optimal vertex cover â must contain u or v (or both); otherwise the edge e is not covered. That is, an optimal cover contains at least one endpoint of each edge in M; in total, the set C is at most 2 times as large as the optimal vertex cover.
This simple algorithm was discovered independently by Fanica Gavril and Mihalis Yannakakis.[7]
More involved techniques show that there are approximation algorithms with a slightly better approximation factor. For example, an approximation algorithm with an approximation factor of 
  
    
      
        2
        â
        Î
        
          (
          
            1
            
              /
            
            
              
                log
                â¡
                
                  |
                
                V
                
                  |
                
              
            
          
          )
        
      
    
    {\displaystyle 2-\Theta \left(1/{\sqrt {\log |V|}}\right)}
  
 is known.[8] The problem can be approximated with an approximation factor 
  
    
      
        2
        
          /
        
        (
        1
        +
        Î´
        )
      
    
    {\displaystyle 2/(1+\delta )}
  
 in 
  
    
      
        Î´
      
    
    {\displaystyle \delta }
  
 - dense graphs.[9]

Inapproximability[edit]
No better constant-factor approximation algorithm than the above one is known.
The minimum vertex cover problem is APX-complete, that is, it cannot be approximated arbitrarily well unless  PÂ =Â NP.
Using techniques from the PCP theorem, Dinur and Safra proved in 2005 that minimum vertex cover cannot be approximated within a factor of 1.3606 for any sufficiently large vertex degree unless PÂ =Â NP.[10] 
Later, the factor was improved to 
  
    
      
        
          
            2
          
        
        â
        Ïµ
      
    
    {\displaystyle {\sqrt {2}}-\epsilon }
  
 for any 
  
    
      
        Ïµ
        >
        0
      
    
    {\displaystyle \epsilon >0}
  
.[11][12]
Moreover, if the unique games conjecture is true then minimum vertex cover cannot be approximated within any constant factor better than 2.[13]
Although finding the minimum-size vertex cover is equivalent to finding the maximum-size independent set, as described above, the two problems are not equivalent in an approximation-preserving way: The Independent Set problem has no constant-factor approximation unless PÂ =Â NP.

Pseudocode[edit]
APPROXIMATION-VERTEX-COVER(G)=
C = â
E'= G.E

while E' â  â:
    let (u, v) be an arbitrary edge of E'
    C = C âª {u, v}
    remove from E' every edge incident on either u or v

return C

[14]
[15]

Applications[edit]
Vertex cover optimization serves as a model for many real-world and theoretical problems. For example, a commercial establishment interested in installing the fewest possible closed circuit cameras covering all hallways (edges) connecting all rooms (nodes) on a floor might model the objective as a vertex cover minimization problem. The problem has also been used to model the elimination of repetitive DNA sequences for synthetic biology and metabolic engineering applications.[16][17]

Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ Vazirani 2003, pp.Â 121â122

^ Garey, Johnson & Stockmeyer 1974

^ Garey & Johnson 1977; Garey & Johnson 1979, pp. 190 and 195.

^ Chen, Kanj & Xia 2006

^ Demaine et al. 2005

^ Flum & Grohe (2006, p.Â 437)

^ Papadimitriou & Steiglitz 1998, p. 432, mentions both Gavril and Yannakakis. Garey & Johnson 1979, p. 134, cites Gavril.

^ Karakostas 2009

^ Karpinski & Zelikovsky 1998

^ Dinur & Safra 2005

^ Khot, Minzer & Safra 2017 harvnb error: no target: CITEREFKhotMinzerSafra2017 (help)[full citation needed]

^ Dinur et al. 2018 harvnb error: no target: CITEREFDinurKhotKindlerMinzer2018 (help)[full citation needed]

^ Khot & Regev 2008

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Cormen, Thomas H.; Leiserson, Charles E.; Rivest, Ronald L.; Stein, Clifford (2001) [1990]. "Section 35.1: The vertex-cover problem". Introduction to Algorithms (2ndÂ ed.). MIT Press and McGraw-Hill. pp.Â 1024â1027. ISBNÂ 0-262-03293-7.

^ Chakrabarti, Amit (Winter 2005). "Approximation Algorithms: Vertex Cover" (PDF). Computer Science 105. Dartmouth College. Retrieved 21 February 2005.

^ Hossain, Ayaan; Lopez, Eriberto; Halper, Sean M.; Cetnar, Daniel P.; Reis, Alexander C.; Strickland, Devin; Klavins, Eric; Salis, Howard M. (2020-07-13). "Automated design of thousands of nonrepetitive parts for engineering stable genetic systems". Nature Biotechnology. 38 (12): 1466â1475. doi:10.1038/s41587-020-0584-2. ISSNÂ 1087-0156. PMIDÂ 32661437. S2CIDÂ 220506228.

^ Reis, Alexander C.; Halper, Sean M.; Vezeau, Grace E.; Cetnar, Daniel P.; Hossain, Ayaan; Clauer, Phillip R.; Salis, Howard M. (November 2019). "Simultaneous repression of multiple bacterial genes using nonrepetitive extra-long sgRNA arrays". Nature Biotechnology. 37 (11): 1294â1301. doi:10.1038/s41587-019-0286-9. ISSNÂ 1546-1696. PMIDÂ 31591552. S2CIDÂ 203852115.


References[edit]
.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents>ul{margin-left:0}.mw-parser-output .refbegin-hanging-indents>ul>li{margin-left:0;padding-left:3.2em;text-indent:-3.2em}.mw-parser-output .refbegin-hanging-indents ul,.mw-parser-output .refbegin-hanging-indents ul li{list-style:none}@media(max-width:720px){.mw-parser-output .refbegin-hanging-indents>ul>li{padding-left:1.6em;text-indent:-1.6em}}.mw-parser-output .refbegin-columns{margin-top:0.3em}.mw-parser-output .refbegin-columns ul{margin-top:0}.mw-parser-output .refbegin-columns li{page-break-inside:avoid;break-inside:avoid-column}
Chen, Jianer; Kanj, Iyad A.; Xia, Ge (2006). "Improved Parameterized Upper Bounds for Vertex Cover". Mathematical Foundations of Computer Science 2006: 31st International Symposium, MFCS 2006, StarÃ¡ LesnÃ¡, Slovakia, August 28-September 1, 2006, Proceedings (PDF). Lecture Notes in Computer Science. Vol.Â 4162. Springer-Verlag. pp.Â 238â249. doi:10.1007/11821069_21. ISBNÂ 978-3-540-37791-7.
Cormen, Thomas H.; Leiserson, Charles E.; Rivest, Ronald L.; Stein, Clifford (2001). Introduction to Algorithms. Cambridge, Mass.: MIT Press and McGraw-Hill. pp.Â 1024â1027. ISBNÂ 0-262-03293-7.
Demaine, Erik; Fomin, Fedor V.; Hajiaghayi, Mohammad Taghi; Thilikos, Dimitrios M. (2005). "Subexponential parameterized algorithms on bounded-genus graphs and H-minor-free graphs". Journal of the ACM. 52 (6): 866â893. doi:10.1145/1101821.1101823. S2CIDÂ 6238832. Retrieved 2010-03-05.
Dinur, Irit; Safra, Samuel (2005). "On the hardness of approximating minimum vertex cover". Annals of Mathematics. 162 (1): 439â485. CiteSeerXÂ 10.1.1.125.334. doi:10.4007/annals.2005.162.439.
Flum, JÃ¶rg; Grohe, Martin (2006). Parameterized Complexity Theory. Springer. ISBNÂ 978-3-540-29952-3. Retrieved 2010-03-05.
Garey, Michael R.; Johnson, David S. (1977). "The rectilinear Steiner tree problem is NP-complete". SIAM Journal on Applied Mathematics. 32 (4): 826â834. doi:10.1137/0132071.
Garey, Michael R.; Johnson, David S. (1979). Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. Freeman. ISBNÂ 0-7167-1045-5. A1.1: GT1, pg.190.
Garey, Michael R.; Johnson, David S.; Stockmeyer, Larry (1974). "Some simplified NP-complete problems". Proceedings of the Sixth Annual ACM Symposium on Theory of Computing. pp.Â 47â63. doi:10.1145/800119.803884.
Gallai, Tibor (1959). "Ãber extreme Punkt- und Kantenmengen". Ann. Univ. Sci. Budapest, EÃ¶tvÃ¶s Sect. Math. 2: 133â138.
Karakostas, George (November 2009). "A better approximation ratio for the vertex cover problem" (PDF). ACM Transactions on Algorithms. 5 (4): 41:1â41:8. CiteSeerXÂ 10.1.1.649.7407. doi:10.1145/1597036.1597045. S2CIDÂ 2525818. ECCCÂ TR04-084.
Karpinski, Marek; Zelikovsky, Alexander (1998). "Approximating dense cases of covering problems". Proceedings of the DIMACS Workshop on Network Design: Connectivity and Facilities Location. DIMACS Series in Discrete Mathematics and Theoretical Computer Science. Vol.Â 40. American Mathematical Society. pp.Â 169â178.
Khot, Subhash; Regev, Oded (2008). "Vertex cover might be hard to approximate to within 2âÎµ". Journal of Computer and System Sciences. 74 (3): 335â349. doi:10.1016/j.jcss.2007.06.019.
O'Callahan, Robert; Choi, Jong-Deok (2003). "Hybrid dynamic data race detection". Proceedings of the ACM SIGPLAN symposium on principles and practice of parallel programming (PPoPP 2003) and workshop on partial evaluation and semantics-based program manipulation (PEPM 2003). ACM SIGPLAN Notices. Vol.Â 38, no.Â 10. pp.Â 167â178. doi:10.1145/966049.781528.
Papadimitriou, Christos H.; Steiglitz, Kenneth (1998). Combinatorial Optimization: Algorithms and Complexity. Dover.
Vazirani, Vijay V. (2003). Approximation Algorithms. Springer-Verlag. ISBNÂ 978-3-662-04565-7.

External links[edit]



Wikimedia Commons has media related to Vertex cover problem.

Weisstein, Eric W. "Vertex Cover". MathWorld.
Weisstein, Eric W. "Minimum Vertex Cover". MathWorld.
Weisstein, Eric W. "Vertex Cover Number". MathWorld.
River Crossings (and Alcuin Numbers) - Numberphile




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Vertex_cover&oldid=1054676165"
		Categories: Computational problems in graph theoryNP-complete problemsCovering problemsHidden categories: Harv and Sfn no-target errorsAll articles with incomplete citationsArticles with incomplete citations from July 2020Articles with short descriptionShort description is different from WikidataCommons category link is locally defined
	
