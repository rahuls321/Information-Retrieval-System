
Title:
Chomsky normal form
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		In formal language theory, a context-free grammar, G, is said to be in Chomsky normal form (first described by Noam Chomsky)[1] if all of its production rules are of the form:[citation needed][2]

A â BC, Â  or
A â a, Â  or
S â Îµ,
where A, B, and C are nonterminal symbols, the letter a is a terminal symbol (a symbol that represents a constant value), S is the start symbol, and Îµ denotes the empty string.  Also, neither B nor C may be the start symbol, and the third production rule can only appear if Îµ is in L(G), the language produced by the context-free grammar G.[3]:â92â93,â106â
Every grammar in Chomsky normal form is context-free, and conversely, every context-free grammar can be transformed into an equivalent one[note 1] which is in Chomsky normal form and has a size no larger than the square of the original grammar's size.

Contents

1 Converting a grammar to Chomsky normal form

1.1 START: Eliminate the start symbol from right-hand sides
1.2 TERM: Eliminate rules with nonsolitary terminals
1.3 BIN: Eliminate right-hand sides with more than 2 nonterminals
1.4 DEL: Eliminate Îµ-rules
1.5 UNIT: Eliminate unit rules
1.6 Order of transformations


2 Example
3 Alternative definition

3.1 Chomsky reduced form
3.2 Floyd normal form


4 Application
5 See also
6 Notes
7 References
8 Further reading



Converting a grammar to Chomsky normal form[edit]
To convert a grammar to Chomsky normal form, a sequence of simple transformations is applied in a certain order; this is described in most textbooks on automata theory.[3]:â87â94â[4][5][6]
The presentation here follows Hopcroft, Ullman (1979), but is adapted to use the transformation names from Lange, LeiÃ (2009).[7][note 2] Each of the following transformations establishes one of the properties required for Chomsky normal form.

START: Eliminate the start symbol from right-hand sides[edit]
Introduce a new start symbol S0, and a new rule 

S0 â S,
where S is the previous start symbol.
This does not change the grammar's produced language, and S0 will not occur on any rule's right-hand side.

TERM: Eliminate rules with nonsolitary terminals[edit]
To eliminate each rule 

A â X1 ... a ... Xn
with a terminal symbol a being not the only symbol on the right-hand side, introduce, for every such terminal, a new nonterminal symbol Na, and a new rule 

Na â a.
Change every rule 

A â X1 ... a ... Xn
to 

A â X1 ... Na ... Xn.
If several terminal symbols occur on the right-hand side, simultaneously replace each of them by its associated nonterminal symbol.
This does not change the grammar's produced language.[3]:â92â

BIN: Eliminate right-hand sides with more than 2 nonterminals[edit]
Replace each rule 

A â X1 X2 ... Xn
with more than 2 nonterminals X1,...,Xn by rules 

A â X1 A1,
A1 â X2 A2,
... ,
An-2 â Xn-1 Xn,
where Ai are new nonterminal symbols.
Again, this does not change the grammar's produced language.[3]:â93â

DEL: Eliminate Îµ-rules[edit]
An Îµ-rule is a rule of the form 

A â Îµ,
where A is not S0, the grammar's start symbol.
To eliminate all rules of this form, first determine the set of all nonterminals that derive Îµ.
Hopcroft and Ullman (1979) call such nonterminals nullable, and compute them as follows:

If a rule A â Îµ exists, then A is nullable.
If a rule A â X1 ... Xn exists, and every single Xi is nullable, then A is nullable, too.
Obtain an intermediate grammar by replacing each rule 

A â X1 ... Xn
by all versions with some nullable Xi omitted.
By deleting in this grammar each Îµ-rule, unless its left-hand side is the start symbol, the transformed grammar is obtained.[3]:â90â
For example, in the following grammar, with start symbol S0,

S0 â AbB | C
B â AA | AC
C â b | c
A â a | Îµ
the nonterminal A, and hence also B, is nullable, while neither C nor S0 is.
Hence the following intermediate grammar is obtained:[note 3]

S0 â AbB | AbB | AbB | AbB Â  | Â  C
B â AA | AA | AA | AÎµA Â  | Â  AC | AC
C â b | c
A â a | Îµ
In this grammar, all Îµ-rules have been "inlined at the call site".[note 4]
In the next step, they can hence be deleted, yielding the grammar:

S0 â AbB | Ab | bB | b Â  | Â  C
B â AA | A Â  | Â  AC | C
C â b | c
A â a
This grammar produces the same language as the original example grammar, viz. {ab,aba,abaa,abab,abac,abb,abc,b,bab,bac,bb,bc,c}, but has no Îµ-rules.

UNIT: Eliminate unit rules[edit]
A unit rule is a rule of the form 

A â B,
where A, B are nonterminal symbols.
To remove it, for each rule 

B â  X1 ... Xn,
where  X1 ... Xn is a string of nonterminals and terminals, add rule 

A â  X1 ... Xn
unless this is a unit rule which has already been (or is being) removed.

Order of transformations[edit]


Mutual preservationof transformation results
hide

Transformation X always preserves (Y)resp. may destroy (N) the result of Y:


YX

START
TERM
BIN
DEL
UNIT


START








TERM








BIN








DEL








UNIT




(Y)*



*UNIT preserves the result of DELÂ  if START had been called before.

When choosing the order in which the above transformations are to be applied, it has to be considered that some transformations may destroy the result achieved by other ones. For example, START will re-introduce a unit rule if it is applied after UNIT. The table shows which orderings are admitted.
Moreover, the worst-case bloat in grammar size[note 5] depends on the transformation order. Using |G| to denote the size of the original grammar G, the size blow-up in the worst case may range from |G|2 to 22 |G|, depending on the transformation algorithm used.[7]:â7â The blow-up in grammar size depends on the order between DEL and BIN. It may be exponential when DEL is done first, but is linear otherwise. UNIT can incur a quadratic blow-up in the size of the grammar.[7]:â5â The orderings START,TERM,BIN,DEL,UNIT and START,BIN,DEL,UNIT,TERM lead to the least (i.e. quadratic) blow-up.

Example[edit]
  Abstract syntax tree of the arithmetic expression "a^2+4*b" wrt. the example grammar (top) and its Chomsky normal form (bottom)
The following grammar, with start symbol Expr, describes a simplified version of the set of all syntactical valid arithmetic expressions in programming languages like C or Algol60. Both number and variable are considered terminal symbols here for simplicity, since in a compiler front-end their internal structure is usually not considered by the parser. The terminal symbol "^" denoted exponentiation in Algol60.




Expr

â Term

|  Expr AddOp Term

| AddOp Term


Term

â Factor

|  Term MulOp Factor


Factor

â Primary

|  Factor ^ Primary


Primary

â number

|  variable

|  ( Expr )


AddOp

â +

| â


MulOp

â *

| /

In step "START" of the above conversion algorithm, just a rule S0âExpr is added to the grammar.
After step "TERM", the grammar looks like this:




S0

â Expr


Expr

â Term

|  Expr AddOp Term

| AddOp Term


Term

â Factor

|  Term MulOp Factor


Factor

â Primary

|  Factor PowOp Primary


Primary

â number

|  variable

|  Open Expr Close


AddOp

â +

| â


MulOp

â *

| /


PowOp

â ^


Open

â (


Close

â )

After step "BIN", the following grammar is obtained:




S0

â Expr


Expr

â Term

|  Expr AddOp_Term

| AddOp Term


Term

â Factor

|  Term MulOp_Factor


Factor

â Primary

|  Factor PowOp_Primary


Primary

â number

|  variable

|  Open Expr_Close


AddOp

â +

| â


MulOp

â *

| /


PowOp

â ^


Open

â (


Close

â )


AddOp_Term

â AddOp Term


MulOp_Factor

â MulOp Factor


PowOp_Primary

â PowOp Primary


Expr_Close

â Expr Close

Since there are no Îµ-rules, step "DEL" does not change the grammar.
After step "UNIT", the following grammar is obtained, which is in Chomsky normal form:




S0

â number

|  variable

|  Open Expr_Close

|  Factor PowOp_Primary

|  Term MulOp_Factor

|  Expr AddOp_Term

| AddOp Term


Expr

â number

|  variable

|  Open Expr_Close

|  Factor PowOp_Primary

|  Term MulOp_Factor

|  Expr AddOp_Term

| AddOp Term


Term

â number

|  variable

|  Open Expr_Close

|  Factor PowOp_Primary

|  Term MulOp_Factor


Factor

â number

|  variable

|  Open Expr_Close

|  Factor PowOp_Primary


Primary

â number

|  variable

|  Open Expr_Close


AddOp

â +

| â


MulOp

â *

| /


PowOp

â ^


Open

â (


Close

â )


AddOp_Term

â AddOp Term


MulOp_Factor

â MulOp Factor


PowOp_Primary

â PowOp Primary


Expr_Close

â Expr Close

The Na introduced in step "TERM" are PowOp, Open, and Close.
The Ai introduced in step "BIN" are AddOp_Term, MulOp_Factor, PowOp_Primary, and Expr_Close.

Alternative definition[edit]
Chomsky reduced form[edit]
Another way[3]:â92â[8] to define the Chomsky normal form is:
A formal grammar is in Chomsky reduced form if all of its production rules are of the form:


  
    
      
        A
        â
        
        B
        C
      
    
    {\displaystyle A\rightarrow \,BC}
  
 or

  
    
      
        A
        â
        
        a
      
    
    {\displaystyle A\rightarrow \,a}
  
,
where 
  
    
      
        A
      
    
    {\displaystyle A}
  
, 
  
    
      
        B
      
    
    {\displaystyle B}
  
 and 
  
    
      
        C
      
    
    {\displaystyle C}
  
 are nonterminal symbols, and 
  
    
      
        a
      
    
    {\displaystyle a}
  
 is a terminal symbol.  When using this definition, 
  
    
      
        B
      
    
    {\displaystyle B}
  
 or 
  
    
      
        C
      
    
    {\displaystyle C}
  
 may be the start symbol.  Only those context-free grammars which do not generate the empty string can be transformed into Chomsky reduced form.

Floyd normal form[edit]
In a letter where he proposed a term BackusâNaur form (BNF), Donald E. Knuth implied a BNF "syntax in which all definitions have such a form may be said to be in 'Floyd Normal Form'",


  
    
      
        â¨
        A
        â©
        ::=
        
        â¨
        B
        â©
        â£
        â¨
        C
        â©
      
    
    {\displaystyle \langle A\rangle ::=\,\langle B\rangle \mid \langle C\rangle }
  
 or

  
    
      
        â¨
        A
        â©
        ::=
        
        â¨
        B
        â©
        â¨
        C
        â©
      
    
    {\displaystyle \langle A\rangle ::=\,\langle B\rangle \langle C\rangle }
  
 or

  
    
      
        â¨
        A
        â©
        ::=
        
        a
      
    
    {\displaystyle \langle A\rangle ::=\,a}
  
,
where 
  
    
      
        â¨
        A
        â©
      
    
    {\displaystyle \langle A\rangle }
  
, 
  
    
      
        â¨
        B
        â©
      
    
    {\displaystyle \langle B\rangle }
  
 and 
  
    
      
        â¨
        C
        â©
      
    
    {\displaystyle \langle C\rangle }
  
 are nonterminal symbols, and 
  
    
      
        a
      
    
    {\displaystyle a}
  
 is a terminal symbol,
because Robert W. Floyd found any BNF syntax can be converted to the above one in 1961.[9]  But he withdrew this term, "since doubtless many people have independently used this simple fact in their own work, and the point is only incidental to the main considerations of Floyd's note."[10] While Floyd's note cites Chomsky's original 1959 article, Knuth's letter does not.

Application[edit]
Besides its theoretical significance, CNF conversion is used in some algorithms as a preprocessing step, e.g., the CYK algorithm, a bottom-up parsing for context-free grammars, and its variant probabilistic CKY.[11]

See also[edit]
BackusâNaur form
CYK algorithm
Greibach normal form
Kuroda normal form
Pumping lemma for context-free languages â its proof relies on the Chomsky normal form
Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ that is, one that produces the same language

^ For example, Hopcroft, Ullman (1979) merged TERM and BIN into a single transformation.

^ indicating a kept and omitted nonterminal N by N and N, respectively

^ If the grammar had a rule S0 â Îµ, it could not be "inlined", since it had no "call sites". Therefore it could not be deleted in the next step.

^ i.e. written length, measured in symbols


References[edit]

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Chomsky, Noam (1959). "On Certain Formal Properties of Grammars". Information and Control. 2 (2): 137â167. doi:10.1016/S0019-9958(59)90362-6. Here: Sect.6, p.152ff.

^ D'Antoni, Loris. "Page 7, Lecture 9: Bottom-up Parsing Algorithms" (PDF). CS536-S21 Intro to Programming Languages and Compilers. University of Wisconsin-Madison.

^ Jump up to: a b c d e f Hopcroft, John E.; Ullman, Jeffrey D. (1979). Introduction to Automata Theory, Languages and Computation. Reading, Massachusetts: Addison-Wesley Publishing. ISBNÂ 978-0-201-02988-8.

^ Hopcroft, John E.; Motwani, Rajeev; Ullman, Jeffrey D. (2006). Introduction to Automata Theory, Languages, and Computation (3rdÂ ed.). Addison-Wesley. ISBNÂ 978-0-321-45536-9. Section 7.1.5, p.272

^ Rich, Elaine (2007). Automata, Computability, and Complexity: Theory and Applications (1stÂ ed.). Prentice-Hall. ISBNÂ 978-0132288064.[pageÂ needed]

^ Wegener, Ingo (1993). Theoretische Informatik - Eine algorithmenorientierte EinfÃ¼hrung. LeitfÃ¤den und Mongraphien der Informatik (in German). Stuttgart: B. G. Teubner. ISBNÂ 978-3-519-02123-0. Section 6.2 "Die Chomsky-Normalform fÃ¼r kontextfreie Grammatiken", p. 149â152

^ Jump up to: a b c Lange, Martin; LeiÃ, Hans (2009). "To CNF or not to CNF? An Efficient Yet Presentable Version of the CYK Algorithm" (PDF). Informatica Didactica. 8.

^ Hopcroft et al. (2006)[pageÂ needed]

^ Floyd, Robert W. (1961). "Note on mathematical induction in phrase structure grammars" (PDF). Information and Control. 4 (4): 353â358. doi:10.1016/S0019-9958(61)80052-1. Here: p.354

^ Knuth, Donald E. (December 1964). "Backus Normal Form vs. Backus Naur Form". Communications of the ACM. 7 (12): 735â736. doi:10.1145/355588.365140. S2CIDÂ 47537431.

^ Jurafsky, Daniel; Martin, James H. (2008). Speech and Language Processing (2ndÂ ed.). Pearson Prentice Hall. p.Â 465. ISBNÂ 978-0-13-187321-6.


Further reading[edit]
Cole, Richard.  Converting CFGs to CNF (Chomsky Normal Form), October 17, 2007. (pdf) â uses the order TERM, BIN, START, DEL, UNIT.
John Martin (2003). Introduction to Languages and the Theory of Computation. McGraw Hill. ISBNÂ 978-0-07-232200-2. (Pages 237â240 of section 6.6: simplified forms and normal forms.)
Michael Sipser (1997). Introduction to the Theory of Computation. PWS Publishing. ISBNÂ 978-0-534-94728-6. (Pages 98â101 of section 2.1: context-free grammars. Page 156.)
Sipser, Michael. Introduction to the Theory of Computation, 2nd edition.
Alexander Meduna (6 December 2012). Automata and Languages: Theory and Applications. Springer Science & Business Media. ISBNÂ 978-1-4471-0501-5.
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteNoam Chomsky
Bibliography
Chomsky hierarchy
"Colorless green ideas sleep furiously"
Honorary degrees
Political positions
SelectbibliographyLinguistics
Syntactic Structures (1957)
Current Issues in Linguistic Theory (1964)
Aspects of the Theory of Syntax (1965)
Cartesian Linguistics (1966)
Language and Mind (1966)
The Sound Pattern of English (1968)
"Remarks on Nominalization" (1970)
"Conditions on Transformations" (1973)
Reflections on Language (1975)
The Logical Structure of Linguistic Theory (1975)
Lectures on Government and Binding (1981)
Knowledge of Language (1986)
The Minimalist Program (1995)
New Horizons in the Study of Language and Mind (2000)
Politics
"The Responsibility of Intellectuals" (1967)
American Power and the New Mandarins (1969)
Counter-Revolutionary Violence (1973), with Edward S. Herman
The Fateful Triangle (1983)
Manufacturing Consent (1988), with Edward S. Herman
Necessary Illusions (1989)
Deterring Democracy (1991)
Letters from Lexington (1993)
The Prosperous Few and the Restless Many (1993)
World Orders Old and New (1994)
Objectivity and Liberal Scholarship (1997)
Hegemony or Survival (2003)
Failed States (2006)
Requiem for the American Dream (2017)
Collections
Class Warfare (1996)
Middle East Illusions (2003)
Imperial Ambitions (2005)
Interventions (2007)
Gaza in Crisis (2010)
9-11: Was There An Alternative? (2011)
Making the Future (2012)
Occupy (2012)
On Palestine (2015), with Ilan PappÃ©
Filmography
Manufacturing Consent: Noam Chomsky and the Media (1992)
Last Party 2000 (2001)
Power and Terror: Noam Chomsky in Our Times (2002)
Distorted MoralityÂ â America's War on Terror? (2003)
Noam Chomsky: Rebel Without a Pause (2003) (TV)
Peace, Propaganda & the Promised Land (2004)
Is the Man Who Is Tall Happy? (2013)
Family
William Chomsky (father)
Carol Chomsky (wife)
Aviva Chomsky (daughter)





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Chomsky_normal_form&oldid=1034443086"
		Categories: Formal languagesNoam ChomskyHidden categories: Wikipedia articles needing page number citations from May 2015CS1 German-language sources (de)Wikipedia articles needing page number citations from November 2014All articles with unsourced statementsArticles with unsourced statements from October 2020
	
