
Title:
Deno (software)
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Secure Javascript and Typescript runtime.mw-parser-output .infobox-subbox{padding:0;border:none;margin:-3px;width:auto;min-width:100%;font-size:100%;clear:none;float:none;background-color:transparent}.mw-parser-output .infobox-3cols-child{margin:auto}.mw-parser-output .infobox .navbar{font-size:100%}body.skin-minerva .mw-parser-output .infobox-header,body.skin-minerva .mw-parser-output .infobox-subheader,body.skin-minerva .mw-parser-output .infobox-above,body.skin-minerva .mw-parser-output .infobox-title,body.skin-minerva .mw-parser-output .infobox-image,body.skin-minerva .mw-parser-output .infobox-full-data,body.skin-minerva .mw-parser-output .infobox-below{text-align:center}DenoOriginal author(s)Ryan DahlDeveloper(s)The Deno Company[1] and contributorsInitial releaseMayÂ 13, 2018; 3 years agoÂ (2018-05-13)[2]Stable release1.18.0[3]Â 
   /    20 January 2022; 12 days agoÂ (20 January 2022)
Repositorygithub.com/denoland/denoWritten inTypeScript, JavaScript, Rust, C++ (V8 bindings)Operating systemLinux, macOS, Microsoft WindowsTypeRuntime environmentLicenseMIT License[4][5]Websitedeno.landÂ 
Deno is a runtime for JavaScript and TypeScript that is based on the V8 JavaScript engine and the Rust programming language. It was created by Ryan Dahl, original creator of Node.js, and is focused on productivity.[6] 
It was announced by Dahl in 2018 during his talk "10 Things I Regret About Node.js".[7] Deno explicitly takes on the role of both runtime and package manager within a single executable, rather than requiring a separate package-management program.[8][9]

Contents

1 History
2 Overview

2.1 Comparison with Node.js


3 Releases
4 Example
5 References
6 External links



History[edit]
Deno was announced on JSConf EU 2018 by Ryan Dahl in his talk "10 Things I Regret About Node.js".[7] In his talk, Dahl mentioned his regrets about the initial design decisions with Node.js, focusing on his choices of not using promises in API design, usage of the legacy build system GYP, node modules and package.json, leaving out file extensions, magical module resolution with index.js and breaking the sandboxed environment of V8.[10] He eventually presented the prototype of Deno, aiming to achieve system call bindings through message passing with serialization tools such as Protocol Buffers, and to provide command line flags for access control.
Deno was initially written in Go and used Protocol Buffers for serialization between privileged (Go, with system call access) and unprivileged (V8) sides.[11] However, Go was soon replaced with Rust due to concerns of double runtime and garbage collection pressure.[12] Tokio was introduced in place of libuv as the asynchronous event-driven platform,[13] and FlatBuffers is adopted for faster, "zero-copy" serialization and deserialization[14] but later in August 2019, FlatBuffers were finally removed[15] after publishing benchmarks that measured a significant overhead of serialization in April 2019.[16]
A standard library, modeled after Go's standard library, was created in November 2018 to provide extensive tools and utilities, partially solving Node.js' dependency tree explosion problem.[17]
The official Deno 1.0 was released on May 13, 2020.[18]
On March 29, 2021, the Deno Company was announced, with backing in millions of dollars from Shasta Ventures, Mozilla Corporation and a few others. It was established to further the development of Deno and provide a commercial offering to users.[1]

Overview[edit]
Deno aims to be a productive and secure scripting environment for the modern programmer.[8] Similar to Node.js, Deno emphasizes event-driven architecture, providing a set of non-blocking core I/O utilities, along with their blocking versions. Deno could be used to create web servers, perform scientific computations, etc. Deno is open source software under the MIT License.[19]

Comparison with Node.js[edit]
Deno and Node.js are both runtimes built on Google's V8 JavaScript engine, the same engine used in Google Chrome. They both have internal event loops and provide command-line interfaces for running scripts and a wide range of system utilities.
Deno mainly deviates from Node.js in the following aspects:[8]

Uses ES Module as the default module system, instead of CommonJS.
Uses URLs for loading local or remote dependencies, similar to browsers.
Includes a built-in package manager for resource fetching, thus no need for npm.
Supports TypeScript out of the box, using a snapshotted TypeScript compiler with caching mechanisms.
Aims for better compatibility with browsers with a wide range of Web APIs.
Restricts file system and network access by default in order to run sandboxed code.
Redesigns the API to utilize promises, ES6 and TypeScript features.
Minimizes core API size, while providing a large standard library with no external dependencies.
Uses message passing channels for invoking privileged system APIs and using bindings.
Releases[edit]



Version

Latest patch release

Release date

Date of last patch release

Description


Old version, no longer maintained: 0.1.0

Old version, no longer maintained: 0.1.12

2018-08-23

2018-11-12

Rust rewrite and V8 snapshot


Old version, no longer maintained: 0.2.0

Old version, no longer maintained: 0.2.11

2018-11-27

2019-02-08

Mildly usable


Old version, no longer maintained: 0.3.0

Old version, no longer maintained: 0.3.10

2019-02-18

2019-04-25

Instead of importing a "deno" module, there is now a global variable called "Deno"


Old version, no longer maintained: 0.4.0

Old version, no longer maintained: 0.4.0

2019-05-03

2019-05-03

-


Old version, no longer maintained: 0.5.0

Old version, no longer maintained: 0.5.0

2019-05-11

2019-05-11

-


Old version, no longer maintained: 0.6.0

Old version, no longer maintained: 0.6.0

2019-05-20

2019-05-20

-


Old version, no longer maintained: 0.7.0

Old version, no longer maintained: 0.7.0

2019-05-29

2019-05-29

-


Old version, no longer maintained: 0.8.0

Old version, no longer maintained: 0.8.0

2019-06-08

2019-06-08

-


Old version, no longer maintained: 0.9.0

Old version, no longer maintained: 0.9.0

2019-06-15

2019-06-15

-


Old version, no longer maintained: 0.10.0

Old version, no longer maintained: 0.10.0

2019-06-25

2019-06-25

-


Old version, no longer maintained: 0.11.0

Old version, no longer maintained: 0.11.0

2019-07-06

2019-07-06

-


Old version, no longer maintained: 0.12.0

Old version, no longer maintained: 0.12.0

2019-07-16

2019-07-16

-


Old version, no longer maintained: 0.13.0

Old version, no longer maintained: 0.13.0

2019-07-31

2019-07-31

-


Old version, no longer maintained: 0.14.0

Old version, no longer maintained: 0.14.0

2019-08-09

2019-08-09

-


Old version, no longer maintained: 0.15.0

Old version, no longer maintained: 0.15.0

2019-08-13

2019-08-13

-


Old version, no longer maintained: 0.16.0

Old version, no longer maintained: 0.16.0

2019-08-22

2019-08-22

-


Old version, no longer maintained: 0.17.0

Old version, no longer maintained: 0.17.0

2019-09-04

2019-09-04

-


Old version, no longer maintained: 0.18.0

Old version, no longer maintained: 0.18.0

2019-09-13

2019-09-13

-


Old version, no longer maintained: 0.19.0

Old version, no longer maintained: 0.19.0

2019-09-24

2019-09-24

-


Old version, no longer maintained: 0.20.0

Old version, no longer maintained: 0.20.0

2019-10-06

2019-10-06

-


Old version, no longer maintained: 0.21.0

Old version, no longer maintained: 0.21.0

2019-10-19

2019-10-19

-


Old version, no longer maintained: 0.22.0

Old version, no longer maintained: 0.22.0

2019-10-28

2019-10-28

-


Old version, no longer maintained: 0.23.0

Old version, no longer maintained: 0.23.0

2019-11-04

2019-11-04

-


Old version, no longer maintained: 0.24.0

Old version, no longer maintained: 0.24.0

2019-11-14

2019-11-14

-


Old version, no longer maintained: 0.25.0

Old version, no longer maintained: 0.25.0

2019-11-26

2019-11-26

-


Old version, no longer maintained: 0.26.0

Old version, no longer maintained: 0.26.0

2019-12-05

2019-12-05

-


Old version, no longer maintained: 0.27.0

Old version, no longer maintained: 0.27.0

2019-12-18

2019-12-18

-


Old version, no longer maintained: 0.28.0

Old version, no longer maintained: 0.28.1

2020-01-02

2020-01-03

-


Old version, no longer maintained: 0.29.0

Old version, no longer maintained: 0.29.0

2020-01-09

2020-01-09

-


Old version, no longer maintained: 0.30.0

Old version, no longer maintained: 0.30.0

2020-01-17

2020-01-17

-


Old version, no longer maintained: 0.31.0

Old version, no longer maintained: 0.31.0

2020-01-24

2020-01-24

-


Old version, no longer maintained: 0.32.0

Old version, no longer maintained: 0.32.0

2020-02-03

2020-02-03

-


Old version, no longer maintained: 0.33.0

Old version, no longer maintained: 0.33.0

2020-02-13

2020-02-13

-


Old version, no longer maintained: 0.34.0

Old version, no longer maintained: 0.34.0

2020-02-20

2020-02-20

-


Old version, no longer maintained: 0.35.0

Old version, no longer maintained: 0.35.0

2020-02-28

2020-02-28

-


Old version, no longer maintained: 0.36.0

Old version, no longer maintained: 0.36.0

2020-03-11

2020-03-11

-


Old version, no longer maintained: 0.37.0

Old version, no longer maintained: 0.37.1

2020-03-23

2020-03-23

-


Old version, no longer maintained: 0.38.0

Old version, no longer maintained: 0.38.0

2020-03-28

2020-03-28

-


Old version, no longer maintained: 0.39.0

Old version, no longer maintained: 0.39.0

2020-04-03

2020-04-03

-


Old version, no longer maintained: 0.40.0

Old version, no longer maintained: 0.40.0

2020-04-08

2020-04-08

-


Old version, no longer maintained: 0.41.0

Old version, no longer maintained: 0.41.0

2020-04-16

2020-04-16

-


Old version, no longer maintained: 0.42.0

Old version, no longer maintained: 0.42.0

2020-04-29

2020-04-29

-


Old version, no longer maintained: 1.0.0

Old version, no longer maintained: 1.0.5

2020-05-13

2020-06-03

-


Old version, no longer maintained: 1.1.0

Old version, no longer maintained: 1.1.3

2020-06-12

2020-07-03

-


Old version, no longer maintained: 1.2.0

Old version, no longer maintained: 1.2.3

2020-07-13

2020-08-08

-


Old version, no longer maintained: 1.3.0

Old version, no longer maintained: 1.3.3

2020-08-13

2020-09-04

-


Old version, no longer maintained: 1.4.0

Old version, no longer maintained: 1.4.6

2020-09-13

2020-10-10

-


Old version, no longer maintained: 1.5.0

Old version, no longer maintained: 1.5.4

2020-10-27

2020-11-23

Faster tree-shaking and bundling, refactored REPL


Old version, no longer maintained: 1.6.0

Old version, no longer maintained: 1.6.3

2020-12-08

2020-12-30

Compile standalone binaries via "deno compile", support TypeScript 4.1, experimental support for Mac ARM64


Old version, no longer maintained: 1.7.0

Old version, no longer maintained: 1.7.5

2021-02-05

2021-02-19

Cross compilation and 60% smaller binaries for deno compile, a DNS resolver API, support for data URLs in import statements and web workers


Old version, no longer maintained: 1.8.0

Old version, no longer maintained: 1.8.3

2021-03-02

2021-04-02

Experimental support for WebGPU API, built-in internationalization APIs enabled, support for fetching private modules, revamped coverage tooling, support for TypeScript 4.2


Old version, no longer maintained: 1.9.0

Old version, no longer maintained: 1.9.2

2021-04-13

2021-04-23

Native HTTP/2 web server, Faster calls into Rust with serde_v8, Blob URL support & improvements to fetch api, Import completions in the LSP, Interactive permission prompt


Old version, no longer maintained: 1.10.0

Old version, no longer maintained: 1.10.2

2021-05-11

2021-05-17

Improvements to the built in test runner, structured clone support in Web Workers, Web Storage API, support for remote import maps


Old version, no longer maintained: 1.11.0

Old version, no longer maintained: 1.11.3

2021-06-08

2021-06-29

Official docker images, more web crypto APIs added, BroadcastChannel, abortable fetch, deno lint stabilized


Old version, no longer maintained: 1.12.0

Old version, no longer maintained: 1.12.2

2021-07-13

2021-07-26

Support for generateKey, sign and verify web crypto APIs, native WebSocket server support, TypeScript support in REPL, support for MessagePort and MessageChannel


Old version, no longer maintained: 1.13.0

Old version, no longer maintained: 1.13.2

2021-08-10

2021-08-23

Native HTTP web server stabilization, support for self.structuredClone(), AbortSignal support, support for navigator.hardwareConcurrency API, experimental WebSocketStream API, FFI replaces native plugin system


Old version, no longer maintained: 1.14.0

Old version, no longer maintained: 1.14.3

2021-09-14

2021-10-04

URLPattern, file locking APIs, mutual TLS support in fetch, TypeScript 4.4, URL parsing and std/http performance improvements


Old version, no longer maintained: 1.15.0

Old version, no longer maintained: 1.15.3

2021-10-12

2021-10-25

New crypto APIs, deno uninstall subcommand, nested testing API, FFI improvements, new --compat flag for improved Node compatibility


Old version, no longer maintained: 1.16.0

Old version, no longer maintained: 1.16.4

2021-11-09

2021-12-03

Fetch support for file URLs, new unstable signal listener API, support for specifying a reason when aborting an AbortSignal, improvements to Web Streams API, findLast and findLastIndex array methods, Deno to npm package build tool


Old version, no longer maintained: 1.17.0

Old version, no longer maintained: 1.17.3

2021-12-16

2022-01-12

Import assertions and JSON modules, improvements to the Web Cryptography API, unref timers, unstable support for negotiating ALPN, TypeScript 4.5


Current stable version: 1.18.0

Current stable version: 1.18.0

2022-01-20

2022-01-20

Config file auto-discovery, completion of Web Cryptography API, stabilization of test steps API, FFI improvements, LSP improvements


Legend:Old versionOlder version, still maintainedLatest versionLatest preview versionFuture release

The table above was created using the official Releases page.[20]

Example[edit]
This runs a basic Deno script without any file system or network permissions (sandbox mode):deno run main.ts
Explicit flags are required to enable permissions:deno run --allow-read --allow-net main.ts
To inspect the dependency tree of the script, use the info subcommand:deno info main.ts
A basic Hello, World! program in Deno looks just like it would in Node.js:console.log("Hello, World!");
A global Deno namespace exposes APIs that are not available in the browser. A Unix cat program could be implemented as follows:/* cat.ts */

/* Deno APIs are exposed through the `Deno` namespace. */
const { stdout, open, copy, args } = Deno;

// Top-level await is supported
for (let i = 0; i < args.length; i++) {
    const filename = args[i]; // Obtains command-line arguments.
    const file = await open(filename); // Opens the corresponding file for reading.
    await copy(file, stdout); // Performs a zero-copy asynchronous copy from `file` to `stdout`.
}
The Deno.copy function used above works much like Go's io.Copy, where stdout (standard output) is the destination Writer, and file is the source Reader.
To run this program, we need to enable read permission to the filesystem:deno run --allow-read cat.ts myfile
The following Deno script implements a basic HTTP server:// Imports `serve` from the remote Deno standard library, using URL.
import { serve } from "https://deno.land/std@v0.21.0/http/server.ts";

// `serve` function returns an asynchronous iterator, yielding a stream of requests
for await (const req of serve({ port: 8000 })) {
    req.respond({ body: "Hello, World!\n" });
}
When running this program, Deno will automatically download and cache the remote standard library files, and compile the code.
Similarly, we can run a standard library script (such as a file server) directly without explicitly downloading, by providing the URL as the input filename (-A turns on all permissions):$ deno run -A https://deno.land/std/http/file_server.ts
Download https://deno.land/std/http/file_server.ts
Compile https://deno.land/std/http/file_server.ts
...
HTTP server listening on http://0.0.0.0:4500/

References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ Jump up to: a b .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Ryan Dahl, Bert Belder (2021-03-29). "Announcing the Deno Company".

^ "Contributors, denoland/deno, Github". GitHub. Retrieved 5 July 2019.

^ https://github.com/denoland/deno/releases/tag/v1.18.0.

^ "deno/LICENSE at main". GitHub. Retrieved 5 July 2019.

^ "The MIT License". Open Source Initiative. 17 September 2018. Retrieved 17 September 2018.

^ "Deno: Secure V8 TypeScript Runtime from Original Node.js Creator". InfoQ. Retrieved 2019-05-17.

^ Jump up to: a b JSConf (2018-06-06), 10 Things I Regret About Node.js - Ryan Dahl - JSConf EU 2018, retrieved 2019-05-17

^ Jump up to: a b c "Deno Manual". deno.land. Retrieved 2019-05-17.

^ Paul Krill (2018-06-21). "Ryan Dahl's Node.js regrets lead to Deno". InfoWorld.

^ Dahl, Ryan (2018-06-06). "Design mistakes in Node" (PDF). Github.

^ "denoland/deno, branch "golang"". Github.

^ "Suggestion: Look into porting to Rust and using Tokio". GitHub.

^ "Tokio - The asynchronous run-time for the Rust programming language". Tokio.rs.

^ "Protobuf seems like a lot of overhead for this use case?". Github.

^ "Remove flatbuffers". GitHub.

^ "Replace flatbuffers". GitHub.

^ "denoland/deno_std: deno standard modules". Github.

^ "Deno 1.0". deno.land. Retrieved 2020-05-14.

^ "Deno Is Ready for Production". InfoQ. Retrieved 2020-07-01.

^ "Releases". GitHub. 2020-12-30. Retrieved 2021-01-14.


External links[edit]
Official website 
Official Deno manual
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteJavaScriptCode analysis
ESLint
JSHint
JSLint
Supersets
JS++
Objective-J
TypeScript
Transpilers
AtScript
Babel
ClojureScript
CoffeeScript
Dart
Elm
Emscripten
Google Closure Compiler
Google Web Toolkit
Haxe
LiveScript
Morfik
Nim
Opa
PureScript
Reason
WebSharper
Concepts
Client-side
JavaScript library
JavaScript syntax
Debuggers
Chrome DevTools
Firefox Inspector
Komodo IDE
Microsoft Edge DevTools
Opera DevTools
Safari Web Inspector
Doc generators
JSDoc
Editors (comparison)
Ace
Cloud9 IDE
Atom
CodeMirror
Brackets
Light Table
PhpStorm
Orion
Visual Studio
Visual Studio Express
Visual Studio Code
Visual Studio Team Services
Vim
Engines
Comparison of engines
DOM support
List of ECMAScript engines
Frameworks
Comparison of JavaScript frameworks
List of JavaScript libraries
Related technologies
Ajax
AssemblyScript
asm.js
Cascading Style Sheets
Document Object Model
HTML
HTML5
JSON
WebAssembly
WebAuthn
Package managers
npm
Module bundlers
Webpack
Server-side
Active Server Pages
CommonJS
Deno
JSGI
Node.js
Wakanda
Unit testing frameworks (list)
Jasmine
Jest
Mocha
QUnit
People
Douglas Crockford
Brendan Eich
John Resig





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Deno_(software)&oldid=1068633530"
		Categories: 2018 softwareFree softwareJavaScript programming toolsPackage management systemsRun-time systemsFree software programmed in RustHidden categories: Articles with short descriptionShort description is different from Wikidata
	
