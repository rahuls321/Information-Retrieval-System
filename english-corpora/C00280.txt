
Title:
Graph coloring
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Assignment of colors to elements of a graph subject to certain constraints.
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Not to be confused with Edge coloring.
  A proper vertex coloring of the Petersen graph with 3 colors, the minimum number possible.
In graph theory, graph coloring is a special case of graph labeling; it is an assignment of labels traditionally called "colors" to elements of a graph subject to certain constraints. In its simplest form, it is a way of coloring the vertices of a graph such that no two adjacent vertices are of the same color; this is called a vertex coloring. Similarly, an edge coloring assigns a color to each edge so that no two adjacent edges are of the same color, and a face coloring of a planar graph assigns a color to each face or region so that no two faces that share a boundary have the same color.
Vertex coloring is often used to introduce graph coloring problems, since other coloring problems can be transformed into a vertex coloring instance. For example, an edge coloring of a graph is just a vertex coloring of its line graph, and a face coloring of a plane graph is just a vertex coloring of its dual. However, non-vertex coloring problems are often stated and studied as-is. This is partly pedagogical, and partly because some problems are best studied in their non-vertex form, as in the case of edge coloring.
The convention of using colors originates from coloring the countries of a map, where each face is literally colored. This was generalized to coloring the faces of a graph embedded in the plane. By planar duality it became coloring the vertices, and in this form it generalizes to all graphs. In mathematical and computer representations, it is typical to use the first few positive or non-negative integers as the "colors". In general, one can use any finite set as the "color set". The nature of the coloring problem depends on the number of colors but not on what they are.
Graph coloring enjoys many practical applications as well as theoretical challenges. Beside the classical types of problems, different limitations can also be set on the graph, or on the way a color is assigned, or even on the color itself. It has even reached popularity with the general public in the form of the popular number puzzle Sudoku. Graph coloring is still a very active field of research.
Note: Many terms used in this article are defined in Glossary of graph theory.

Contents

1 History
2 Definition and terminology

2.1 Vertex coloring
2.2 Chromatic polynomial
2.3 Edge coloring
2.4 Total coloring
2.5 Unlabeled coloring


3 Properties

3.1 Upper bounds on the chromatic number
3.2 Lower bounds on the chromatic number
3.3 Graphs with high chromatic number
3.4 Bounds on the chromatic index
3.5 Other properties
3.6 Open problems


4 Algorithms

4.1 Polynomial time
4.2 Exact algorithms
4.3 Contraction
4.4 Greedy coloring
4.5 Heuristic algorithms
4.6 Parallel and distributed algorithms
4.7 Decentralized algorithms
4.8 Computational complexity


5 Applications

5.1 Scheduling
5.2 Register allocation
5.3 Other applications


6 Other colorings

6.1 Ramsey theory
6.2 Other colorings


7 See also
8 Notes
9 References
10 External links



History[edit]
See also: History of the four color theorem and History of graph theory
The first results about graph coloring deal almost exclusively with planar graphs in the form of the coloring of maps.
While trying to color a map of the counties of England, Francis Guthrie postulated the four color conjecture, noting that four colors were sufficient to color the map so that no regions sharing a common border received the same color. Guthrie's brother passed on the question to his mathematics teacher Augustus de Morgan at University College, who mentioned it in a letter to William Hamilton in 1852. Arthur Cayley raised the problem at a meeting of the London Mathematical Society in 1879. The same year, Alfred Kempe published a paper that claimed to establish the result, and for a decade the four color problem was considered solved. For his accomplishment Kempe was elected a Fellow of the Royal Society and later President of the London Mathematical Society.[1]
In 1890, Heawood pointed out that Kempe's argument was wrong. However, in that paper he proved the five color theorem, saying that every planar map can be colored with no more than five colors, using ideas of Kempe. In the following century, a vast amount of work and theories were developed to reduce the number of colors to four,  until the four color theorem was finally proved in 1976 by Kenneth Appel and Wolfgang Haken. The proof went back to the ideas of Heawood and Kempe and largely disregarded the intervening developments.[2] The proof of the four color theorem is also noteworthy for being the first major computer-aided proof.
In 1912, George David Birkhoff introduced the chromatic polynomial to study the coloring problems, which was generalised to the Tutte polynomial by Tutte, important structures in algebraic graph theory. Kempe had already drawn attention to the general, non-planar case in 1879,[3] and many results on generalisations of planar graph coloring to surfaces of higher order followed in the early 20th century.
In 1960, Claude Berge formulated another conjecture about graph coloring, the strong perfect graph conjecture, originally motivated by an information-theoretic concept called the zero-error capacity of a graph introduced by Shannon. The conjecture remained unresolved for 40 years, until it was established as the celebrated strong perfect graph theorem by Chudnovsky, Robertson, Seymour, and Thomas in 2002.
Graph coloring has been studied as an algorithmic problem since the early 1970s: the chromatic number problem (see below) is one of Karp's 21 NP-complete problems from 1972, and at approximately the same time various exponential-time algorithms were developed based on backtracking and on the deletion-contraction recurrence of Zykov (1949). One of the major applications of graph coloring,  register allocation in compilers, was introduced in 1981.

Definition and terminology[edit]
  This graph can be 3-colored in 12 different ways.
Vertex coloring[edit]
When used without any qualification, a coloring of a graph is almost always a proper vertex coloring, namely a labeling of the graph's vertices with colors such that no two vertices sharing the same edge have the same color. Since a vertex with a loop (i.e. a connection directly back to itself) could never be properly colored, it is understood that graphs in this context are loopless.
The terminology of using colors for vertex labels goes back to map coloring. Labels like red and blue are only used when the number of colors is small, and normally it is understood that the labels are drawn from the integers {1, 2, 3, ...}.

A coloring using at most k colors is called a (proper) k-coloring. The smallest number of colors needed to color a graph G is called its chromatic number, and is often denoted Ï(G).  Sometimes Î³(G) is used, since Ï(G) is also used to denote the Euler characteristic of a graph. A graph that can be assigned a (proper) k-coloring is  k-colorable, and it is k-chromatic if its chromatic number is exactly k. A subset of vertices assigned to the same color is called a color class, every such class forms an independent set. Thus, a k-coloring is the same as a partition of the vertex set into k independent sets, and the terms k-partite and k-colorable have the same meaning.

Chromatic polynomial[edit]
  All non-isomorphic graphs on 3 vertices and their chromatic polynomials. The empty graph E3 (red) admits a 1-coloring; the complete graph K3 (blue) admits a 3-coloring; the other graphs admit a 2-coloring.
Main article: Chromatic polynomial
The chromatic polynomial counts the number of ways a graph can be colored using some of a given number of colors. For example, using three colors, the graph in the adjacent image can be colored in 12 ways. With only two colors, it cannot be colored at all. With four colors, it can be colored in 24 + 4â12 = 72 ways: using all four colors, there are 4! = 24 valid colorings (every assignment of four colors to any 4-vertex graph is a proper coloring); and for every choice of three of the four colors, there are 12 valid 3-colorings. So, for the graph in the example, a table of the number of valid colorings would start like this:




Available colors

1
2
3
4
â¦


Number of colorings

0
0
12
72
â¦

The chromatic polynomial is a function 
  
    
      
        P
        (
        G
        ,
        t
        )
      
    
    {\displaystyle P(G,t)}
  
 that counts the number of t-colorings of G. As the name indicates, for a given G the function is indeed a polynomial in t. For the example graph, 
  
    
      
        P
        (
        G
        ,
        t
        )
        =
        t
        (
        t
        â
        1
        
          )
          
            2
          
        
        (
        t
        â
        2
        )
      
    
    {\displaystyle P(G,t)=t(t-1)^{2}(t-2)}
  
, and indeed 
  
    
      
        P
        (
        G
        ,
        4
        )
        =
        72
      
    
    {\displaystyle P(G,4)=72}
  
.
The chromatic polynomial includes more information about the colorability of G than does the chromatic number. Indeed, Ï is the smallest positive integer that is not a zero of the chromatic polynomial:


  
    
      
        Ï
        (
        G
        )
        =
        min
        {
        k
        
        :
        
        P
        (
        G
        ,
        k
        )
        >
        0
        }
        .
      
    
    {\displaystyle \chi (G)=\min\{k\,\colon \,P(G,k)>0\}.}
  


Chromatic polynomials for certain graphs


Triangle K3


  
    
      
        t
        (
        t
        â
        1
        )
        (
        t
        â
        2
        )
      
    
    {\displaystyle t(t-1)(t-2)}
  



Complete graph Kn


  
    
      
        t
        (
        t
        â
        1
        )
        (
        t
        â
        2
        )
        â¯
        (
        t
        â
        (
        n
        â
        1
        )
        )
      
    
    {\displaystyle t(t-1)(t-2)\cdots (t-(n-1))}
  



Tree with n vertices


  
    
      
        t
        (
        t
        â
        1
        
          )
          
            n
            â
            1
          
        
      
    
    {\displaystyle t(t-1)^{n-1}}
  



Cycle Cn


  
    
      
        (
        t
        â
        1
        
          )
          
            n
          
        
        +
        (
        â
        1
        
          )
          
            n
          
        
        (
        t
        â
        1
        )
      
    
    {\displaystyle (t-1)^{n}+(-1)^{n}(t-1)}
  



Petersen graph


  
    
      
        t
        (
        t
        â
        1
        )
        (
        t
        â
        2
        )
        (
        
          t
          
            7
          
        
        â
        12
        
          t
          
            6
          
        
        +
        67
        
          t
          
            5
          
        
        â
        230
        
          t
          
            4
          
        
        +
        529
        
          t
          
            3
          
        
        â
        814
        
          t
          
            2
          
        
        +
        775
        t
        â
        352
        )
      
    
    {\displaystyle t(t-1)(t-2)(t^{7}-12t^{6}+67t^{5}-230t^{4}+529t^{3}-814t^{2}+775t-352)}
  


Edge coloring[edit]
Main article: Edge coloring
An edge coloring of a graph is a  proper coloring of the edges, meaning an assignment of colors to edges so that no vertex is incident to two edges of the same color. An edge coloring with k colors is called a k-edge-coloring and is equivalent to the problem of partitioning the edge set into k matchings. The smallest number of colors needed for an edge coloring of a graph G is the chromatic index, or edge chromatic number, Ïâ²(G). A Tait coloring is a 3-edge coloring of a cubic graph. The four color theorem is equivalent to the assertion that every planar cubic bridgeless graph admits a Tait coloring.

Total coloring[edit]
Main article: Total coloring
Total coloring is a type of coloring on the vertices and edges of a graph. When used without any qualification, a total coloring is always assumed to be proper in the sense that no adjacent vertices, no adjacent edges, and no edge and its end-vertices are assigned the same color. The total chromatic number Ïâ³(G) of a graph G is the fewest colors needed in any total coloring of G.

.mw-parser-output .vanchor>:target~.vanchor-text{background-color:#b1d2ff}Unlabeled coloring[edit]
An unlabeled coloring of a graph is an orbit of a coloring under the action of the automorphism group of the graph. Note that the colors remain labeled; it is the graph that is unlabeled.
There is an analogue of the chromatic polynomial which counts the number of unlabeled colorings of a graph from a given finite color set.
If we interpret a coloring of a graph on 
  
    
      
        d
      
    
    {\displaystyle d}
  
 vertices as a vector in 
  
    
      
        
          
            Z
          
          
            d
          
        
      
    
    {\displaystyle \mathbb {Z} ^{d}}
  
, the action of an automorphism is a permutation of the coefficients in the coloring vector.

Properties[edit]
Upper bounds on the chromatic number[edit]
Assigning distinct colors to distinct vertices always yields a proper coloring, so


  
    
      
        1
        â¤
        Ï
        (
        G
        )
        â¤
        n
        .
      
    
    {\displaystyle 1\leq \chi (G)\leq n.}
  

The only graphs that can be 1-colored are edgeless graphs. A complete graph 
  
    
      
        
          K
          
            n
          
        
      
    
    {\displaystyle K_{n}}
  
 of n vertices requires 
  
    
      
        Ï
        (
        
          K
          
            n
          
        
        )
        =
        n
      
    
    {\displaystyle \chi (K_{n})=n}
  
 colors. In an optimal coloring there must be at least one of the graph's m edges between every pair of color classes, so


  
    
      
        Ï
        (
        G
        )
        (
        Ï
        (
        G
        )
        â
        1
        )
        â¤
        2
        m
        .
      
    
    {\displaystyle \chi (G)(\chi (G)-1)\leq 2m.}
  

If G contains a clique of size k, then at least k colors are needed to color that clique; in other words, the chromatic number is at least the clique number:


  
    
      
        Ï
        (
        G
        )
        â¥
        Ï
        (
        G
        )
        .
      
    
    {\displaystyle \chi (G)\geq \omega (G).}
  

For perfect graphs this bound is tight. Finding cliques is known as the clique problem.
More generally a family 
  
    
      
        
          
            F
          
        
      
    
    {\displaystyle {\mathcal {F}}}
  
 of graphs is 
  
    
      
        Ï
      
    
    {\displaystyle \chi }
  
-bounded  if there is some function 
  
    
      
        c
      
    
    {\displaystyle c}
  
 such that the graphs 
  
    
      
        G
      
    
    {\displaystyle G}
  
 in 
  
    
      
        
          
            F
          
        
      
    
    {\displaystyle {\mathcal {F}}}
  
 can be colored with at most 
  
    
      
        c
        (
        Ï
        (
        G
        )
        )
      
    
    {\displaystyle c(\omega (G))}
  
 colors, for the family of the perfect graphs this function is 
  
    
      
        c
        (
        Ï
        (
        G
        )
        )
        =
        Ï
        (
        G
        )
      
    
    {\displaystyle c(\omega (G))=\omega (G)}
  
.
The 2-colorable graphs are exactly the bipartite graphs, including trees and forests.
By the four color theorem, every planar graph can be 4-colored.
A greedy coloring shows that every graph can be colored with one more color than the maximum vertex degree,


  
    
      
        Ï
        (
        G
        )
        â¤
        Î
        (
        G
        )
        +
        1.
      
    
    {\displaystyle \chi (G)\leq \Delta (G)+1.}
  

Complete graphs have 
  
    
      
        Ï
        (
        G
        )
        =
        n
      
    
    {\displaystyle \chi (G)=n}
  
 and 
  
    
      
        Î
        (
        G
        )
        =
        n
        â
        1
      
    
    {\displaystyle \Delta (G)=n-1}
  
,  and odd cycles have 
  
    
      
        Ï
        (
        G
        )
        =
        3
      
    
    {\displaystyle \chi (G)=3}
  
 and 
  
    
      
        Î
        (
        G
        )
        =
        2
      
    
    {\displaystyle \Delta (G)=2}
  
, so for these graphs this bound is best possible. In all other cases, the bound can be slightly improved; Brooks' theorem[4] states that

Brooks' theorem: 
  
    
      
        Ï
        (
        G
        )
        â¤
        Î
        (
        G
        )
      
    
    {\displaystyle \chi (G)\leq \Delta (G)}
  
 for a connected, simple graph G, unless G is a complete graph or an odd cycle.
Lower bounds on the chromatic number[edit]
Several lower bounds for the chromatic bounds have been discovered over the years:
Hoffman's bound: Let 
  
    
      
        W
      
    
    {\displaystyle W}
  
 be a real symmetric matrix such that 
  
    
      
        
          W
          
            i
            ,
            j
          
        
        =
        0
      
    
    {\displaystyle W_{i,j}=0}
  
 whenever 
  
    
      
        (
        i
        ,
        j
        )
      
    
    {\displaystyle (i,j)}
  
 is not an edge in 
  
    
      
        G
      
    
    {\displaystyle G}
  
. Define 
  
    
      
        
          Ï
          
            W
          
        
        (
        G
        )
        =
        1
        â
        
          
            
              
                
                  Î»
                  
                    max
                  
                
                (
                W
                )
              
              
                
                  Î»
                  
                    min
                  
                
                (
                W
                )
              
            
          
        
      
    
    {\displaystyle \chi _{W}(G)=1-{\tfrac {\lambda _{\max }(W)}{\lambda _{\min }(W)}}}
  
, where 
  
    
      
        
          Î»
          
            max
          
        
        (
        W
        )
        ,
        
          Î»
          
            min
          
        
        (
        W
        )
      
    
    {\displaystyle \lambda _{\max }(W),\lambda _{\min }(W)}
  
 are the largest and smallest eigenvalues of 
  
    
      
        W
      
    
    {\displaystyle W}
  
. Define 
  
    
      
        
          Ï
          
            H
          
        
        (
        G
        )
        =
        
          max
          
            W
          
        
        
          Ï
          
            W
          
        
        (
        G
        )
      
    
    {\textstyle \chi _{H}(G)=\max _{W}\chi _{W}(G)}
  
, with 
  
    
      
        W
      
    
    {\displaystyle W}
  
 as above. Then:


  
    
      
        
          Ï
          
            H
          
        
        (
        G
        )
        â¤
        Ï
        (
        G
        )
        .
      
    
    {\displaystyle \chi _{H}(G)\leq \chi (G).}
  

Vector chromatic number: Let 
  
    
      
        W
      
    
    {\displaystyle W}
  
 be a positive semi-definite matrix such that 
  
    
      
        
          W
          
            i
            ,
            j
          
        
        â¤
        â
        
          
            
              1
              
                k
                â
                1
              
            
          
        
      
    
    {\displaystyle W_{i,j}\leq -{\tfrac {1}{k-1}}}
  
 whenever 
  
    
      
        (
        i
        ,
        j
        )
      
    
    {\displaystyle (i,j)}
  
 is an edge in 
  
    
      
        G
      
    
    {\displaystyle G}
  
. Define 
  
    
      
        
          Ï
          
            V
          
        
        (
        G
        )
      
    
    {\displaystyle \chi _{V}(G)}
  
 to be the least k for which such a matrix 
  
    
      
        W
      
    
    {\displaystyle W}
  
 exists. Then


  
    
      
        
          Ï
          
            V
          
        
        (
        G
        )
        â¤
        Ï
        (
        G
        )
        .
      
    
    {\displaystyle \chi _{V}(G)\leq \chi (G).}
  

LovÃ¡sz number: The LovÃ¡sz number of a complementary graph is also a lower bound on the chromatic number:


  
    
      
        Ï
        (
        
          
            
              G
              Â¯
            
          
        
        )
        â¤
        Ï
        (
        G
        )
        .
      
    
    {\displaystyle \vartheta ({\bar {G}})\leq \chi (G).}
  

Fractional chromatic number: The fractional chromatic number of a graph is a lower bound on the chromatic number as well:


  
    
      
        
          Ï
          
            f
          
        
        (
        G
        )
        â¤
        Ï
        (
        G
        )
        .
      
    
    {\displaystyle \chi _{f}(G)\leq \chi (G).}
  

These bounds are ordered as follows:


  
    
      
        
          Ï
          
            H
          
        
        (
        G
        )
        â¤
        
          Ï
          
            V
          
        
        (
        G
        )
        â¤
        Ï
        (
        
          
            
              G
              Â¯
            
          
        
        )
        â¤
        
          Ï
          
            f
          
        
        (
        G
        )
        â¤
        Ï
        (
        G
        )
        .
      
    
    {\displaystyle \chi _{H}(G)\leq \chi _{V}(G)\leq \vartheta ({\bar {G}})\leq \chi _{f}(G)\leq \chi (G).}
  

Graphs with high chromatic number[edit]
Graphs with large cliques have a high chromatic number, but the opposite is not true. The GrÃ¶tzsch graph is an example of a 4-chromatic graph without a triangle, and the example can be generalized to the Mycielskians.

Theorem (William T. TutteÂ 1947,[5] Alexander ZykovÂ 1949, Jan MycielskiÂ 1955): There exist triangle-free graphs with arbitrarily high chromatic number.
To prove this, both, Mycielski and Zykov, each gave a construction of an inductively defined family of triangle-free graphs but with arbitrarily large chromatic number.[6] Burling (1965)[7] constructed axis aligned boxes in 
  
    
      
        
          
            R
          
          
            3
          
        
      
    
    {\displaystyle \mathbb {R} ^{3}}
  
 whose intersection graph is triangle-free and requires arbitrarily many colors to be properly colored. This family of graphs is then called the Burling graphs. The same class of graphs is used for the construction of a family of triangle-free line segments in the plane, given by Pawlik et. al. (2014).[8] It shows that the chromatic number of its intersection graph is arbitrarily large as well. Hence, this implies that axis aligned boxes in 
  
    
      
        
          
            R
          
          
            3
          
        
      
    
    {\displaystyle \mathbb {R} ^{3}}
  
 as well as line segments in 
  
    
      
        
          
            R
          
          
            2
          
        
      
    
    {\displaystyle \mathbb {R} ^{2}}
  
 are not Ï-bounded.[8]
From Brooks's theorem, graphs with high chromatic number must have high maximum degree. But colorability is not an entirely local phenomenon: A graph with high girth looks locally like a tree, because all cycles are long, but its chromatic number need not be 2:

Theorem (ErdÅs): There exist graphs of arbitrarily high girth and chromatic number.[9]
Bounds on the chromatic index[edit]
An edge coloring of G is a vertex coloring of its line graph 
  
    
      
        L
        (
        G
        )
      
    
    {\displaystyle L(G)}
  
, and vice versa. Thus,


  
    
      
        
          Ï
          â²
        
        (
        G
        )
        =
        Ï
        (
        L
        (
        G
        )
        )
        .
      
    
    {\displaystyle \chi '(G)=\chi (L(G)).}
  

There is a strong relationship between edge colorability and the graph's maximum degree 
  
    
      
        Î
        (
        G
        )
      
    
    {\displaystyle \Delta (G)}
  
. Since all edges incident to the same vertex need their own color, we have


  
    
      
        
          Ï
          â²
        
        (
        G
        )
        â¥
        Î
        (
        G
        )
        .
      
    
    {\displaystyle \chi '(G)\geq \Delta (G).}
  

Moreover,

KÅnig's theorem: 
  
    
      
        
          Ï
          â²
        
        (
        G
        )
        =
        Î
        (
        G
        )
      
    
    {\displaystyle \chi '(G)=\Delta (G)}
  
 if G is bipartite.
In general, the relationship is even stronger than what Brooks's theorem gives for vertex coloring:

Vizing's Theorem: A graph of maximal degree 
  
    
      
        Î
      
    
    {\displaystyle \Delta }
  
 has edge-chromatic number 
  
    
      
        Î
      
    
    {\displaystyle \Delta }
  
 or 
  
    
      
        Î
        +
        1
      
    
    {\displaystyle \Delta +1}
  
.
Other properties[edit]
A graph has a k-coloring if and only if it has an acyclic orientation for which the longest path has length at most k; this is the GallaiâHasseâRoyâVitaver theorem (NeÅ¡etÅil & Ossona de Mendez 2012).
For planar graphs, vertex colorings are essentially dual to nowhere-zero flows.
About infinite graphs, much less is known.
The following are two of the few results about infinite graph coloring:

If all finite subgraphs of an infinite graph G are k-colorable, then so is G, under the assumption of the axiom of choice. This is the de BruijnâErdÅs theorem of de Bruijn & ErdÅs (1951).
If a graph admits a full n-coloring for every n â¥ n0, it admits an infinite full coloring (Fawcett 1978).
Open problems[edit]
As stated above, 
  
    
      
        Ï
        (
        G
        )
        â¤
        Ï
        (
        G
        )
        â¤
        Î
        (
        G
        )
        +
        1.
      
    
    {\displaystyle \omega (G)\leq \chi (G)\leq \Delta (G)+1.}
  
 A conjecture of Reed from 1998 is that the value is essentially closer to the lower bound, 

  
    
      
        Ï
        (
        G
        )
        â¤
        
          â
          
            
              
                Ï
                (
                G
                )
                +
                Î
                (
                G
                )
                +
                1
              
              2
            
          
          â
        
        .
      
    
    {\displaystyle \chi (G)\leq \left\lceil {\frac {\omega (G)+\Delta (G)+1}{2}}\right\rceil .}
  

The chromatic number of the plane, where two points are adjacent if they have unit distance, is unknown, although it is one of 5, 6, or 7. Other open problems concerning the chromatic number of graphs include the Hadwiger conjecture stating that every graph with chromatic number k has a complete graph on k vertices as a minor, the ErdÅsâFaberâLovÃ¡sz conjecture bounding the chromatic number of unions of complete graphs that have at most one vertex in common to each pair, and the Albertson conjecture that among k-chromatic graphs the complete graphs are the ones with smallest crossing number.
When Birkhoff and Lewis introduced the chromatic polynomial in their attack on the four-color theorem, they conjectured that for planar graphs G, the polynomial 
  
    
      
        P
        (
        G
        ,
        t
        )
      
    
    {\displaystyle P(G,t)}
  
 has no zeros in the region 
  
    
      
        [
        4
        ,
        â
        )
      
    
    {\displaystyle [4,\infty )}
  
. Although it is known that such a chromatic polynomial has no zeros in the region 
  
    
      
        [
        5
        ,
        â
        )
      
    
    {\displaystyle [5,\infty )}
  
 and that 
  
    
      
        P
        (
        G
        ,
        4
        )
        â 
        0
      
    
    {\displaystyle P(G,4)\neq 0}
  
, their conjecture is still unresolved. It also remains an unsolved problem to characterize graphs which have the same chromatic polynomial and to determine which polynomials are chromatic.

Algorithms[edit]
.mw-parser-output .infobox-subbox{padding:0;border:none;margin:-3px;width:auto;min-width:100%;font-size:100%;clear:none;float:none;background-color:transparent}.mw-parser-output .infobox-3cols-child{margin:auto}.mw-parser-output .infobox .navbar{font-size:100%}body.skin-minerva .mw-parser-output .infobox-header,body.skin-minerva .mw-parser-output .infobox-subheader,body.skin-minerva .mw-parser-output .infobox-above,body.skin-minerva .mw-parser-output .infobox-title,body.skin-minerva .mw-parser-output .infobox-image,body.skin-minerva .mw-parser-output .infobox-full-data,body.skin-minerva .mw-parser-output .infobox-below{text-align:center}Graph coloringDecisionNameGraph coloring, vertex coloring, k-coloringInputGraph G with n vertices. Integer kOutputDoes G admit a proper vertex coloring with k colors?Running timeO(2ânn)[10]ComplexityNP-completeReduction from3-SatisfiabilityGareyâJohnsonGT4OptimisationNameChromatic numberInputGraph G with n vertices.OutputÏ(G)ComplexityNP-hardApproximabilityO(nâ(log n)â3(log log n)2)InapproximabilityO(n1âÎµ) unless PÂ =Â NPCounting problemNameChromatic polynomialInputGraph G with n vertices. Integer kOutputThe number PÂ (G,k) of proper k-colorings of GRunning timeO(2ânn)Complexity#P-completeApproximabilityFPRAS for restricted casesInapproximabilityNo PTAS unless PÂ =Â NP
Polynomial time[edit]
Determining if a graph can be colored with 2 colors is equivalent to determining whether or not the graph is bipartite, and thus computable in linear time using breadth-first search or depth-first search. More generally, the chromatic number and a corresponding coloring of  perfect graphs can be computed in polynomial time using semidefinite programming. Closed formulas for chromatic polynomial are known for many classes of graphs, such as forests, chordal graphs, cycles, wheels, and ladders, so these can be evaluated in polynomial time.
If the graph is planar and has low branch-width (or is nonplanar but with a known branch decomposition), then it can be solved in polynomial time using dynamic programming. In general, the time required is polynomial in the graph size, but exponential in the branch-width.

Exact algorithms[edit]
Brute-force search for a k-coloring considers each of the 
  
    
      
        
          k
          
            n
          
        
      
    
    {\displaystyle k^{n}}
  
 assignments of k colors to n vertices and checks for each if it is legal. To compute the chromatic number and the chromatic polynomial, this procedure is used for every 
  
    
      
        k
        =
        1
        ,
        â¦
        ,
        n
        â
        1
      
    
    {\displaystyle k=1,\ldots ,n-1}
  
, impractical for all but the smallest input graphs.
Using dynamic programming and a bound on the number of maximal independent sets, k-colorability can be decided in time and space 
  
    
      
        O
        (
        
          2.4423
          
            n
          
        
        )
      
    
    {\displaystyle O(2.4423^{n})}
  
.[11] Using the principle of inclusionâexclusion and Yates's algorithm for the fast zeta transform, k-colorability can be decided in time 
  
    
      
        O
        (
        
          2
          
            n
          
        
        n
        )
      
    
    {\displaystyle O(2^{n}n)}
  
[10] for any k. Faster algorithms  are  known for 3- and 4-colorability, which can be decided in time 
  
    
      
        O
        (
        
          1.3289
          
            n
          
        
        )
      
    
    {\displaystyle O(1.3289^{n})}
  
[12] and 
  
    
      
        O
        (
        
          1.7272
          
            n
          
        
        )
      
    
    {\displaystyle O(1.7272^{n})}
  
,[13] respectively. Exponentially faster algorithms are also known for 5- and 6-colorability, as well as for restricted families of graphs, including sparse graphs[14].

Contraction[edit]
The  contraction 
  
    
      
        G
        
          /
        
        u
        v
      
    
    {\displaystyle G/uv}
  
 of a graph G is the graph obtained by identifying the vertices u and v, and removing any edges between them. The remaining edges originally incident to u or v are now incident to their identification. This operation plays a major role in the analysis of graph coloring.
The chromatic number satisfies the recurrence relation:


  
    
      
        Ï
        (
        G
        )
        =
        
          min
        
        {
        Ï
        (
        G
        +
        u
        v
        )
        ,
        Ï
        (
        G
        
          /
        
        u
        v
        )
        }
      
    
    {\displaystyle \chi (G)={\text{min}}\{\chi (G+uv),\chi (G/uv)\}}
  

due to Zykov (1949), where u and v are non-adjacent vertices, and 
  
    
      
        G
        +
        u
        v
      
    
    {\displaystyle G+uv}
  
 is the graph with the edge uv added. Several algorithms are based on evaluating this recurrence and the resulting computation tree is sometimes called a Zykov tree. The running time is based on a heuristic for choosing the vertices u and v.
The chromatic polynomial satisfies the following recurrence relation


  
    
      
        P
        (
        G
        â
        u
        v
        ,
        k
        )
        =
        P
        (
        G
        
          /
        
        u
        v
        ,
        k
        )
        +
        P
        (
        G
        ,
        k
        )
      
    
    {\displaystyle P(G-uv,k)=P(G/uv,k)+P(G,k)}
  

where u and v are adjacent vertices, and 
  
    
      
        G
        â
        u
        v
      
    
    {\displaystyle G-uv}
  
 is the graph with the edge uv removed. 
  
    
      
        P
        (
        G
        â
        u
        v
        ,
        k
        )
      
    
    {\displaystyle P(G-uv,k)}
  
 represents the number of possible proper colorings of the graph, where the vertices may have the same or different colors. Then the proper colorings arise from two different graphs. To explain, if the vertices u and v have different colors, then we might as well consider a graph where u and v are adjacent. If u and v have the same colors, we might as well consider a graph where u and v are contracted. Tutte's curiosity about which other graph properties satisfied this recurrence led him to discover a bivariate generalization of the chromatic polynomial, the Tutte polynomial.
These expressions give rise to a recursive procedure called the deletionâcontraction algorithm, which forms the basis of many algorithms for graph coloring. The running time satisfies the same recurrence relation as the Fibonacci numbers, so in the worst case the algorithm runs in time within a polynomial factor  of 
  
    
      
        
          
            (
            
              
                
                  
                    1
                    +
                    
                      
                        5
                      
                    
                  
                  2
                
              
            
            )
          
          
            n
            +
            m
          
        
        =
        O
        (
        
          1.6180
          
            n
            +
            m
          
        
        )
      
    
    {\displaystyle \left({\tfrac {1+{\sqrt {5}}}{2}}\right)^{n+m}=O(1.6180^{n+m})}
  
 for n vertices and m edges.[15] The analysis can be improved to within a polynomial factor of the number 
  
    
      
        t
        (
        G
        )
      
    
    {\displaystyle t(G)}
  
 of spanning trees of the input graph.[16] In practice, branch and bound strategies and graph isomorphism rejection are employed to avoid some recursive calls. The running time depends on the heuristic used to pick the vertex pair.

Greedy coloring[edit]
Main article: Greedy coloring
  Two greedy colorings of the same graph using different vertex orders. The right example generalizes to 2-colorable graphs with n vertices, where the greedy algorithm expends 
  
    
      
        n
        
          /
        
        2
      
    
    {\displaystyle n/2}
  
 colors.
The  greedy algorithm considers the vertices in a specific order 
  
    
      
        
          v
          
            1
          
        
      
    
    {\displaystyle v_{1}}
  
,â¦,
  
    
      
        
          v
          
            n
          
        
      
    
    {\displaystyle v_{n}}
  
 and assigns to  
  
    
      
        
          v
          
            i
          
        
      
    
    {\displaystyle v_{i}}
  
 the smallest available color not used by 
  
    
      
        
          v
          
            i
          
        
      
    
    {\displaystyle v_{i}}
  
's neighbours among 
  
    
      
        
          v
          
            1
          
        
      
    
    {\displaystyle v_{1}}
  
,â¦,
  
    
      
        
          v
          
            i
            â
            1
          
        
      
    
    {\displaystyle v_{i-1}}
  
, adding a fresh color if needed. The quality of the resulting coloring depends on the chosen ordering. There exists an ordering that leads to a greedy coloring with the optimal number of 
  
    
      
        Ï
        (
        G
        )
      
    
    {\displaystyle \chi (G)}
  
 colors. On the other hand, greedy colorings can be arbitrarily bad; for example, the crown graph on n vertices  can be 2-colored, but has an ordering that leads to a greedy coloring with 
  
    
      
        n
        
          /
        
        2
      
    
    {\displaystyle n/2}
  
 colors.
For chordal graphs, and for special cases of chordal graphs such as interval graphs and indifference graphs, the greedy coloring algorithm can be used to find optimal colorings in polynomial time, by choosing the vertex ordering to be the reverse of a perfect elimination ordering for the graph. The perfectly orderable graphs generalize this property, but it is NP-hard to find a perfect ordering of these graphs.
If the vertices are ordered according to their degrees, the resulting greedy coloring uses at most 
  
    
      
        
          
            max
          
          
            i
          
        
        
          Â min
        
        {
        d
        (
        
          x
          
            i
          
        
        )
        +
        1
        ,
        i
        }
      
    
    {\displaystyle {\text{max}}_{i}{\text{ min}}\{d(x_{i})+1,i\}}
  
 colors, at most one more than the graph's maximum degree. This heuristic is sometimes called the  WelshâPowell algorithm.[17] Another heuristic due to BrÃ©laz establishes the ordering dynamically while the algorithm proceeds, choosing next  the vertex adjacent to the largest number of different colors.[18] Many other graph coloring heuristics are similarly based on greedy coloring for a specific static or dynamic strategy of ordering the vertices, these algorithms are sometimes called sequential coloring algorithms.
The maximum (worst) number of colors that can be obtained by the greedy algorithm, by using a vertex ordering chosen to maximize this number, is called the Grundy number of a graph.

Heuristic algorithms[edit]
Two well-known polynomial-time heuristics for graph colouring are the DSatur and recursive largest first (RLF) algorithms.
Similarly to the greedy colouring algorithm, DSatur colours the vertices of a graph one after another, expending a previously unused colour when needed. Once a new vertex has been coloured, the algorithm determines which of the remaining uncoloured vertices has the highest number of different colours in its neighbourhood and colours this vertex next. This is defined as the degree of saturation of a given vertex.
The recursive largest first algorithm operates in a different fashion by constructing each color class one at a time. It does this by identifying a maximal independent set of vertices in the graph using specialised heuristic rules. It then assigns these vertices to the same color and removes them from the graph. These actions are repeated on the remaining subgraph until no vertices remain.
The worst-case complexity of DSatur is 
  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
  
, where 
  
    
      
        n
      
    
    {\displaystyle n}
  
 is the number of vertices in the graph. The algorithm can also be implemented using a binary heap to store saturation degrees, operating in 
  
    
      
        O
        (
        (
        n
        +
        m
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O((n+m)\log n)}
  
 where 
  
    
      
        m
      
    
    {\displaystyle m}
  
 is the number of edges in the graph.[19] This produces much faster runs with sparse graphs. The overall complexity of RLF is slightly higher than DSatur at 
  
    
      
        
          
            O
          
        
        (
        m
        n
        )
      
    
    {\displaystyle {\mathcal {O}}(mn)}
  
.[19]
DSatur and RLF are exact for bipartite, cycle, and wheel graphs.[19]

Parallel and distributed algorithms[edit]
In the field of distributed algorithms, graph coloring is closely related to the problem of symmetry breaking.  The current state-of-the-art randomized algorithms are faster for sufficiently large maximum degree Î than deterministic algorithms. The fastest randomized algorithms employ the multi-trials technique by Schneider et al.[20]
In a symmetric graph, a deterministic distributed algorithm cannot find a proper vertex coloring. Some auxiliary information is needed in order to break symmetry. A standard assumption is that initially each node has a unique identifier, for example, from the set {1, 2, ..., n}. Put otherwise, we assume that we are given an n-coloring. The challenge is to reduce the number of colors from n to, e.g., ÎÂ +Â 1. The more colors are employed, e.g. O(Î) instead of ÎÂ +Â 1, the fewer communication rounds are required.[20]
A straightforward distributed version of the greedy algorithm for (ÎÂ +Â 1)-coloring requires Î(n) communication rounds in the worst case â information may need to be propagated from one side of the network to another side.
The simplest interesting case is an n-cycle. Richard Cole and Uzi Vishkin[21] show that there is a distributed algorithm that reduces the number of colors from n to O(logÂ n) in one synchronous communication step. By iterating the same procedure, it is possible to obtain a 3-coloring of an n-cycle in O(log*Â n) communication steps (assuming that we have unique node identifiers).
The function log*, iterated logarithm, is an extremely slowly growing function, "almost constant". Hence the result by Cole and Vishkin raised the question of whether there is a constant-time distributed algorithm for 3-coloring an n-cycle. Linial (1992) showed that this is not possible: any deterministic distributed algorithm requires Î©(log*Â n) communication steps to reduce an n-coloring to a 3-coloring in an n-cycle.
The technique by Cole and Vishkin can be applied in arbitrary bounded-degree graphs as well; the running time is poly(Î) + O(log*Â n).[22] The technique was extended to unit disk graphs by Schneider et al.[23] The fastest deterministic algorithms for (ÎÂ +Â 1)-coloring for small Î are due to Leonid Barenboim, Michael Elkin and Fabian Kuhn.[24] The algorithm by Barenboim et al. runs in time O(Î)Â +Â log*(n)/2, which is optimal in terms of n since the constant factor 1/2 cannot be improved due to Linial's lower bound. Panconesi & Srinivasan (1996) use network decompositions to compute a Î+1 coloring in time 
  
    
      
        
          2
          
            O
            
              (
              
                
                  log
                  â¡
                  n
                
              
              )
            
          
        
      
    
    {\displaystyle 2^{O\left({\sqrt {\log n}}\right)}}
  
.
The problem of edge coloring has also been studied in the distributed model. Panconesi & Rizzi (2001) achieve a (2ÎÂ âÂ 1)-coloring in O(ÎÂ +Â log*Â n) time in this model. The lower bound for distributed vertex coloring due to Linial (1992) applies to the distributed edge coloring problem as well.

Decentralized algorithms[edit]
Decentralized algorithms are ones where no message passing is allowed (in contrast to distributed algorithms where local message passing takes places), and efficient decentralized algorithms exist that will color a graph if a proper coloring exists.  These assume that a vertex is able to sense whether any of its neighbors are using the same color as the vertex i.e., whether a local conflict exists.  This is a mild assumption in many applications e.g. in wireless channel allocation it is usually reasonable to assume that a station will be able to detect whether other interfering transmitters are using the same channel (e.g. by measuring the SINR).  This sensing information is sufficient to allow algorithms based on learning automata to find a proper graph coloring with probability one.[25]

Computational complexity[edit]
Graph coloring is computationally hard. It is NP-complete to decide if a given graph admits a k-coloring for a given k except for the cases  k â {0,1,2} .    In particular, it is NP-hard to compute the chromatic number.[26] The 3-coloring problem remains NP-complete even on 4-regular planar graphs.[27] However, for every k > 3, a k-coloring of a planar graph exists by the four color theorem, and it is possible to find such a coloring in polynomial time.
The best known approximation algorithm computes a coloring of size at most within a factor O(n(logÂ logÂ n)2(logÂ n)â3) of the chromatic number.[28] For all ÎµÂ >Â 0, approximating the chromatic number within n1âÎµ is NP-hard.[29]
It is also NP-hard to color a 3-colorable graph with 4 colors[30] and a k-colorable graph with k(log kÂ )Â /Â 25 colors for sufficiently large constant k.[31]
Computing the coefficients of the chromatic polynomial is #P-hard. In fact, even computing the value of 
  
    
      
        Ï
        (
        G
        ,
        k
        )
      
    
    {\displaystyle \chi (G,k)}
  
 is #P-hard at any rational point k except for kÂ =Â 1  and kÂ =Â 2.[32] There is no FPRAS for evaluating the chromatic polynomial at any rational point kÂ â¥Â 1.5 except for kÂ =Â 2 unless NPÂ =Â RP.[33]
For edge coloring, the proof of Vizing's result gives an algorithm that uses at most Î+1 colors. However, deciding between the two candidate values for the edge chromatic number is NP-complete.[34] In terms of approximation algorithms, Vizing's algorithm shows that the edge chromatic number can be approximated to within 4/3,
and the hardness result shows that no (4/3Â âÂ ÎµÂ )-algorithm exists for any ÎµÂ >Â 0 unless PÂ =Â NP. These are among the oldest results in the literature of approximation algorithms, even though neither paper makes explicit use of that notion.[35]

Applications[edit]
Scheduling[edit]
Vertex coloring models to a number of scheduling problems.[36] In the cleanest form, a given set of jobs need to be assigned to time slots, each job requires one such slot. Jobs can be scheduled in any order, but pairs of jobs may be in conflict in the sense that they may not be assigned to the same time slot, for example because they both rely on a shared resource. The corresponding graph contains a vertex for every job and an edge for every conflicting pair of jobs. The chromatic number of the graph is exactly the minimum makespan, the optimal time to finish all jobs without conflicts.
Details of the scheduling problem define the structure of the graph. For example, when assigning aircraft to flights, the resulting conflict graph is an interval graph, so the coloring problem can be solved efficiently. In bandwidth allocation to radio stations, the resulting conflict graph is a unit disk graph, so the coloring problem is 3-approximable.

Register allocation[edit]
Main article: Register allocation
A compiler is a computer program that translates one computer language into another. To improve the execution time of the resulting code, one of the techniques of compiler optimization is register allocation, where the most frequently used values of the compiled program are kept in the fast processor registers. Ideally, values are assigned to registers so that they can all reside in the registers when they are used.
The textbook approach to this problem is to model it as a graph coloring problem.[37] The compiler constructs an  interference graph, where vertices are variables and an edge connects two vertices if they are needed at the same time. If the graph can be colored with k colors then any set of variables needed at the same time can be stored in at most k registers.

Other applications[edit]
The problem of coloring a graph arises in many practical areas such as pattern matching, sports scheduling, designing seating plans, exam timetabling, the scheduling of  taxis, and solving Sudoku puzzles.[19]

Other colorings[edit]
Ramsey theory[edit]
Main article: Ramsey theory
An important class of improper coloring problems is studied in Ramsey theory, where the graph's edges are assigned to colors, and there is no restriction on the colors of incident edges. A simple example is the friendship theorem, which states that in any coloring of the edges of 
  
    
      
        
          K
          
            6
          
        
      
    
    {\displaystyle K_{6}}
  
, the complete graph of six vertices, there will be a monochromatic triangle; often illustrated by saying that any group of six people either has three mutual strangers or three mutual acquaintances. Ramsey theory is concerned with generalisations of this idea to seek regularity amid disorder, finding general conditions for the existence of monochromatic subgraphs with given structure.

Other colorings[edit]





Adjacent-vertex-distinguishing-total coloring
A total coloring with the additional restriction that any two adjacent vertices have different color sets
Acyclic coloring
Every 2-chromatic subgraph is acyclic
B-coloring
a coloring of the vertices where each color class contains a vertex that has a neighbor in all other color classes.
Circular coloring
Motivated by task systems in which production proceeds in a cyclic way
Cocoloring
An improper vertex coloring where every color class induces an independent set or a clique
Complete coloring
Every pair of colors appears on at least one edge
Defective coloring
An improper vertex coloring where every color class induces a bounded degree subgraph.
Distinguishing coloring
An improper vertex coloring that destroys all the symmetries of the graph
Equitable coloring
The sizes of color classes differ by at most one
Exact coloring
Every pair of colors appears on exactly one edge
Fractional coloring
Vertices may have multiple colors, and on each edge the sum of the color parts of each vertex is not greater than one
Hamiltonian coloring
Uses the length of the longest path between two vertices, also known as the detour distance
Harmonious coloring
Every pair of colors appears on at most one edge
Incidence coloring
Each adjacent incidence of vertex and edge is colored with distinct colors
Interval edge coloring
A color of edges meeting in a common vertex must be contiguous
List coloring
Each vertex chooses from a list of colors
List edge-coloring
Each edge chooses from a list of colors
L(h, k)-coloring
Difference of colors at adjacent vertices is at least h and difference of colors of vertices at a distance two is at least k. A particular case is L(2,1)-coloring.


Oriented coloring
Takes into account orientation of edges of the graph
Path coloring
Models a routing problem in graphs
Radio coloring
Sum of the distance between the vertices and the difference of their colors is greater than k+1, where k is a positive integer.
Rank coloring
If two vertices have the same color i, then every path between them contain a vertex with color greater than i
Subcoloring
An improper vertex coloring where every color class induces a union of cliques
Sum coloring
The criterion of minimalization is the sum of colors
Star coloring
Every 2-chromatic subgraph is a disjoint collection of stars
Strong coloring
Every color appears in every partition of equal size exactly once
Strong edge coloring
Edges are colored such that each color class induces a matching (equivalent to coloring the square of the line graph)
T-coloring
Absolute value of the difference between two colors of adjacent vertices must not belong to fixed set T
Total coloring
Vertices and edges are colored
Centered coloring
Every connected induced subgraph has a color that is used exactly once
Triangle-free edge coloring
The edges are colored so that each color class forms a triangle-free subgraph
Weak coloring
An improper vertex coloring where every non-isolated node has at least one neighbor with a different color
 


Coloring can also be considered for signed graphs and gain graphs.

See also[edit]
Critical graph
Graph homomorphism
HajÃ³s construction
Mathematics of Sudoku
Multipartite graph
Uniquely colorable graph
Graph coloring game
Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ M. Kubale, History of graph coloring, in Kubale (2004)

^ van Lint & Wilson (2001, Chap. 33)

^ Jensen & Toft (1995), p. 2

^ Brooks (1941)

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Descartes, Blanche (April 1947), "A three colour problem", Eureka, 21

^ Scott, Alex; Seymour, Paul (2020), "A survey of Ï-boundedness", Journal of Graph Theory, 95 (3): 2â3, doi:10.1002/jgt.22601.

^ Burling, James Perkins (1965), On coloring problems of families of prototypes (PhD thesis), Boulder: University of Colorado.

^ Jump up to: a b Pawlik, A.; Kozik, J.; Krawczyk, T.; LasoÅ, M.; Micek, P.; Trotter, W.; Walczak, B. (2014), "Triangle-free intersection graphs of line segments with large chromatic number", Journal of Combinatorial Theory, Series B, 105 (5): 6â10, doi:10.1016/j.jctb.2013.11.001

^ ErdÅs, Paul (1959), "Graph theory and probability", Canadian Journal of Mathematics, 11: 34â38, doi:10.4153/CJM-1959-003-9.

^ Jump up to: a b BjÃ¶rklund, Husfeldt & Koivisto (2009)

^ Lawler (1976)

^ Beigel & Eppstein (2005)

^ Fomin, Gaspers & Saurabh (2007)

^ Zamir, Or (2021). "Breaking the 2â¿ Barrier for 5-Coloring and 6-Coloring". 48th International Colloquium on Automata, Languages, and Programming (ICALP 2021). 198: 113:1â113:20. doi:10.4230/LIPIcs.ICALP.2021.113.

^ Wilf (1986)

^ Sekine, Imai & Tani (1995)

^ Welsh & Powell (1967)

^ BrÃ©laz (1979)

^ Jump up to: a b c d Lewis, R. A Guide to Graph Colouring: Algorithms and Applications. Springer International Publishers, 2021.

^ Jump up to: a b Schneider (2010)

^ Cole & Vishkin (1986), see also Cormen, Leiserson & Rivest (1990, Section 30.5)

^ Goldberg, Plotkin & Shannon (1988)

^ Schneider (2008)

^ Barenboim & Elkin (2009); Kuhn (2009)

^ E.g. see Leith & Clifford (2006) and Duffy, O'Connell & Sapozhnikov (2008).

^ Garey, Johnson & Stockmeyer (1974);  Garey & Johnson (1979).

^ Dailey (1980)

^ HalldÃ³rsson (1993)

^ Zuckerman (2007)

^ Guruswami & Khanna (2000)

^ Khot (2001)

^ Jaeger, Vertigan & Welsh (1990)

^ Goldberg & Jerrum (2008)

^ Holyer (1981)

^ Crescenzi & Kann (1998)

^ Marx (2004)

^ Chaitin (1982)


References[edit]
.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents>ul{margin-left:0}.mw-parser-output .refbegin-hanging-indents>ul>li{margin-left:0;padding-left:3.2em;text-indent:-3.2em}.mw-parser-output .refbegin-hanging-indents ul,.mw-parser-output .refbegin-hanging-indents ul li{list-style:none}@media(max-width:720px){.mw-parser-output .refbegin-hanging-indents>ul>li{padding-left:1.6em;text-indent:-1.6em}}.mw-parser-output .refbegin-columns{margin-top:0.3em}.mw-parser-output .refbegin-columns ul{margin-top:0}.mw-parser-output .refbegin-columns li{page-break-inside:avoid;break-inside:avoid-column}
Barenboim, L.; Elkin, M. (2009), "Distributed (ÎÂ +Â 1)-coloring in linear (in Î) time", Proceedings of the 41st Symposium on Theory of Computing, pp.Â 111â120, arXiv:0812.1379, doi:10.1145/1536414.1536432, ISBNÂ 978-1-60558-506-2, S2CIDÂ 13446345
Beigel, R.; Eppstein, D. (2005), "3-coloring in time O(1.3289n)", Journal of Algorithms, 54 (2)): 168â204, arXiv:cs/0006046, doi:10.1016/j.jalgor.2004.06.008, S2CIDÂ 1209067
BjÃ¶rklund, A.; Husfeldt, T.; Koivisto, M. (2009), "Set partitioning via inclusionâexclusion", SIAM Journal on Computing, 39 (2): 546â563, doi:10.1137/070683933
BrÃ©laz, D. (1979), "New methods to color the vertices of a graph", Communications of the ACM, 22 (4): 251â256, doi:10.1145/359094.359101, S2CIDÂ 14838769
Brooks, R. L. (1941), "On colouring the nodes of a network", Proceedings of the Cambridge Philosophical Society, 37 (2): 194â197, Bibcode:1941PCPS...37..194B, doi:10.1017/S030500410002168X
de Bruijn, N. G.; ErdÅs, P. (1951), "A colour problem for infinite graphs and a problem in the theory of relations" (PDF), Nederl. Akad. Wetensch. Proc. Ser. A, 54: 371â373, doi:10.1016/S1385-7258(51)50053-7, archived from the original (PDF) on 2016-03-10, retrieved 2009-05-16 (= Indag. Math. 13)
Byskov, J.M. (2004), "Enumerating maximal independent sets with applications to graph colouring", Operations Research Letters, 32 (6): 547â556, doi:10.1016/j.orl.2004.03.002
Chaitin, G. J. (1982), "Register allocation & spilling via graph colouring", Proc. 1982 SIGPLAN Symposium on Compiler Construction, pp.Â 98â105, doi:10.1145/800230.806984, ISBNÂ 0-89791-074-5, S2CIDÂ 16872867
Cole, R.; Vishkin, U. (1986), "Deterministic coin tossing with applications to optimal parallel list ranking", Information and Control, 70 (1): 32â53, doi:10.1016/S0019-9958(86)80023-7
Cormen, T. H.; Leiserson, C. E.; Rivest, R. L. (1990), Introduction to Algorithms (1stÂ ed.), The MIT Press
Crescenzi, P.; Kann, V. (December 1998), "How to find the best approximation results â a follow-up to Garey and Johnson", ACM SIGACT News, 29 (4): 90, doi:10.1145/306198.306210, S2CIDÂ 15748200
Dailey, D. P. (1980), "Uniqueness of colorability and colorability of planar 4-regular graphs are NP-complete", Discrete Mathematics, 30 (3): 289â293, doi:10.1016/0012-365X(80)90236-8
Duffy, K.; O'Connell, N.; Sapozhnikov, A. (2008), "Complexity analysis of a decentralised graph colouring algorithm" (PDF), Information Processing Letters, 107 (2): 60â63, doi:10.1016/j.ipl.2008.01.002
Fawcett, B. W. (1978), "On infinite full colourings of graphs", Can. J. Math., 30 (3): 455â457, doi:10.4153/cjm-1978-039-8
Fomin, F.V.; Gaspers, S.; Saurabh, S. (2007), "Improved Exact Algorithms for Counting 3- and 4-Colorings", Proc. 13th Annual International Conference, COCOON 2007, Lecture Notes in Computer Science, vol.Â 4598, Springer, pp.Â 65â74, doi:10.1007/978-3-540-73545-8_9, ISBNÂ 978-3-540-73544-1
Garey, M. R.; Johnson, D. S. (1979), Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. Freeman, ISBNÂ 0-7167-1045-5
Garey, M. R.; Johnson, D. S.; Stockmeyer, L. (1974), "Some simplified NP-complete problems", Proceedings of the Sixth Annual ACM Symposium on Theory of Computing, pp.Â 47â63, doi:10.1145/800119.803884, S2CIDÂ 207693360
Goldberg, L. A.; Jerrum, M. (July 2008), "Inapproximability of the Tutte polynomial", Information and Computation, 206 (7): 908â929, arXiv:cs/0605140, doi:10.1016/j.ic.2008.04.003, S2CIDÂ 53304001
Goldberg, A. V.; Plotkin, S. A.; Shannon, G. E. (1988), "Parallel symmetry-breaking in sparse graphs", SIAM Journal on Discrete Mathematics, 1 (4): 434â446, doi:10.1137/0401044
Guruswami, V.; Khanna, S. (2000), "On the hardness of 4-coloring a 3-colorable graph", Proceedings of the 15th Annual IEEE Conference on Computational Complexity, pp.Â 188â197, doi:10.1109/CCC.2000.856749, ISBNÂ 0-7695-0674-7, S2CIDÂ 47551585
HalldÃ³rsson, M. M. (1993), "A still better performance guarantee for approximate graph coloring", Information Processing Letters, 45: 19â23, doi:10.1016/0020-0190(93)90246-6
Holyer, I. (1981), "The NP-completeness of edge-coloring", SIAM Journal on Computing, 10 (4): 718â720, doi:10.1137/0210055
Jaeger, F.; Vertigan, D. L.; Welsh, D. J. A. (1990), "On the computational complexity of the Jones and Tutte polynomials", Mathematical Proceedings of the Cambridge Philosophical Society, 108 (1): 35â53, Bibcode:1990MPCPS.108...35J, doi:10.1017/S0305004100068936
Jensen, T. R.; Toft, B. (1995), Graph Coloring Problems, Wiley-Interscience, New York, ISBNÂ 0-471-02865-7
Khot, S. (2001), "Improved inapproximability results for MaxClique, chromatic number and approximate graph coloring", Proc. 42nd Annual Symposium on Foundations of Computer Science, pp.Â 600â609, doi:10.1109/SFCS.2001.959936, ISBNÂ 0-7695-1116-3, S2CIDÂ 11987483
Kubale, M. (2004), Graph Colorings, American Mathematical Society, ISBNÂ 0-8218-3458-4
Kuhn, F. (2009), "Weak graph colorings: distributed algorithms and applications", Proceedings of the 21st Symposium on Parallelism in Algorithms and Architectures, pp.Â 138â144, doi:10.1145/1583991.1584032, ISBNÂ 978-1-60558-606-9, S2CIDÂ 8857534
Lawler, E.L. (1976), "A note on the complexity of the chromatic number problem", Information Processing Letters, 5 (3): 66â67, doi:10.1016/0020-0190(76)90065-X
Leith, D.J.; Clifford, P. (2006), "A Self-Managed Distributed Channel Selection Algorithm for WLAN", Proc. RAWNET 2006, Boston, MA (PDF), retrieved 2016-03-03
Lewis, R.M.R. (2016), A Guide to Graph Colouring: Algorithms and Applications, Springer International Publishing, ISBNÂ 978-3-319-25728-0
Linial, N. (1992), "Locality in distributed graph algorithms", SIAM Journal on Computing, 21 (1): 193â201, CiteSeerXÂ 10.1.1.471.6378, doi:10.1137/0221015
van Lint, J. H.; Wilson, R. M. (2001), A Course in Combinatorics (2ndÂ ed.), Cambridge University Press, ISBNÂ 0-521-80340-3
Marx, DÃ¡niel (2004), "Graph colouring problems and their applications in scheduling", Periodica Polytechnica, Electrical Engineering, vol.Â 48, pp.Â 11â16, CiteSeerXÂ 10.1.1.95.4268
Mycielski, J. (1955), "Sur le coloriage des graphes" (PDF), Colloq. Math., 3 (2): 161â162, doi:10.4064/cm-3-2-161-162.
NeÅ¡etÅil, Jaroslav; Ossona de Mendez, Patrice (2012), "Theorem 3.13", Sparsity: Graphs, Structures, and Algorithms, Algorithms and Combinatorics, vol.Â 28, Heidelberg: Springer, p.Â 42, doi:10.1007/978-3-642-27875-4, hdl:10338.dmlcz/143192, ISBNÂ 978-3-642-27874-7, MRÂ 2920058.
Panconesi, Alessandro; Rizzi, Romeo (2001), "Some simple distributed algorithms for sparse networks" (PDF), Distributed Computing, Berlin, New York: Springer-Verlag, 14 (2): 97â100, doi:10.1007/PL00008932, ISSNÂ 0178-2770, S2CIDÂ 17661948
Panconesi, A.; Srinivasan, A. (1996), "On the complexity of distributed network decomposition", Journal of Algorithms, vol.Â 20
Sekine, K.; Imai, H.; Tani, S. (1995), "Computing the Tutte polynomial of a graph of moderate size", Proc. 6th International Symposium on Algorithms and Computation (ISAAC 1995), Lecture Notes in Computer Science, vol.Â 1004, Springer, pp.Â 224â233, doi:10.1007/BFb0015427, ISBNÂ 3-540-60573-8
Schneider, J. (2010), "A new technique for distributed symmetry breaking" (PDF), Proceedings of the Symposium on Principles of Distributed Computing
Schneider, J. (2008), "A log-star distributed maximal independent set algorithm for growth-bounded graphs" (PDF), Proceedings of the Symposium on Principles of Distributed Computing
Welsh, D. J. A.; Powell, M. B. (1967), "An upper bound for the chromatic number of a graph and its application to timetabling problems", The Computer Journal, 10 (1): 85â86, doi:10.1093/comjnl/10.1.85
West, D. B. (1996), Introduction to Graph Theory, Prentice-Hall, ISBNÂ 0-13-227828-6
Wilf, H. S. (1986), Algorithms and Complexity, PrenticeâHall
Zuckerman, D. (2007), "Linear degree extractors and the inapproximability of Max Clique and Chromatic Number", Theory of Computing, 3: 103â128, doi:10.4086/toc.2007.v003a006
Zykov, A. A. (1949), "Ð Ð½ÐµÐºÐ¾ÑÐ¾ÑÑÑ ÑÐ²Ð¾Ð¹ÑÑÐ²Ð°Ñ Ð»Ð¸Ð½ÐµÐ¹Ð½ÑÑ ÐºÐ¾Ð¼Ð¿Ð»ÐµÐºÑÐ¾Ð²" [On some properties of linear complexes], Mat. Sbornik, New Series (in Russian), 24 (66): 163â188, MRÂ 0035428. Translated into English in Amer. Math. Soc. Translation, 1952, MR0051516.

External links[edit]



Wikimedia Commons has media related to Graph coloring.

High-Performance Graph Colouring Algorithms Suite of 8 different algorithms (implemented in C++) used in the book A Guide to Graph Colouring: Algorithms and Applications (Springer International Publishers, 2015).
Graph Coloring Page by Joseph Culberson (graph coloring programs)
CoLoRaTiOn by Jim Andrews and Mike Fellows is a graph coloring puzzle
Links to Graph Coloring source codes
Code for efficiently computing Tutte, Chromatic and Flow Polynomials by Gary Haggard, David J. Pearce and Gordon Royle
A graph coloring Web App by Jose Antonio Martin H.
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}Authority control: National libraries  
United States





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Graph_coloring&oldid=1069561423"
		Categories: Graph coloringGraph theoryNP-complete problemsNP-hard problemsComputational problems in graph theoryExtensions and generalizations of graphsHidden categories: Articles with short descriptionShort description matches WikidataCS1 Russian-language sources (ru)Commons category link from WikidataArticles with LCCN identifiers
	
