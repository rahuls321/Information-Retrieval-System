In boolean logic, a disjunctive normal form (DNF) is a canonical normal form of a logical formula consisting of a disjunction of conjunctions; it can also be described as an OR of ANDs, a sum of products, or (in philosophical logic) a cluster concept.  As a normal form, it is useful in automated theorem proving. Definition A logical formula is considered to be in DNF if it is a disjunction of one or more conjunctions of one or more literals.: 153   A DNF formula is in full disjunctive normal form if each of its variables appears exactly once in every conjunction. As in conjunctive normal form (CNF), the only propositional operators in DNF are and (                    ∧              {\displaystyle \wedge }  ), or (                    ∨              {\displaystyle \vee }  ), and not (                    ¬              {\displaystyle \neg }  ). The not operator can only be used as part of a literal, which means that it can only precede a propositional variable. The following is a context-free grammar for DNF:DNF → (Conjunction)                     ∨              {\displaystyle \vee }   DNFDNF → (Conjunction)Conjunction → Literal                     ∧              {\displaystyle \wedge }   ConjunctionConjunction → LiteralLiteral →                     ¬              {\displaystyle \neg }  VariableLiteral → VariableWhere Variable is any variable.For example, all of the following formulas are in DNF:                    (        A        ∧        ¬        B        ∧        ¬        C        )        ∨        (        ¬        D        ∧        E        ∧        F        )              {\displaystyle (A\land \neg B\land \neg C)\lor (\neg D\land E\land F)}                      (        A        ∧        B        )        ∨        (        C        )              {\displaystyle (A\land B)\lor (C)}                      (        A        ∧        B        )              {\displaystyle (A\land B)}                      (        A        )              {\displaystyle (A)}  However, the following formulas are not in DNF:                    ¬        (        A        ∨        B        )              {\displaystyle \neg (A\lor B)}  , since an OR is nested within a NOT                    ¬        (        A        ∧        B        )        ∨        C              {\displaystyle \neg (A\land B)\lor C}  , since an AND is nested within a NOT                    A        ∨        (        B        ∧        (        C        ∨        D        )        )              {\displaystyle A\lor (B\land (C\lor D))}  , since an OR is nested within an ANDThe formula                     A        ∨        B              {\displaystyle A\lor B}   is in DNF, but not in full DNF; an equivalent full-DNF version is                     (        A        ∧        B        )        ∨        (        A        ∧        ¬        B        )        ∨        (        ¬        A        ∧        B        )              {\displaystyle (A\land B)\lor (A\land \lnot B)\lor (\lnot A\land B)}  . Conversion to DNF Converting a formula to DNF involves using logical equivalences, such as double negation elimination, De Morgan's laws, and the distributive law.All logical formulas can be converted into an equivalent disjunctive normal form.: 152–153  However, in some cases conversion to DNF can lead to an exponential explosion of the formula. For example, converting the formula                     (                  X                      1                          ∨                  Y                      1                          )        ∧        (                  X                      2                          ∨                  Y                      2                          )        ∧        ⋯        ∧        (                  X                      n                          ∨                  Y                      n                          )              {\displaystyle (X_{1}\lor Y_{1})\land (X_{2}\lor Y_{2})\land \dots \land (X_{n}\lor Y_{n})}   to DNF yields a formula with 2n terms.Every particular Boolean function can be represented by one and only one full disjunctive normal form, one of the canonical forms. In contrast, two different plain disjunctive normal forms may denote the same Boolean function, see pictures. Computational complexity The Boolean satisfiability problem on conjunctive normal form formulas is NP-hard; by the duality principle, so is the falsifiability problem on DNF formulas. Therefore, it is co-NP-hard to decide if a DNF formula is a tautology. Variants An important variation used in the study of computational complexity is k-DNF. A formula is in k-DNF if it is in DNF and each conjunction contains at most k literals. See also Algebraic normal form — other normal forms for logical formulasBlake canonical form — a special case of DNFPropositional logicQuine–McCluskey algorithm — obtains a minimal DNF for a given Boolean functionTruth table Notes  References David Hilbert; Wilhelm Ackermann (1999). Principles of Mathematical Logic. American Mathematical Soc. ISBN 978-0-8218-2024-7.J. Eldon Whitesitt (24 May 2012). Boolean Algebra and Its Applications. Courier Corporation. ISBN 978-0-486-15816-7.Colin Howson (11 October 2005). Logic with Trees: An Introduction to Symbolic Logic. Routledge. ISBN 978-1-134-78550-6.David Gries; Fred B. Schneider (22 October 1993). A Logical Approach to Discrete Math. Springer Science & Business Media. pp. 67–. ISBN 978-0-387-94115-8. External links "Disjunctive normal form", Encyclopedia of Mathematics, EMS Press, 2001 [1994]