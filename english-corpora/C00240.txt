
Title:
HTML element
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the HTML elements in general. For information on how to format Wikipedia entries, see Help:Wiki markup and Help:HTML in wikitext.
"nobr" redirects here. For the chemical compound NOBr, see Nitrosyl bromide.
"Font color" redirects here. For OpenType fonts featuring multicolored glyphs, see OpenType Â§Â Color fonts.
Individual component of an HTML document


.mw-parser-output .sidebar{width:22em;float:right;clear:right;margin:0.5em 0 1em 1em;background:#f8f9fa;border:1px solid #aaa;padding:0.2em;text-align:center;line-height:1.4em;font-size:88%;border-collapse:collapse;display:table}body.skin-minerva .mw-parser-output .sidebar{display:table!important;float:right!important;margin:0.5em 0 1em 1em!important}.mw-parser-output .sidebar-subgroup{width:100%;margin:0;border-spacing:0}.mw-parser-output .sidebar-left{float:left;clear:left;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-none{float:none;clear:both;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-outer-title{padding:0 0.4em 0.2em;font-size:125%;line-height:1.2em;font-weight:bold}.mw-parser-output .sidebar-top-image{padding:0.4em}.mw-parser-output .sidebar-top-caption,.mw-parser-output .sidebar-pretitle-with-top-image,.mw-parser-output .sidebar-caption{padding:0.2em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-pretitle{padding:0.4em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-title,.mw-parser-output .sidebar-title-with-pretitle{padding:0.2em 0.8em;font-size:145%;line-height:1.2em}.mw-parser-output .sidebar-title-with-pretitle{padding:0.1em 0.4em}.mw-parser-output .sidebar-image{padding:0.2em 0.4em 0.4em}.mw-parser-output .sidebar-heading{padding:0.1em 0.4em}.mw-parser-output .sidebar-content{padding:0 0.5em 0.4em}.mw-parser-output .sidebar-content-with-subgroup{padding:0.1em 0.4em 0.2em}.mw-parser-output .sidebar-above,.mw-parser-output .sidebar-below{padding:0.3em 0.8em;font-weight:bold}.mw-parser-output .sidebar-collapse .sidebar-above,.mw-parser-output .sidebar-collapse .sidebar-below{border-top:1px solid #aaa;border-bottom:1px solid #aaa}.mw-parser-output .sidebar-navbar{text-align:right;font-size:115%;padding:0 0.4em 0.4em}.mw-parser-output .sidebar-list-title{padding:0 0.4em;text-align:left;font-weight:bold;line-height:1.6em;font-size:105%}.mw-parser-output .sidebar-list-title-c{padding:0 0.4em;text-align:center;margin:0 3.3em}@media(max-width:720px){body.mediawiki .mw-parser-output .sidebar{width:100%!important;clear:both;float:none!important;margin-left:0!important;margin-right:0!important}}HTML
Dynamic HTML
HTML5
audio
canvas
video
XHTML
Basic
Mobile Profile
C-HTML
HTML element
span and div
HTML attribute
HTML frame
HTML editor
Character encodings
Unicode
Language code
Document Object Model
Browser Object Model
Style sheets
CSS
Font family
Web colors
JavaScript
WebGL
WebCL
W3C
Validator
WHATWG
Quirks mode
Web storage
Rendering engine

Comparisons
Document markup languages
HTML support
XHTML
1.1

An HTML element is a type of HTML (HyperText Markup Language) document component, one of several types of HTML nodes (there are also text nodes, comment nodes and others).[vague] HTML document is composed of a tree of simple HTML nodes, such as text nodes, and HTML elements, which add semantics and formatting to parts of document (e.g., make text bold, organize it into paragraphs, lists and tables, or embed hyperlinks and images). Each element can have HTML attributes specified. Elements can also have content, including other elements and text.

Contents

1 Concepts

1.1 Elements vs. tags
1.2 SGML vs. XML
1.3 %block; vs. box


2 Overview

2.1 Syntax

2.1.1 Types of element
2.1.2 Attributes


2.2 Element standards
2.3 Element status
2.4 Content vs. presentation and behavior


3 Document structure elements
4 Document head elements
5 Document body elements

5.1 Block elements

5.1.1 Basic text




6 References

6.1 Lists
6.2 Other block elements
6.3 Inline elements

6.3.1 Anchor
6.3.2 Phrase elements

6.3.2.1 General
6.3.2.2 Computer phrase elements
6.3.2.3 Presentation


6.3.3 Span
6.3.4 Other inline elements


6.4 Images and objects
6.5 Forms
6.6 Tables


7 Frames

7.1 longdesc attribute

7.1.1 Example
7.1.2 Linking to the long description in the text

7.1.2.1 Example






8 Historic elements
9 Non-standard elements
10 Comments
11 See also
12 Notes
13 References
14 Bibliography

14.1 HTML standards
14.2 Other sources


15 External links



Concepts[edit]
Elements vs. tags[edit]
As is generally understood, the position of an element is indicated as spanning from a start tag, possibly including some child content, and is terminated by an end tag.[1] This is the case for many, but not all, elements within an HTML document. The distinction is explicitly emphasised in HTML 4.01 Specification:

.mw-parser-output .templatequote{overflow:hidden;margin:1em 0;padding:0 40px}.mw-parser-output .templatequote .templatequotecite{line-height:1.5em;text-align:left;padding-left:1.6em;margin-top:0}Elements are not tags. Some people refer to elements as tags (e.g., "the P tag"). Remember that the element is one thing, and the tag (be it start or end tag) is another. For instance, the HEAD element is always present, even though both start and end HEAD tags may be missing in the markup.[1]
Similarly the W3C Recommendadtion HTML 5.1 2nd Edition explicitly says:


Tags are used to delimit the start and end of elements in the markup. (...) The start and end tags of certain normal elements can be omitted, (...)  The contents of the element must be placed between just after the start tag (which might be implied, in certain cases) and just before the end tag (which again, might be implied, in certain cases). ââHTML 5.1 2nd Edition Â§ 8.1.2. Elements Â§ Tags
and:


Certain tags can be omitted.  NOTE: Omitting an element's start tag (...) does not mean the element is not present; it is implied, but it is still there. For example, an HTML document always has a root <html> element, even if the string <html> doesn't appear anywhere in the markup. ââHTML 5.1 2nd Edition Â§ 8.1.2.4. Optional tags

As HTML (before HTML5) is based on SGML,[2] its parsing also depends on the Document Type Definition (DTD), specifically an HTML DTD (e.g. HTML 4.01[3][note 1]). The DTD specifies which element types are possible (i.e. it defines the set of element types) and also the valid combinations in which they may appear in a document. It is part of general SGML behavior that, where only one valid structure is possible (per the DTD), its explicit statement in any given document is not generally required. As a simple example, the <p> tag indicating the start of a paragraph element should be complemented by a </p> tag indicating its end. But since the DTD states that paragraph elements cannot be nested, an HTML document fragment <p>Para 1 <p>Para 2 <p>Para 3is thus inferred to be equivalent to <p>Para 1 </p><p>Para 2 </p><p>Para 3. (If one paragraph element cannot contain another, any currently open paragraph must be closed before starting another.) Because this implication is based on the combination of the DTD and the individual document, it is not usually possible to infer elements from document tags alone but only by using an SGMLâor HTMLâaware parser with knowledge of the DTD. HTML5 creates a similar result by defining what tags can be omitted.[4]

SGML vs. XML[edit]
SGML is complex, which has limited its widespread understanding and adoption. XML was developed as a simpler alternative. Although both can use the DTD to specify the supported elements and their permitted combinations as document structure, XML parsing is simpler. The relation from tags to elements is always that of parsing the actual tags included in the document, without the implied closures that are part of SGML.[note 2]
HTML as used on the current web is likely to be either treated as XML, by being XHTML, or as HTML5; in either case the parsing of document tags into Document Object Model (DOM) elements is simplified compared to legacy HTML systems. Once the DOM of elements is obtained, behavior at higher levels of interface (example: screen rendering) is identical or nearly so.[note 3]

%block; vs. box[edit]
Part of this CSS presentation behavior is the notion of the "box model". This is applied to those elements that CSS considers to be "block" elements, set through the CSS display: block; declaration.
HTML also has a similar concept, although different, and the two are very frequently confused. %block; and %inline; are groups within the HTML DTD that group elements as being either "block-level" or "inline".[6] This is used to define their nesting behavior: block-level elements cannot be placed into an inline context.[note 4] This behavior cannot be changed; it is fixed in the DTD. Block and inline elements have the appropriate and different CSS behaviors attached to them by default,[6] including the relevance of the box model for particular element types.
Note though that this CSS behavior can, and frequently is, changed from the default. Lists with <ul><li> ... are %block; elements and are presented as block elements by default. However, it is quite common to set these with CSS to display as an inline list.[7]

Overview[edit]
Syntax[edit]


  
    
      
        
          
            
              
                
                  
                    
                      
                        
                          
                            
                              <
                              
                              p
                              Â 
                            
                          
                        
                        
                          
                            
                              
                                
                                  c
                                  l
                                  a
                                  s
                                  s
                                
                                â
                              
                            
                            
                              
                                
                                  
                                    
                                      
                                        A
                                        t
                                        t
                                        r
                                        i
                                        b
                                        u
                                        t
                                        e
                                      
                                      
                                        n
                                        a
                                        m
                                        e
                                      
                                    
                                  
                                
                              
                            
                          
                          
                            
                              
                                =
                                â³
                              
                            
                          
                          
                          
                            
                              
                                
                                  
                                    p
                                    a
                                    r
                                    a
                                    g
                                    r
                                    a
                                    p
                                    h
                                  
                                  â
                                
                              
                              
                                
                                  
                                    
                                      
                                        A
                                        t
                                        t
                                        r
                                      
                                    
                                    
                                      A
                                      t
                                      t
                                      r
                                      i
                                      b
                                      u
                                      t
                                      e
                                      Â 
                                      v
                                      a
                                      l
                                      u
                                      e
                                    
                                  
                                
                              
                            
                            â³
                          
                          
                            
                              
                                >
                              
                            
                          
                        
                      
                      â
                    
                  
                  
                    
                      S
                      t
                      a
                      r
                      t
                      Â 
                      t
                      a
                      g
                    
                  
                
                
                  
                    
                      
                        
                          T
                          h
                          i
                          s
                          Â 
                          i
                          s
                          Â 
                          a
                          Â 
                          p
                          a
                          r
                          a
                          g
                          r
                          a
                          p
                          h
                          .
                        
                      
                      â
                    
                  
                  
                    
                      C
                      o
                      n
                      t
                      e
                      n
                      t
                    
                  
                
                
                  
                    
                      
                        
                          <
                          
                          
                            /
                          
                          p
                          
                          >
                        
                      
                      â
                    
                  
                  
                    
                      
                        
                          E
                          n
                          d
                        
                        
                          t
                          a
                          g
                        
                      
                    
                  
                
              
              â
            
          
          
            
              E
              l
              e
              m
              e
              n
              t
            
          
        
      
    
    {\displaystyle \overbrace {\overbrace {{\mathtt {\color {BrickRed}<\!p\ }}\color {Magenta}\underbrace {\mathtt {class}} _{\mathsf {\color {Black}{Attribute \atop name}}}{\mathtt {=''}}\!\underbrace {\mathtt {paragraph}} _{\mathsf {\color {White}{Attr} \atop \color {Black}Attribute\ value}}''{\mathtt {\color {BrickRed}>}}} ^{\mathsf {Start\ tag}}\overbrace {\mathtt {\color {Green}This\ is\ a\ paragraph.}} ^{\mathsf {Content}}\overbrace {\mathtt {\color {BrickRed}<\!/p\!>}} ^{\mathsf {End \atop tag}}} ^{\mathsf {Element}}}
  
Parts of an HTML container element
In the HTML syntax, most elements are written with a start tag and an end tag, with the content in between. An HTML tag is composed of the name of the element, surrounded by angle brackets. An end tag also has a slash after the opening angle bracket, to distinguish it from the start tag. For example, a paragraph, which is represented by the <p> element, would be written as:

<p>In the HTML syntax, most elements are written ...</p>

However, not all of these elements require the end tag, or even the start tag, to be present.[4]  Some elements, the so-called void elements, do not have an end tag. A typical example is the <br> (hard line-break) element. A void element's behavior is predefined, and it cannot contain any content or other elements. For example, an address would be written as:

<p>P. Sherman<br>42 Wallaby Way<br>Sydney</p>

When using XHTML, it is required to open and close all elements, including void elements. This can be done by placing an end tag immediately after the start tag, but this is not legal in HTML 5 and will lead to two elements being created. An alternative way to specify that it is a void element, which is compatible with both XHTML and HTML 5, is to put a  / at the end of the tag (not to be confused with the / at the beginning of a closing tag).

<p>P. Sherman<br />42 Wallaby Way<br />Sydney</p>

HTML attributes are specified inside the start tag. For example, the <abbr> element, which represents an abbreviation, expects a title attribute within its opening tag. This would be written as:

<abbr title="abbreviation">abbr.</abbr>

Informally, HTML elements are sometimes referred to as "tags" (an example of synecdoche), though many prefer the term tag strictly in reference to the markup delimiting the start and end of an element.
Element (and attribute) names may be written in any combination of upper or lower case in HTML, but must be in lower case in XHTML.[8] The canonical form was upper-case until HTML 4, and was used in HTML specifications, but in recent years, lower-case has become more common.

Types of element[edit]
There are three kinds of HTML elements: normal elements, raw text elements, and void elements.
.mw-parser-output .vanchor>:target~.vanchor-text{background-color:#b1d2ff}Normal elements usually have both a start tag and an end tag, although for some elements the end tag, or both tags, can be omitted. It is constructed in a similar way:

a start tag (<tag>) marking the beginning of an element, which may incorporate any number of HTML attributes;
some amount of content, including text and other elements;
an end tag, in which the element name is prefixed with a slash: </tag>.
Raw text elements (also known as text or text-only elements) are constructed with:

a start tag (in the form <tag>) marking the beginning of an element, which may incorporate any number of HTML attributes;
some amount of text content, but no elements (all tags, apart from the applicable end tag, will be interpreted as content);
an end tag, in which the element name is prefixed with a slash: </tag>. In some versions of HTML, the end tag is optional for some elements. The end tag is required in XHTML.
An example is the <title> element, which must not contain other elements (including markup of text), only plain text.
Void elements (also sometimes called empty elements, single elements or stand-alone elements) only have a start tag (in the form <tag>), which contains any HTML attributes. They may not contain any children, such as text or other elements. For compatibility with XHTML, the HTML specification allows an optional space and slash (<tag /> is permissible). The space and slash are required in XHTML and other XML applications. Two common void elements are <br /> (for a hard line-break, such as in a poem or an address) and <hr /> (for a thematic break). Other such elements are often place-holders which reference external files, such as the image (<img />) element. The attributes included in the element will then point to the external file in question. Another example of a void element is <link />, for which the syntax is:

<link rel="stylesheet" href="fancy.css" type="text/css">

This <link /> element points the browser at a style sheet to use when presenting the HTML document to the user. Note that in the HTML syntax attributes don't have to be quoted if they are composed only of certain characters: letters, digits, the hyphen-minus and the period. When using the XML syntax (XHTML), on the other hand, all attributes must be quoted, and a spaced trailing slash is required before the last angle bracket:

<link rel="stylesheet" href="fancy.css" type="text/css" />

Attributes[edit]
HTML attributes define desired behavior or indicate additional element properties. Most attributes require a value. In HTML, the value can be left unquoted if it does not include spaces (attribute=value), or it can be quoted with single or double quotes (attribute='value' or attribute="value"). In XML, those quotes are required.
Boolean attributes, on the other hand, do not require a value to be specified. An example is the checked for checkboxes:

<input type=checkbox checked>

In the XML (and thus XHTML) syntax, though, a value is required, and the name should be repeated as the value:

<input type="checkbox" checked="checked" />

Element standards[edit]
HTML elements are defined in a series of freely available open standards issued since 1995, initially by the IETF and subsequently by the W3C.
During the browser wars of the 1990s, developers of user agents (e.g. web browsers) often developed their own elements, some of which have been adopted in later standards. Other user agents may not recognize non-standard elements, and they will be ignored, possibly causing the page to be displayed improperly.
In 1998, XML (a simplified form of SGML) introduced mechanisms to allow anyone to develop their own elements and incorporate them in XHTML documents, for use with XML-aware user agents.[9]
Subsequently, HTML 4.01 was rewritten in an XML-compatible form, XHTML 1.0 (eXtensible HTML). The elements in each are identical, and in most cases valid XHTML 1.0 documents will be valid or nearly valid HTML 4.01 documents. This article mainly focuses on real HTML, unless noted otherwise; however, it remains applicable to XHTML. See HTML for a discussion of the minor differences between the two.

Element status[edit]
Since the first version of HTML, several elements have become outmoded, and are deprecated in later standards, or do not appear at all, in which case they are invalid (and will be found invalid, and perhaps not displayed, by validating user agents).[10]
In HTML 4.01 / XHTML 1.0, the status of elements is complicated by the existence of three types of DTD:

Transitional, which contain deprecated elements, but which were intended to provide a transitional period during which authors could update their practices;
Frameset, which are versions of the Transitional DTDs which also allow authors to write frameset documents;
Strict, which is the up-to-date (as at 1999) form of HTML.
HTML5 instead provides a listing of obsolete features to go along with the standardized normative content. They are broken down into "obsolete but conforming" for which implementation instructions exist and "non-conforming" ones that should be replaced.[11]
The first Standard (HTML 2.0) contained four deprecated elements, one of which was invalid in HTML 3.2. All four are invalid in HTML 4.01 Transitional, which also deprecated a further ten elements. All of these, plus two others, are invalid in HTML 4.01 Strict. While the frame elements are still current in the sense of being present in the Transitional and Frameset DTDs, there are no plans to preserve them in future standards, as their function has been largely replaced, and they are highly problematic for user accessibility.
(Strictly speaking, the most recent XHTML standard, XHTML 1.1 (2001), does not include frames at all; it is approximately equivalent to XHTML 1.0 Strict, but also includes the Ruby markup module.)[12]
A common source of confusion is the loose use of deprecated to refer to both deprecated and invalid status, and to elements that are expected to be formally deprecated in the future.

Content vs. presentation and behavior[edit]
Since HTML 4, HTML has increasingly focused on the separation of content (the visible text and images) from presentation (like color, font size, and layout).[13]  This is often referred to as a separation of concerns. HTML is used to represent the structure or content of a document, its presentation remains the sole responsibility of CSS style sheets. A default style sheet is suggested as part of the CSS standard, giving a default rendering for HTML.[14]
Behavior (interactivity) is also kept separate from content, and is handled by scripts. Images are contained in separate graphics files, separate from text, though they can also be considered part of the content of a page.
Separation of concerns allows the document to be presented by different user agents according to their purposes and abilities. For example, a user agent can select an appropriate style sheet to present a document by displaying on a monitor, printing on paper, or to determine speech characteristics in an audio-only user agent. The structural and semantic functions of the markup remain identical in each case.
Historically, user agents did not always support these features. In the 1990s, as a stop-gap, presentational elements (like <b> and <i>) were added to HTML, at the cost of creating problems for interoperability and user accessibility. This is now regarded as outmoded and has been superseded by style sheet-based design; most presentational elements are now deprecated.[15]
External image files are incorporated with the <img /> or <object /> elements. (With XHTML, the SVG language can also be used to write graphics within the document, though linking to external SVG files is generally simpler.)[16] Where an image is not purely decorative, HTML allows replacement content with similar semantic value to be provided for non-visual user agents.
An HTML document can also be extended through the use of scripts to provide additional behaviors beyond the abilities of HTML hyperlinks and forms.
The elements <style> and <script>, with related HTML attributes, provide style sheets and scripts.

In the document head, <style /> and <script /> may link to shared external documents, or <style>...</style> and <script>...</script> may contain embedded instructions. (The <link> element can also be used to link style sheets.)
<script /> or <script>...</script> can occur at any point in the document (head or body).
The style attribute is valid in most document body elements (e.g. <div style="...">) for inclusion of inline style instructions.
Event-handling attributes, which provide links to scripts, are optional in most elements.
For user agents which do not operate scripts, the <noscript>...</noscript> element provides embedded alternative content where appropriate; however, it can only be used in the document head and in the body as a block-level element.
Document structure elements[edit]

<html>...</html>

The root element of an HTML document; all other elements are contained in this. The HTML element delimits the beginning and the end of an HTML document.
Both the start and end tags may be omitted (HTML5).[4]
Standardized in HTML 2.0; still current.

<head>...</head>

(See document head elements for child elements.)
Container for processing information and metadata for an HTML document.
Both the start and end tags may be omitted and inferred from child elements (HTML5).[4]
Standardized in HTML 2.0; still current.

<body></body>

(See document body elements for child elements.)
Container for the displayable content of an HTML document.
Both the start and end tags may be omitted and inferred from child elements (HTML5).[4]
Standardized in HTML 2.0; still current.

Document head elements[edit]

<baseÂ />

Specifies a base URL for all relative href and other links in the document. Must appear before any element that refers to an external resource. HTML permits only one <base> element for each document. This element has HTML attributes, but no contents.
A development version of this element (as BASE) is mentioned in HTML Tags; standardized in HTML 2.0; still current.

<basefontÂ /> (deprecated)

Specifies a base font size, typeface, and color for the document. Used together with <font> elements. Deprecated in favor of style sheets.
Standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict.

<isindexÂ /> (deprecated)

<isindex> could either appear in the document head or in the body, but only once in a document. See Forms.

<linkÂ />

Specifies links to other documents, such as previous and next links, or alternate versions.[17]  A common use is to link to external style sheets, using the form, <link rel="stylesheet" type="text/css" href="url" title="description_of_style">.[18]

A less-common, but important, usage is to supply navigation hints consistently through use of microformats. Several common relationships are defined, that may be exposed to users through the browser interface rather than directly in the web page, such as: <link rel="next" href="url">.

A document's <head> element may contain any number of <link /> elements. This element has HTML attributes, but no contents.
LINK existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<metaÂ />

Main article: Meta element
Can be used to specify additional metadata about a document, such as its author, publication date, expiration date, language, page title, page description, keywords, or other information not provided through the other header elements and HTML attributes. Because of their generic nature, <meta /> elements specify associative key-value pairs. In general, a meta element conveys hidden information about the document. Several meta tags can be used, all of which should be nested in the head element. The specific purpose of each <meta /> element is defined by its attributes. Outside of XHTML, it is often given without the slash (<meta>), despite being a void element.
In one form, <meta /> elements can specify HTTP headers which should be sent by a web server before the actual content. For example, <meta http-equiv="foo" content="bar" /> specifies that the page should be served with an HTTP header called foo that has a value bar.

In the general form, a <meta /> element specifies name and associated content HTML attributes describing aspects of the HTML page. To prevent possible ambiguity, an optional third attribute, scheme, may be supplied to specify a semantic framework that defines the meaning of the key and its value. For example, in <meta name="foo" content="bar" scheme="DC" /> the <meta /> element identifies itself as containing the foo element, with a value of bar, from the DC or Dublin Core resource description framework.
Standardized in HTML 2.0; still current.

<object>...</object>

Used for including generic objects within the document header. Though rarely used within a <head> element, it could potentially be used to extract foreign data and associate it with the current document.
Standardized in HTML 4.0; still current.

<script>...</script>

Can act as a container for script instructions or link to an external script with the optional src attribute.[19] Also usable in the document body to dynamically generate either both block or inline content.
Standardized in HTML 3.2; still current.

<style>...</style>

Specifies a CSS style for the document, usually in the form, <style type="text/css"> ... </style>.
Can either act as a container for style instructions or link to external style sheets â for example, in CSS, with @import directives of the form,[20] <style> @import url; </style>
Standardized in HTML 3.2; still current.

<title>...</title>

This tag defines a document title. Required in every HTML and XHTML document. User agents may use the title in different ways. For example:
Web browsers usually display it in a window's title bar when the window is open, and (where applicable) in the task bar when the window is minimized.
It may become the default file-name when saving the page.
We can use <title> element only one time in a web page, and when we make another page then we will use again another <title> element with new title (don't take same name for all title tag in website, It can be problem for search engines).
Web search engines' web crawlers may pay particular attention to the words used in the title.
The <title> element must not contain other elements, only text. Only one  <title> element is permitted in a document.
Existed in HTML Tags, and was standardized in HTML 2.0; still current.

Document body elements[edit]
In visual browsers, displayable elements can be rendered as either block or inline. While all elements are part of the document sequence, block elements appear within their parent elements:

as rectangular objects which do not break across lines;
with block margins, width, and height properties which can be set independently of the surrounding elements.
Conversely, inline elements are treated as part of the flow of document text; they cannot have margins, width, or height set, and do break across lines.

Block elements[edit]
Block elements, or block-level elements, have a rectangular structure. By default, these elements will span the entire width of its parent element, and will thus not allow any other element to occupy the same horizontal space as it is placed on.
The rectangular structure of a block element is often referred to as the box model, and is made up of several parts. Each element contains the following:

The content of an element is the actual text (or other media) placed between the opening and closing tags of an element.
The padding of an element is the space around the content but which still forms part of the element. Padding should not be used to create white space between two elements. Any background style assigned to the element, such as a background image or color, will be visible within the padding. Increasing the size of an element's padding increases the amount of space this element will take up.
The  border of an element is the absolute end of an element and spans the perimeter of that element. The thickness of a border increases the size of an element.
The margin of an element is the white space that surrounds an element. The content, padding, and border of any other element will not be allowed to enter this area unless forced to do so by some advanced CSS placement. Using most standard DTDs, margins on the left and right of different elements will push each other away. Margins on the top or bottom of an element, on the other hand, will not stack or will intermingle. This means that the white space between these elements will be as big as the larger margin between them.
The above section refers only to the detailed implementation of CSS rendering and has no relevance to HTML elements themselves.

Basic text[edit]

<p>...</p>

Creates a paragraph, perhaps the most common block level element.
P existed in HTML Tags, and was standardized in HTML 2.0; still current.

<h1>...</h1>
 
<h2>...</h2>

<h3>...</h3>

<h4>...</h4>

<h5>...</h5>

<h6>...</h6>


Section headings at different levels. h1 delimits the highest-level heading, h2 the next level down (sub-section), h3 for a level below that, and so on to h6. They are sometimes referred to collectively as hn tags, n meaning any of the available heading levels.

Most visual browsers show headings as large bold text by default, though this can be overridden with CSS. Heading elements are not intended merely for creating large or bold text â in fact, they should not be used for explicitly styling text. Rather, they describe the document's structure and organization. Some programs use them to generate outlines and tables of contents.
Headings existed in HTML Tags, and were standardized in HTML 2.0; still current.

References[edit]
Lists[edit]

<dl>...</dl>

"Definition list" redirects here. For Wikipedia's article on lists of definitions, see Glossary.
A description list (a.k.a. association list or definition list), which consists of nameâvalue groups,[21] and was known as a definition list prior to HTML5.[22]  Description lists are intended for groups of "terms and definitions, metadata topics and values, questions and answers, or any other groups of nameâvalue data".[23]
DL existed in HTML Tags, and was standardized in HTML 2.0; still current.

<dt>...</dt>

A name in a description list (previously definition term in a definition list).
DT existed in HTML Tags, and was standardized in HTML 2.0; still current.

<dd>...</dd>

A value in a description list (previously definition data in a definition list).
DD existed in HTML Tags, and was standardized in HTML 2.0; still current.

<ol>...</ol>

An ordered (enumerated) list. The type attribute can be used to specify the kind of marker to use in the list, but style sheets give more control. The default is Arabic numbering. In an HTML attribute: <ol type="foo">; or in a CSS declaration: ol { list-style-type: foo; } â replacing foo with one of the following:
A, B, CÂ ... â HTML value: A; CSS value: upper-alpha
a, b, cÂ ... â HTML value: a; CSS value: lower-alpha
I, II, IIIÂ ... â HTML value: I; CSS value: upper-roman
i, ii, iiiÂ ... â HTML value: i; CSS value: lower-roman
1, 2, 3Â ... â HTML value: 1; decimal
CSS provides several other options not available as pure-HTML markup, including none, and options for CJK, Hebrew, Georgian, and Armenian script. The attribute is deprecated in HTML 3.2 and 4.01, but not in HTML 5.
OL existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<ul>...</ul>

An unordered (bulleted) list. The type of list item marker can be specified in an HTML attribute: <ul type="foo">; or in a CSS declaration: ul { list-style-type: foo; } â replacing foo with one of the following (the same values are used in HTML and CSS): disc (the default), square, or circle. Only the CSS method is supported in HTML5; the attribute is deprecated in HTML 3.2 and 4.01. CSS also provides none, and the ability to replace these bullets with custom images.
UL existed in HTML Tags, and was standardized in HTML 2.0; still current.

<li>...</li>

A list item in ordered (ol) or unordered (ul) lists.
LI existed in HTML Tags, and was standardized in HTML 2.0; still current.

<dir>...</dir> (deprecated)

A directory listing. The original purpose of this element was never widely supported; deprecated in favor of <ul>.
DIR existed in HTML Tags, and was standardized in HTML 2.0; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict.

Other block elements[edit]

<address>...</address>

Contact information for the document author.
ADDRESS existed in HTML Tags, and was standardized in HTML 2.0; still current.

<article>...</article>

Main article: Article element
Used for articles and other similar content.
Standardized in HTML5.

<aside>...</aside>

Used for content in a document which is separate from the main page content, for example, sidebars or advertising.
Standardized in HTML5.

<blockquote>...</blockquote>

Main article: Blockquote element
A block level quotation, for when the quotation includes block level elements, e.g. paragraphs. The cite attribute (not to be confused with the <cite> element) may give the source, and must be a fully qualified Uniform Resource Identifier.

The default presentation of block quotations in visual browsers is usually to indent them from both margins. This has led to the element being unnecessarily used just to indent paragraphs, regardless of semantics. For quotations not containing block level elements see the quote (<q>) element.
BLOCKQUOTE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. See blockquote element for more information.

<center>...</center> (deprecated)

Creates a block-level center-aligned division. Deprecated in favor of <div> or another element with centering defined using style sheets.
Standardized in HTML 3.2; deprecated in HTML 4.0; not supported in HTML5.

<del>...</del>

Marks a deleted section of content. This element can also be used as inline.
Standardized in HTML 4.0; still current.

<div>...</div>

Main article: Span and div
A block-level logical division. A generic element with no semantic meaning used to distinguish a document section, usually for purposes such as presentation or behavior controlled by style sheets or DOM calls.
Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current.

<figure>...</figure>

Used to group images and captions, along with <figcaption>.
Standardized in HTML5.

<figcaption>...</figcaption>

A caption for an image. Always placed inside the <figure> element.
Standardized in HTML5.

<footer>...</footer>

Used for document footers. These might contain author or copyright information, or links to other pages.
Standardized in HTML5.

<header>...</header>

Used for document headers. These typically contain content introducing the page.
Standardized in HTML5.

<hrÂ />

A thematic break (originally: horizontal rule). Presentational rules can be drawn with style sheets.
Standardized in HTML 2.0; still current.

<ins>...</ins>

Marks a section of inserted content. This element can also be used as inline.
Standardized in HTML 4.0; still current.

<main>...</main>

Contains the main content of a document.
Standardized in HTML 5.1.

<menu>...</menu> (deprecated)

HTML 2.0: A menu listing. Should be more compact than a <ul> list.
MENU existed in HTML Tags, and was standardized in HTML 2.0; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict; then redefined in HTML5, but removed in HTML 5.2.

<nav>...</nav>

Used in navigational sections of articles (areas of webpages which contain links to other webpages).
Standardized in HTML5.

<noscript>...</noscript>

Replacement content for scripts. Unlike script this can only be used as a block-level element.
Standardized in HTML 4.0; still current.

<pre>...</pre>

Pre-formatted text. Text within this element is typically displayed in a non-proportional font exactly as it is laid out in the file (see ASCII art). Whereas browsers ignore white-space for other HTML elements, in <pre>...</pre>, white-space should be rendered as authored. (With the CSS properties: { white-space: pre; font-family: monospace; }, other elements can be presented in the same way.)  This element can contain any inline element except: <image>, <object>, <big>, <small>, <sup>, and <sub>...</sub>.
PRE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<section>...</section>

Used for generic sections of a document. This is different from <div> in that it is only used to contain sections of a page, which the W3C defines as a group of content with a similar theme.
Standardized in HTML5.

<script>...</script>

Places a script in the document. Also usable in the head and in inline contexts.  It may be used as <script /> with a src attribute to supply a URL from which to load the script, or used as <script>...</script> around embedded script content.

Note: <script> is not itself either a block or inline element; by itself it should not display at all, but it can contain instructions to dynamically generate either both block or inline content.
Standardized in HTML 3.2; still current.

Inline elements[edit]
Inline elements cannot be placed directly inside the <body> element; they must be wholly nested within block-level elements.[24]

Anchor[edit]

<a>...</a>

An anchor element is called an anchor because web designers can use it to "anchor" a URL to some text on a web page. When users view the web page in a browser, they can click the text to activate the link and visit the page whose URL is in the link.[25]
In HTML, an anchor can be either the origin (the anchor text) or the target (destination) end of a hyperlink.
With the attribute href,[26] the anchor becomes a hyperlink to either another part of the document or another resource (e.g. a webpage) using an external URL. Alternatively (and sometimes concurrently), with the name or id HTML attributes set, the element becomes a link target. A Uniform Resource Locator (URL) can link to this target via a fragment identifier. In HTML5, any element can now be made into a target by using the id attribute,[27] so using <a name="foo">...</a> is not necessary, although this way of adding anchors continues to work.
To illustrate: the header of a table of contents section on example.com's homepage could be turned into a target by writing: <h2><a name="contents">Table of contents</a></h2>.
Continuing with this example, now that the section has been marked up as a target, it can be referred to from external sites with a link like: <a href="http://example.com#contents">see contents</a>;
or with a link on the same page like: <a href="#contents">contents, above</a>.
The attribute title may be set to give brief information about the link: <a href="URL" title="additional information">link text</a>.
In most graphical browsers, when the cursor hovers over a link, the cursor changes into a hand with an extended index finger and the title value is displayed in a tooltip or in some other manner. Some browsers render alt text the same way, although this is not what the specification calls for.
A existed in HTML Tags, and was standardized in HTML 2.0;

Phrase elements[edit]
Phrase elements are used for marking up phrases and adding structure or semantic meaning to text fragments. For example, the <em> and <strong> tags can be used for adding emphasis to text.

General[edit]

<abbr>...</abbr>

Marks an abbreviation, and can make the full form available: <abbr title="abbreviation">abbr.</abbr>
Standardized in HTML 4.0; still current.

<acronym>...</acronym> (deprecated)

Similar to the <abbr> element, but marks an acronym: <acronym title="Hyper-Text Mark-up Language">HTML</acronym>
Standardized in HTML 4.0; still current, not supported in HTML5. Recommended replacement is the abbr tag.[28]

<dfn>...</dfn>

Inline definition of a single term.
DFN existed in HTML Internet Draft 1.2, and was fully standardized in HTML 3.2; still current.

<em>...</em>

Emphasis (conventionally displayed in italics)
EM existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<strong>...</strong>

importance; originally strong emphasis (conventionally displayed bold).

An aural user agent may use different voices for emphasis.
STRONG existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current, redefined in HTML5.

Computer phrase elements[edit]
These elements are useful primarily for documenting computer code development and user interaction through differentiation of source code (<code>), variables (<var>), user input (<kbd>), and terminal or other output (<samp>).


<code>...</code>

A code snippet (code example). Conventionally rendered in a mono-space font.
CODE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<kbd>...</kbd>

Keyboard â text to be entered by the user (kbd example).
KBD existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<samp>...</samp>

Sample output â from a program or script: (samp example).
SAMP existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<var>...</var>

Variable (var example).
VAR existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

Presentation[edit]
As visual presentational markup only applies directly to visual browsers, its use is discouraged. Style sheets should be used instead. Several of these elements are deprecated or invalid in HTML 4 / XHTML 1.0, and the remainder are invalid in the current draft of XHTML 2.0. The current draft of HTML5, however, re-includes <s>, <u>, and <small>, assigning new semantic meaning to each. In an HTML5 document, the use of these elements is no longer discouraged, provided that it is semantically correct.

<b>...</b>

In HTML 4, set font to boldface where possible. Equivalent CSS: { font-weight: bold; }. The <strong> element usually has the same effect in visual browsers, as well as having more semantic meaning, under HTML 4.01.

In HTML5, however, <b> has its own meaning, distinct from that of <strong>. It denotes "text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate voice or mood."[29]
B existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current, redefined in HTML5.

<i>...</i>

In HTML 4, set font to italic where possible. Equivalent CSS: { font-style: italic; }. Using <em>...</em> has the same visual effect in most browsers, as well as having a semantic meaning as emphasis, under HTML 4.01. (Purely typographic italics have many non-emphasis purposes, as HTML 5 more explicitly recognized.)

In HTML5, however, <i> has its own semantic meaning, distinct from that of <em>. It denotes "a different quality of text" or "an alternate voice or mood" e.g., a thought, a ship name, a binary species name, a foreign-language phrase, etc.[30]
I existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current, redefined in HTML5.

<u>...</u>

In HTML 4, underlined text. Equivalent CSS: { text-decoration: underline; }. Deprecated in HTML 4.01. Restored in HTML5.

In HTML5, the <u> element denotes "a span of text with an unarticulated, though explicitly rendered, non-textual annotation, such as labelling the text as being a proper name in Chinese text (a Chinese proper name mark), or labelling the text as being misspelt." The HTML5 specification reminds developers that other elements are almost always more appropriate than <u> and admonishes designers not to use underlined text where it could be confused for a hyper-link.[31]
U existed in HTML Internet Draft 1.2, was standardized in HTML 3.2 but was deprecated in HTML 4.0 Transitional and was invalid in HTML 4.0 Strict. Reintroduced in HTML5.

<small>...</small>

In HTML 4, decreased font size (smaller text). Equivalent CSS: { font-size: smaller; }

In HTML5, the <small> element denotes "side comments such as small print."[32] This has caused some confusion with the <aside>...</aside> element.
Standardized in HTML 3.2; still current.

<s>...</s>

In HTML 4, indicated strike-through text (Strikethrough) and was equivalent to <strike>.

In HTML5, the <s> element denotes information that is "no longer accurate or no longer relevant", and is not to be confused with <del>, which indicates removal/deletion.[33]
S was deprecated in HTML 4.0 Transitional (having not appeared in any previous standard), and was invalid in HTML 4.0 Strict. Reintroduced in HTML5, which instead deprecated <strike>.

<big>...</big> (deprecated)

Increased font size (bigger text). Equivalent CSS: { font-size: larger; }
Standardized in HTML 3.2; not supported in HTML5.

<strike>...</strike> (deprecated)

Strike-through text (Strikethrough),  (Equivalent CSS: { text-decoration: line-through; })
STRIKE was standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict.

<tt>...</tt> (deprecated)

Fixed-width font (.mw-parser-output .monospaced{font-family:monospace,monospace}typewriter-like), also known as teletype, thus "tt". (Equivalent CSS: { font-family: monospace; })
TT existed in HTML Internet Draft 1.2, and was Standardized in HTML 2.0; not supported[34] in HTML5. Possible replacements: <kbd> for marking user input, <var> for variables (usually rendered italic, and not with a change to monospace), <code> for source code, <samp> for output.[34]

<font>...</font> (deprecated)

<font [color=<var>color</var>] [size=<var>size</var>] [face=<var>face</var>]>...</font>

Can specify the font color with the color attribute (note the American spelling), typeface with the face attribute, and absolute or relative size with the size attribute.

Examples (all uses are deprecated, use CSS equivalents if possible):
<font color="green">text</font> creates green text.
<font color="#114499">text</font> creates text with hexadecimal color #114499.
<font size="4">text</font> creates text with size 4. Sizes are from 1 to 7. The standard size is 3, unless otherwise specified in the <body> or other tags.
<font size="+1">text</font> creates text with size 1 bigger than the standard. <font size="-1">text</font> is opposite.
<font face="Courier">text</font> makes text with Courier font.

Equivalent CSS for font attributes:
<font size="N"> corresponds to {font-size: Yunits} (the HTML specification does not define the relationship between size N and unit-size Y, nor does it define a unit).
<font color="red"> corresponds to { color: red; }
<font face="Times New Roman"> corresponds to { font-family: 'Times New Roman', Times, serif; } â CSS supports a font stack, of two or more alternative fonts.
Standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. Not part of HTML5.

Span[edit]

<span>...</span>

Main article: Span and div
An inline logical division. A generic element with no semantic meaning used to distinguish a document section, usually for purposes such as presentation or behavior controlled by style sheets or DOM calls.
Standardized in HTML 4.0; still current.

Other inline elements[edit]

<brÂ />

A forced line break.
Standardized in HTML 2.0; still current.

<bdi>...</bdi>

Isolates an inline section of text that may be formatted in a different direction from other text outside of it, such as user-generated content with unknown directionality.
Standardized in HTML5.

<bdo>...</bdo>

Marks an inline section of text in which the reading direction is the opposite from that of the parent element.
Standardized in HTML 4.0; still current.

<cite>...</cite>

A citation or a reference for a quote or statement in the document.
CITE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.
Note: The HTML 5 specifications have been confusingly forked,[35] including with regard to this element. In HTML 4 and earlier, <cite> was for "a citation or a reference to other sources" without any particular limitations or requirements.[36] The W3C HTML 5 spec uses a refinement of this idea, reflecting how the element has historically been used, but now requiring that it contain (but not be limited to) at least one of "the title of the work or the name of the author (person, people or organization) or an URL reference, or a reference in abbreviated form as per the conventions used for the addition of citation metadata."[37] But the WHATWG spec only permits the element to be used around the title of a work.[38]  The W3C specs began with the broader definition, then switched to the very narrow one after WHATWG made this change. However, W3C reverted their own change in 2012, in response to negative developer-community feedback; the element was in broadly-deployed use with the broader scope, e.g., various blog and forum platforms wrap commenters' IDs and e-mail addresses in <cite>...</cite>, and people using the element for bibliographic citations were (and still are) routinely wrapping each entire citation in this element.

Another problem with the element is that WHATWG recommends that it be italicized by default (thus almost all browsers do so), because it (in their view) is only for publication titles. By convention, however, only certain kinds of titles actually take italics, while others are expected to be put in quotation marks, and standards may actually vary by publishing context and language. Consequently, many website authors and admins use a site-wide stylesheet to undo this element's auto-italics.


<data>...</data>

Links inline content with a machine-readable translation.
Standardized in HTML5.[39]

<del>...</del>

Deleted text. Typically rendered as a strikethrough: Deleted text.
Standardized in HTML 4.0; still current.

<ins>...</ins>

Inserted text. Often used to mark up replacement text for material struck with <del> or <s>. Typically rendered underlined: Inserted text.
Standardized in HTML 4.0; still current.
Both <ins> and <del> elements may also be used as block elements: containing other block and inline elements. However, these elements must still remain wholly within their parent element to maintain a well-formed HTML document. For example, deleting text from the middle of one paragraph across several other paragraphs and ending in a final paragraph would need to use three separate <del> elements. Two <del> elements would be required as inline elements to indicate the deletion of text in the first and last paragraphs, and a third, used as a block element, to indicate the deletion in the intervening paragraphs.

<mark>...</mark>

Produces text that looks like this. Intended for highlighting relevant text in a quotation.
Standardized in HTML5.

<q>...</q>

An inline quotation (for block level quotation see <blockquote>). Quote elements may be nested.

<q> should automatically generate quotation marks in conjunction with style sheets. Practical concerns due to browser non-compliance may force authors to find workarounds.

The cite attribute gives the source, and must be a fully qualified URI.
Standardized in HTML 4.0; still current.
Note: Lengthy inline quotations may be displayed as indented blocks (as block-quote) using style sheets. For example, with a suitable CSS rule associated with q.lengthy: <q class="lengthy">Lengthy quote here.</q >

<rb>...</rb>

Represents the base component of a ruby annotation.
Standardized in HTML5.[40]

<rp>...</rp>

Provides fallback parenthesis for browsers lacking ruby annotation support.
Standardized in HTML5.[41]

<rt>...</rt>

Indicates pronunciation for a character in a ruby annotation.
Standardized in HTML5.[42]

<rtc>...</rtc>

Semantic annotations for a ruby annotation.
Standardized in HTML5.[43]

<ruby>...</ruby>

Represents a ruby annotation for showing the pronunciation of East Asian characters.
Standardized in HTML5.[44]

<script>...</script>

Places a script in the document. Also usable in the head and in block contexts.

Note: <script> is not itself either a block or inline element; by itself it should not display at all, but it can contain instructions to dynamically generate either both block or inline content.
Standardized in HTML 3.2; still current.

<sub>...</sub>

<sup>...</sup>

Mark subscripted or superscripted text. (Equivalent CSS: { vertical-align: sub; } and { vertical-align: super; }, respectively.)
Both were proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current.

<template>...</template>

Code fragments to be copied by scripts.
Standardized in HTML5.

<time>...</time>

Represents a time on the 24-hour clock or a date on the Gregorian calendar, optionally with time and time zone information. Also allows times and dates to be represented in a machine-readable format.
Standardized in HTML5.[45]

<wbrÂ />

An optional word break.
Was widely used (and supported by all major browsers) for years despite being non-standard until finally being standardized in HTML5.

Images and objects[edit]

<applet>...</applet> (deprecated)

Embeds a Java applet in the page. Deprecated in favor of <object>, as it could only be used with Java applets, and had accessibility limitations.
Standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. As of 2011, still widely used as the implementations of the replacing <object> are not consistent between different browsers.

<areaÂ />

Specifies a focusable area in a <map>.
Standardized in HTML 3.2; still current.

<audio>...</audio>

Adds playable HTML5 audio to the page. The audio URL is determined using the src attribute. Supported audio formats vary from browser to browser.
Standardized in HTML5.

<canvas>...</canvas>

Main article: Canvas element
Adds a canvas whose contents can be edited with JavaScript. Frequently used for online games.
Standardized in HTML5.

<embed>...</embed>

Inserts a non-standard object (like applet) or external content (typically non-HTML) into the document.
Deprecated in HTML 4 in favor of <object>, but then was added back into the HTML5 specification[46][dead link][47]

<imgÂ />

Used by visual user agents to insert an image in the document. The src attribute specifies the image URL. The required alt attribute provides alternative text in case the image cannot be displayed.[48] (Though alt is intended as alternative text, Microsoft Internet Explorer 7 and below render it as a tooltip if no title attribute is given.[49] Safari and Google Chrome, on the other hand, do not display the alt attribute at all.)[50]  The <img /> element was first proposed by Marc Andreessen and implemented in the NSCA Mosaic web browser.[51]
IMG existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.

<map>...</map>

Specifies a client-side image map.
Standardized in HTML 3.2; still current.

<object>...</object>

Includes an object in the page of the type specified by the type attribute. This may be in any MIME-type the user agent understands, such as an embedded HTML page, a file to be handled by a plug-in such as Flash, a Java applet, a sound file, etc.
Standardized in HTML 4.0; still current.

<paramÂ />

Originally introduced with <applet>, this element is now used with <object>, and should only occur as a child of <object>. It uses HTML attributes to set a parameter for the object, e.g. width, height, font, background color, etc., depending on the type of object. An object can have multiple <param /> elements.
Standardized in HTML 3.2; still current.

<source>...</source>

Specifies different sources for audio or video. Makes use of the src attribute in a way similar to the <video> and <audio> elements.
Standardized in HTML5.

<track>...</track>

Provides text tracks, like subtitles and captions, for audio and video.
Standardized in HTML5.

<video>...</video>

Adds a playable HTML5 video to the page. The video URL is determined using the src attribute. Supported video formats vary from browser to browser.
Standardized in HTML5.

Forms[edit]
Main article: Form (HTML)
These elements can be combined into a form or in some instances used separately as user-interface controls; in the document, they can be simple HTML or used in conjunction with Scripts. HTML markup specifies the elements that make up a form, and the method by which it will be submitted. However, some form of scripts (server-side, client-side, or both) must be used to process the user's input once it is submitted.
(These elements are either block or inline elements, but are collected here as their use is more restricted than other inline or block elements.)


<formÂ action="url">...</form>

Creates a form. The <form> element specifies and operates the overall action of a form area, using the required action attribute.
Standardized in HTML 2.0; still current.

<button>...</button>

A generic form button which can contain a range of other elements to create complex buttons.
Standardized in HTML 4.0; still current.

<datalist>...</datalist>

A list of options for use in form elements.
Standardized in HTML5.

<fieldset>...</fieldset>

A container for adding structure to forms. For example, a series of related controls can be grouped within a <fieldset>, which can then have a <legend> added in order to identify their function.
Standardized in HTML 4.0; still current.

<inputÂ />

<input> elements allow a variety of standard form controls to be implemented.
Standardized in HTML 2.0; still current.

Input Types:

Â type="checkbox"
A checkbox. Can be checked or unchecked.

Â type="radio"
A radio button. If multiple radio buttons are given the same name, the user will only be able to select one of them from this group.

Â type="button"
A general-purpose button. The element <button> is preferred if possible (i.e., if the client supports it) as it provides richer possibilities.

Â type="submit"
A submit button.

Â type="image"
An image button. The image URL may be specified with the src attribute.

Â type="reset"
A reset button for resetting the form to default values.

Â type="text"
A one-line text input field. The size attribute specifies the default width of the input in character-widths. max-length sets the maximum number of characters the user can enter (which may be greater than size).

Â type="search"
A variation of text which produces a search bar.

Â type="password"
A variation of text. The difference is that text typed in this field is masked â characters are displayed as an asterisk, a dot, or another replacement. The password is still submitted to the server as plaintext, so an underlying secure communication protocol like HTTPS is needed if confidentiality is a concern.

Â type="file"
A file select field (for uploading files to a server).

Â type="tel"
A variation of text for telephone numbers.

Â type="email"
A variation of text for email addresses.

Â type="url"
A variation of text for URLs.

Â type="date"
A date selector.

Â type="time"
A time selector.

Â type="number"
A variation of text for numbers.

Â type="range"
Produces a slider for that returns a number, but the number is not visible to the user.

Â type="color"
A color picker.

Â type="hidden"
hidden inputs are not visible in the rendered page, but allow a designer to maintain a copy of data that needs to be submitted to the server as part of the form. This may, for example, be data that this web user entered or selected on a previous form that needs to be processed in conjunction with the current form. Not displayed to the user but data can still be altered client-side by editing the HTML source.

<isindexÂ /> (deprecated)

<isindex /> could either appear in the document head or in the body, but only once in a document.

<isindex /> operated as a primitive HTML search form; but was de facto obsoleted by more advanced HTML forms introduced in the early to mid-1990s. Represents a set of hyperlinks composed of a base URI, an ampersand and percent-encoded keywords separated by plus signs.
ISINDEX existed in HTML Tags; standardized in HTML 2.0; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict.

<keygen>...</keygen> (deprecated)

A key pair generator.
Standardized in HTML5, but removed in HTML 5.2.

<labelÂ for="id">...</label>

Creates a label for a form input, such as radio. Clicking on the label fires a click on the matching input.
Standardized in HTML 4.0; still current.

<legend>...</legend>

A legend (caption) for a <fieldset>.
Standardized in HTML 4.0; still current.

<meter>...</meter>

A meter which needs a value attribute. Can also have: min, low, high, and max.
Standardized in HTML5.

<optionÂ value="x">...</option>

Creates an item in a <select> list.
Standardized in HTML 2.0; still current.

<optgroup>...</optgroup>

Identifies a group of <option> elements in a <select> list.
Standardized in HTML 4.0; still current.

<output>...</output>

The value of a form element.
Standardized in HTML5.

<progress>...</progress>

A bar for showing the progress of an action.
Standardized in HTML5.

<selectÂ name="xyz">...</select>

Creates a selection list, from which the user can select a single option. May be rendered as a dropdown list.
Standardized in HTML 2.0; still current.

<textareaÂ rows="8">...</textarea>

A multiple-line text area, the size of which is specified by cols (where a column is a one-character width of text) and rows HTML attributes. The content of this element is restricted to plain text, which appears in the text area as default text when the page is loaded.
Standardized in HTML 2.0; still current.

Tables[edit]
The format of HTML Tables was proposed in the HTML 3.0 Drafts and the later RFC 1942 HTML Tables. They were inspired by the CALS Table Model. Some elements in these proposals were included in HTML 3.2; the present form of HTML Tables was standardized in HTML 4. (Many of the elements used within tables are neither block nor inline elements.)


<table>...</table>

Identifies a table. Several HTML attributes are possible in HTML Transitional, but most of these are invalid in HTML Strict and can be replaced with style sheets. The summary attribute is informally required for accessibility purposes, though its usage is not simple.
Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current.

<tr>...</tr>

Contains a row of cells in a <table>.
Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current.

<th>...</th>

A <table> header cell; contents are conventionally displayed bold and centered. An aural user agent may use a louder voice for these items.
Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current.

<td>...</td>

A <table> data cell.
Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current.

<colgroup>...</colgroup>

Specifies a column group in a <table>.
Proposed in HTML Tables; Standardized in HTML 4.0; still current.

<col>...</col>

Specifies a column in a <table>.
Proposed in HTML Tables; Standardized in HTML 4.0; still current.

<caption>...</caption>

Specifies a caption for a <table>.
Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current.

<thead>...</thead>

Specifies the header part of a <table>. This section may be repeated by the user agent if the table is split across pages (in printing or other paged media).
Proposed in HTML Tables; Standardized in HTML 4.0; still current.

<tbody>...</tbody>

Specifies a body of data for a <table>.
Proposed in HTML Tables; Standardized in HTML 4.0; still current.

<tfoot>...</tfoot>

Specifies the footer part of a <table>. Like <thead>, this section may be repeated by the user agent if the table is split across pages (in printing or other paged media).
Proposed in HTML Tables; Standardized in HTML 4.0; still current.

Frames[edit]
Main article: Framing (World Wide Web)
Frames allow a visual HTML browser window to be split into segments, each of which can show a different document. This can lower bandwidth use, as repeating parts of a layout can be used in one frame, while variable content is displayed in another. This may come at a certain usability cost, especially in non-visual user agents,[52] due to separate and independent documents (or websites) being displayed adjacent to each other and being allowed to interact with the same parent window. Because of this cost, frames (excluding the <iframe> element) are only allowed in HTML 4.01 Frame-set. Iframes can also hold documents on different servers. In this case the interaction between windows is blocked by the browser. Sites like Facebook and Twitter use iframes to display content (plugins) on third party websites. Google AdSense uses iframes to display banners on third party websites.
In HTML 4.01, a document may contain a <head> and a <body> or a <head> and a <frameset>, but not both a <body> and a <frameset>. However, <iframe> can be used in a normal document body.


<frameset>...</frameset> (deprecated)

Contains the set of <frame /> elements for a document. The layout of frames is given by comma separated lists in the rows and cols HTML attributes.
Standardized in HTML 4.0 Frameset, obsolete in HTML5.

<frameÂ /> (deprecated)

Defines a single frame, or region, within the <frameset>. A separate document is linked to a frame using the src attribute inside the <frame /> element.
Standardized in HTML 4.0 Frameset, obsolete in HTML5.

<noframes>...</noframes> (deprecated)

Contains normal HTML content for user agents that don't support <frame /> elements.
Standardized in HTML 4.0 Transitional, obsolete in HTML5.

<iframe>...</iframe>

An inline frame places another HTML document in a frame. Unlike an <object /> element, an <iframe> can be the "target" frame for links defined by other elements, and it can be selected by the user agent as the focus for printing, viewing its source, and so on.

The content of the element is used as alternative text to be displayed if the browser does not support inline frames.
First introduced by Microsoft Internet Explorer in 1997, standardized in HTML 4.0 Transitional, allowed in HTML5.

longdesc attribute[edit]
In HTML, longdesc is an attribute used within the <img />, <frame />, or <iframe> elements. It is supposed to be a URL[note 5] to a document that provides a long description for the image, frame, or iframe in question.[53] Note that this attribute should contain a URL, not â as is commonly mistaken â the text of the description itself.
longdesc was designed to be used by screen readers to display image information for computer users with accessibility issues, such as the blind or visually impaired, and is widely implemented by both web browsers and screen readers.[54]  Some developers object that[55] it is actually seldom used for this purpose because there are relatively few authors who use the attribute and most of those authors use it incorrectly; thus, they recommend deprecating longdesc.[56] The publishing industry has responded, advocating the retention of longdesc.[57]

Example[edit]
<img src="Hello.jpg" longdesc="description.html">

Content of description.html:

<br />
<p>This is an image of a two-layered birthday cake.</p>
...

Linking to the long description in the text[edit]
Since very few graphical browsers support making the link available natively (Opera and iCab being the exceptions), it is useful to include a link to the description page near the <img /> element whenever possible, as this can also aid sighted users.

Example[edit]
<img src="Hello.jpg" longdesc="description.html" /> [<a href=
"description.html" title="long description of the image">D</a>]

Historic elements[edit]
Main article: Comparison of layout engines (Non-standard HTML)
The following elements were part of the early HTML developed by Tim Berners-Lee from 1989 to 1991; they are mentioned in HTML Tags, but deprecated in HTML 2.0 and were never part of HTML standards.


<listing>...</listing> (deprecated)

This element displayed the text inside the tags in a monospace font and without interpreting the HTML. The HTML 2.0 specification recommended rendering the element at up to 132 characters per line.
Deprecated in HTML 3.2; obsolete in HTML5.[58]

<plaintextÂ /> (deprecated)

<plaintext /> does not have an end tag as it terminates the markup and causes the rest of the document to be parsed as if it were plaintext.
<plaintext /> existed in HTML Tags; deprecated in HTML 2.0; invalid in HTML 4.0.

<xmp>...</xmp> (deprecated)

This element displayed the text inside the tags in a monospace font and without interpreting the HTML. The HTML 2.0 specification recommended rendering the element at 80 characters per line.
Deprecated in HTML 3.2; obsolete in HTML5.[59]

<nextidÂ /> (deprecated)

This element enabled NeXT web designing tool to generate automatic NAME labels for its anchors and was itself automatically generated.[60]
<nextid /> existed in HTML Tags (described as obsolete); deprecated in HTML 2.0; invalid in HTML 3.2 and later.

Non-standard elements[edit]
Main article: Comparison of layout engines (Non-standard HTML)
This section lists some widely used obsolete elements, which means they are not used in valid code. They may not be supported in all user agents.


<blink>...</blink> (deprecated)

Main article: Blink element
Causes text to blink. Introduced in imitation of the ANSI escape codes. Can be done with CSS where supported: {text-decoration: blink} (This effect may have negative consequences for people with photosensitive epilepsy;[61] its use on the public Internet should follow the appropriate guidelines.)
<blink> originated in Netscape Navigator and is mostly recognized by its descendants, including Firefox; deprecated or invalid in HTML 2.0 and later. Note that the replacement CSS tag, while standard, is not required to be supported.

<layer>...</layer> (deprecated)

Main article: Layer element
Creates an absolute positioned and framed layer. Can be done with frames and/or CSS instead. There are attributes, including ID, LEFT, TOP, PAGEX, PAGEY, SRC, Z-INDEX, ABOVE, WIDTH, HEIGHT, BELOW, CLIP, VISIBILITY and CLIP.
<layer> originated in Netscape 4; deprecated or invalid in HTML 4.01 and later.

<marquee>...</marquee> (deprecated)

Main article: Marquee element
Creates scrolling text. Can be done with scripting instead. (This effect may have negative consequences for people with photosensitive epilepsy;[61] its use on the public Internet should follow the appropriate guidelines.) There are three options, including Alternate, Scroll and slide. Scrolldelay can also be added.
<marquee> originated in Microsoft Internet Explorer; deprecated or invalid in HTML 4.01 and later.

<nobr>...</nobr> (deprecated)

Causes text to not break at end of line, preventing word wrap where text exceeds the width of the enclosing object. Adjacent text may break before and after it. Can be done with CSS: {white-space: nowrap;}
<nobr> is a proprietary element which is recognized by most browsers for compatibility reasons; deprecated or invalid in HTML 2.0 and later.

<noembed>...</noembed> (deprecated)

Specifies alternative content, if the embed cannot be rendered. Replaced by the content of the <embed> or <object> element.

Comments[edit]


<!-- A Comment -->
A comment in HTML (and related XML, SGML and SHTML) uses the same syntax as the SGML comment or XML comment, depending on the doctype.
Unlike most HTML tags, comments do not nest.
The markup <!--Xbegin<!--Y-->Xend--> will yield the comment Xbegin<!--Y and the text Xend--> after it, or sometimes just Xend-->, depending on browser.
Comments can appear anywhere in a document, as the HTML parser is supposed to ignore them no matter where they appear so long as they are not inside other HTML tag structures (i.e., they cannot be used next to attributes and values; this is invalid markup: <span id="x1"<--for "extension one"--> style="..."<).
Comments can even appear before the doctype declaration; no other tags are permitted to do this.
However, not all browsers and HTML editors are fully compliant with the HTML syntax framework and may do unpredictable things under some syntax conditions. Defective handling of comments only affects about 5% of all browsers and HTML editors in use, and even then only certain versions are affected by comment mishandling issues (Internet Explorer 6 accounts for most of this high percentage).
There are a few compatibility quirks involving comments:
Placing comments â or indeed any characters except for white-space â before the doctype will cause Internet Explorer 6 to use quirks mode for the HTML page. None of the doctype information will be processed.
For compatibility with some pre-1995 browsers, the contents of <style> and <script> elements are still sometimes surrounded by comment delimiters, and CSS- and script-capable browsers are written to specifically ignore that comment markup as not actually a comment. This means that attempts to actually comment out CSS and script markup by change the elements inside the comment to not be recognized, e.g. <-- [script]...[/script] -->.
The BlueGriffon HTML editor, in versions 1.7.x, makes comments that are not embedded in the syntax structure; <style> ... {comment tags} ...</style> will show up on-screen. Other HTML editors may have this same defect.

See also[edit]
HTML attribute
HTML element examples
Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ HTML 4.01 is one of a small number of well-known HTML DTDs. It is chosen here as the best illustrative example, although the same behavior applies to the other W3C-published DTDs for HTML.

^ A macro-like feature of DTDs may still be used within XML.

^ One minor difference is that XML, even after the DOM interface, is case-sensitive.[5]

^ However, see <object> for the inevitable exception.

^ Strictly an IRI, not a URL; although URLs are a subset of IRIs.


References[edit]

^ a b .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"Â§3 On SGML and HTML". HTML 4.01 Specification. W3C. 24 December 1999. Â§3.2.1 Elements.

^ "Â§3 On SGML and HTML". HTML 4.01 Specification. W3C. 24 December 1999. Â§3.1 Introduction to SGML.

^ "HTML 4.01, Â§21, Document Type Definition". W3C. 24 December 1999.

^ a b c d e "HTML Standard Â§ Optional tags". WHATWG. Retrieved 22 March 2019.

^ "Â§1. Document Object Model HTML". Document Object Model (DOM) Level 2 HTML Specification. W3C. 9 January 2003. Â§1.3. XHTML and the HTML DOM.

^ a b "Â§7 The global structure of an HTML document". HTML 4.01 Specification. W3C. 24 December 1999. Â§7.5.3 Block-level and inline elements.

^ Mark Newhouse (27 September 2002). "CSS Design: Taming Lists". A List Apart.

^ XHTML 1.0 Â§4.2

^ XML 1.0  (The ability to produce additional elements is part of the eXtensibility in the acronym.)

^ XML 1.0 Â§5.1

^ WHATWGLS. Â§ 15

^ XHTML 1.1 Â§A

^ "HTML & CSS". W3C. 2013.

^ "Appendix D. Default style sheet for HTML 4". Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification. W3C. 7 June 2011.

^ HTML 4.01 Â§14.1

^ Ferraiolo, J.; Fujisawa, J.; Jackson, D., eds. (2003-01-14). "Â§2.3 Options for using SVG in Web pages". Scalable Vector Graphics (SVG) 1.1 Specification. W3C. Retrieved 2009-03-25.

^ HTML 4.01 Â§12.3

^ HTML 4.01 Â§14.3.2

^ HTML 4.01 Â§18

^ CSS Â§1.1

^ "4.4 Grouping content â HTML5". HTML5: A vocabulary and associated APIs for HTML and XHTML â W3C Recommendation. World Wide Web Consortium. 28 October 2014. Â§4.4.8 The dl element. Retrieved 16 August 2015.

^ "Lists in HTML documents". HTML 4.01 Specification â W3C Recommendation. World Wide Web Consortium. 24 December 1999. Â§10.3 Definition lists: the DL, DT, and DD elements. Retrieved 2 May 2015.

^ W3C (5 April 2011). "HTML5: A Vocabulary and Associated APIs for HTML and XHTML, W3C Working Draft"..

^ HTML 4.01, W3.org, retrieved 2012-03-26

^ HTML 4 for dummies, 5th ed., 2005, by Ed Tittel, Mary C. Burmeister; p. 96.

^ "ServerWriter -- /Provider". www.w3.org.

^ "HTML 5.2". www.w3.org.

^ Acronym tag, acronym.

^ 4.6 Text-level semantics â The b element, Developers.whatwg.org, retrieved 2012-03-26

^ 4.6 Text-level semantics â The i element, Developers.whatwg.org, retrieved 2012-03-26

^ 4.6 Text-level semantics â The u element, Developers.whatwg.org, retrieved 2012-03-26

^ 4.6 Text-level semantics â The small element, Developers.whatwg.org, retrieved 2012-03-26

^ 4.6 Text-level semantics â The s element, Developers.whatwg.org, retrieved 2012-03-26

^ a b 11 Obsolete features â HTML5, W3.org, retrieved 2012-03-26

^ "HTML5 specification finalized, squabbling over specs continues". Ars Technica. 29 October 2014. Retrieved 29 October 2014.

^ "9.2.1 Phrase elements: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ABBR, and ACRONYM". HTML 4.01 Specification. W3C. 24 December 1999. Retrieved 26 July 2018.

^ HTML 5.2 W3C Recommendation, at "Â§4.5.6. The cite element".

^ HTML Living Standard, at "Â§4.5.6 The cite element".

^ "<data>". MDN Web Docs.

^ "HTML <rb> Tag". www.quackit.com.

^ "<rp>: The Ruby Fallback Parenthesis element". MDN Web Docs.

^ "<rt>: The Ruby Text element". MDN Web Docs.

^ "<rtc>: The Ruby Text Container element". MDN Web Docs.

^ "<ruby>". MDN Web Docs.

^ "<time>". MDN Web Docs.

^ Jennifer Kyrnin  <embed>

^ W3Schools about <embed>

^ The alt attribute's text cannot be styled with markup; as a result, other methods of alternative text presentation, such as Fahrner Image Replacement, have been devised to accommodate situations in which the coder wishes styled text to be displayed if images are disabled in a user's browser.

^ "What's New in Internet Explorer 8 â Accessibility and ARIA". MSDN. Microsoft. Retrieved 2009-07-22.

^ Bug 5566 â ALT attribute value sometimes not displayed when image is missing, Bugs.webkit.org, retrieved 2012-03-26

^ WWW-Talk Jan-Mar 1993: proposed new tag: IMG, 1997.webhistory.org, retrieved 2012-03-26

^ "Are frames accessible?". ...frames do present additional usability challenges that are unique to users with disabilities, particularly those who use screen readers.

^ "Objects, Images, and Applets". W3C. Retrieved 2008-12-20.

^ "InState Longdesc". Retrieved 2011-09-05.

^ "Creating Accessible Images". WebAim. Retrieved 2008-12-20.

^ Longdesc usage - WHATWG Wiki, Wiki.whatwg.org, retrieved 2012-03-26

^ "Bug 13461 - Commentary on Issue #30 (longdesc) from the Association of American Publishers". Retrieved 2011-09-05.

^ "<listing>". MDN Web Docs.

^ "<xmp>". MDN Web Docs.

^ "<nextid>: The NeXT ID element (Obsolete)". MDN Web Docs.

^ a b Chisholm, Wendy; Vanderheiden, Gregg; Jacobs, Ian (1999-05-05). "Web Content Accessibility Guidelines 1.0". World Wide Web Consortium. Retrieved 2010-07-20.


Bibliography[edit]
.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents>ul{margin-left:0}.mw-parser-output .refbegin-hanging-indents>ul>li{margin-left:0;padding-left:3.2em;text-indent:-3.2em}.mw-parser-output .refbegin-hanging-indents ul,.mw-parser-output .refbegin-hanging-indents ul li{list-style:none}@media(max-width:720px){.mw-parser-output .refbegin-hanging-indents>ul>li{padding-left:1.6em;text-indent:-1.6em}}.mw-parser-output .refbegin-columns{margin-top:0.3em}.mw-parser-output .refbegin-columns ul{margin-top:0}.mw-parser-output .refbegin-columns li{page-break-inside:avoid;break-inside:avoid-column}
HTML standards[edit]
HTML 2.0:
Berners-Lee, Tim; Connolly, Dan (November 1995). "Hypertext Markup Language - 2.0 (RFC 1866)". IETF. Retrieved 2009-03-24.
HTML 3.2:
Raggett, Dave (1997-01-14). "HTML 3.2 Reference Specification". W3C. Retrieved 2009-03-27.
HTML 4.01:
Raggett, Dave; Le Hors, Arnaud; Jacobs, Ian (1999-12-24). "HTML 4.01 Specification". W3C. Retrieved 2009-03-24.  (HTML 4.01 superseded 4.0 (1998), which was never widely implemented, and all earlier versions. Superseded in turn on 2018-03-27 by HTML 5.2)
XHTML 1.0:
W3C (2002-08-01) [2000]. "XHTML 1.0: The Extensible HyperText Markup Language (Second Edition)". Revised version. W3C. Retrieved 2009-03-24.
XHTML 1.1:
Altheim, Murray; McCarron, Shane; Ishikawa, Masayasu, eds. (2010-11-23) [2001]. "XHTML 1.1 - Module-based XHTML - Second Edition". Revised version. W3C. Retrieved 2018-07-26. (Superseded on 2018-03-27 by HTML 5.2.)
Austin, Daniel; Peruvemba, Subramanian; McCarron, Shane; Ishikawa, Masayasu; Birbeck, Mark; Altheim, Murray; Boumphrey, Frank; Dooley, Sam; Schnitzenbaumer, Sebastian; Wugofski, Ted, eds. (2010-07-29) [2006]. "XHTML Modularization 1.1 - Second Edition". Revised version. W3C. Retrieved 2018-07-26. (A more detailed version of the above. Also superseded on 2018-03-27 by HTML 5.2.)
W3C HTML 5.2:
Faulkner, Steve; Eicholz, Arron; Leithead, Travis; Danilo, Alex; Moon, Sangwhan; Doyle Navara, Erika; O'Connor, Theresa; Berjon, Robin, eds. (2017-12-14) [2016]. "HTML 5.2 W3C Recommendation". Revised version. W3C. Retrieved 2018-07-26. Supersedes all previous versions of HTML and XHTML, including HTML 5.1.
WHATWG HTML5 Living Standard:
Hickson, Ian, ed. (2018-07-25). "HTML Living Standard". One-page Version. WHATWG. Retrieved 2018-07-26. Also available as a Multipage Version, and Developer's Edition (also multi-page, with a search function and other gadgets, and minus details only of interest to browser vendors).
Other sources[edit]
HTML Tags:
Berners-Lee, Tim (1992-11-03). "HTML Tags". Retrieved 2009-03-28.  (Part of the first published description of HTML.)
HTML Internet Draft 1.2:
Berners-Lee, Tim; Connolly, Dan (June 1993). "Hypertext Markup Language (HTML)". Retrieved 2009-03-28.
HTML 3.0 Drafts:
Raggett, Dave (1995-03-24). "HyperText Markup Language Specification Version 3.0 (draft)". Retrieved 2009-04-18.  (This is the final draft of HTML 3.0, which expired without being developed further.)
HTML Tables:
Raggett, Dave (May 1996). "HTML Tables (RFC 1942)". IETF. Retrieved 2009-03-22.
XML 1.0:
Bray, Tim; Paoli, Jean; Sperberg-McQueen, C. Michael; Maler, Eve; Yergeau, FranÃ§ois, eds. (2008-11-26). "Extensible Markup Language (XML) 1.0 (Fifth Edition)". W3C. Retrieved 2009-03-20.
CSS 1:
Lie, HÃ¥kon Wium; Bos, Bert (2008-04-11) [1996]. "Cascading Style Sheets, Level 1". Revised version. W3C. Retrieved 2018-07-26.
CSS 2.1:
Bos, Bert; Ãelik, Tantek; Hickson, Ian; Lie, HÃ¥kon Wium (12 April 2016) [2011]. "Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification". Revised version. W3C. Retrieved 2018-07-26.
CSS 3 and 4:
Atkins, Tab, Jr.; Eternad, Elika J.; Rivoal, Florian (31 January 2017). "CSS Snapshot 2017". W3C. Â§2. Cascading Style Sheets (CSS) â The Official Definition. Retrieved 2018-07-26. (List of active specifications that have superseded CSS 2.1, as of the publication date.)
"CSS Current Status". W3C. 2018. Retrieved 2018-07-26. (CSS levels 3 and 4 are developed as independent modules, indexed at that page.)

External links[edit]



The Wikibook HyperText Markup Language has a page on the topic of: all elements in HTML

HTML 4.01 (Dec 24, 1999):  elements and attributes
HTML5 (Oct 28, 2014): elements and attributes




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=HTML_element&oldid=1068049883"
		Categories: HTML tagsWeb 1.0Hidden categories: Articles with short descriptionShort description is different from WikidataUse American English from March 2018All Wikipedia articles written in American EnglishAll Wikipedia articles needing clarificationWikipedia articles needing clarification from February 2019All articles with dead external linksArticles with dead external links from January 2022Articles containing Latin-language text
	
