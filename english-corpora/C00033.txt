
Title:
Elixir (programming language)
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Programming language running on the Erlang virtual machine
This article contains content that is written like an advertisement. Please help improve it by removing promotional content and inappropriate external links, and by adding encyclopedic content written from a neutral point of view.  (June 2020) (Learn how and when to remove this template message)
.mw-parser-output .infobox-subbox{padding:0;border:none;margin:-3px;width:auto;min-width:100%;font-size:100%;clear:none;float:none;background-color:transparent}.mw-parser-output .infobox-3cols-child{margin:auto}.mw-parser-output .infobox .navbar{font-size:100%}body.skin-minerva .mw-parser-output .infobox-header,body.skin-minerva .mw-parser-output .infobox-subheader,body.skin-minerva .mw-parser-output .infobox-above,body.skin-minerva .mw-parser-output .infobox-title,body.skin-minerva .mw-parser-output .infobox-image,body.skin-minerva .mw-parser-output .infobox-full-data,body.skin-minerva .mw-parser-output .infobox-below{text-align:center}ElixirParadigmmulti-paradigm: functional,  concurrent, distributed, process-orientedFirstÂ appeared2012; 10Â years agoÂ (2012)Stable release1.12[1]Â 
   / 19 May 2021; 8 months agoÂ (19 May 2021)
Typing disciplinedynamic, strong, duckPlatformErlangLicenseApache License 2.0[2]Filename extensions.ex, .exsWebsiteelixir-lang.orgInfluenced byClojure, Erlang, RubyInfluencedLFE
Elixir is a functional, concurrent, general-purpose programming language that runs on the BEAM virtual machine which is also used to implement the Erlang programming language.[3] Elixir builds on top of Erlang and shares the same abstractions for building distributed, fault-tolerant applications. Elixir also provides productive tooling and an extensible design. The latter is supported by compile-time metaprogramming with macros and polymorphism via protocols.[4]
Elixir is used by companies such as PagerDuty,[5] Discord,[6] Brex,[7] E-MetroTel,[8] Pinterest,[9] Moz,[10] Bleacher Report,[11] The Outline,[12] Inverse,[13] Divvy,[14] FarmBot[15] and for building embedded systems.[16][17] The community organizes yearly events in the United States,[18] Europe[19] and Japan[20] as well as minor local events and conferences.[21][22]

Contents

1 History
2 Versioning
3 Features
4 Examples
5 Noteworthy Elixir projects
6 See also
7 References
8 External links



History[edit]
JosÃ© Valim is the creator of the Elixir programming language, a research and development project created at Plataformatec. His goals were to enable higher extensibility and productivity in the Erlang VM while keeping compatibility with Erlang's ecosystem.[23][24]
JosÃ© Valim aimed to create a programming language for large-scale sites and apps. Being a Ruby developer, he used features of Ruby, Erlang, and Clojure to develop a high-concurrency and low-latency language. Elixir was designed to handle large data volumes. Its speed and capabilities spread Elixir in telecommunication, eCommerce, and finance industries.[25]
On July 12, 2018, Honeypot released a mini-documentary on Elixir.[26]

Versioning[edit]
Elixir mostly[27] follows semantic versioning and has only 1 major version with no plans for a second. Each of the minor versions supports a specific range of Erlang/OTP versions.[28]

Features[edit]
Compiles to bytecode for the Erlang Virtual Machine (BEAM)[29]
Everything is an expression[29]
Erlang functions can be called from Elixir, and vice versa, without run time impact, due to compilation to Erlang bytecode
Meta programming allowing direct manipulation of abstract syntax tree (AST)[29]
Polymorphism via a mechanism called protocols. As in Clojure, protocols provide a dynamic dispatch mechanism. However, this is not to be confused with multiple dispatch as Elixir protocols dispatch on a single type.
Support for documentation via Python-like docstrings in the Markdown formatting language[29]
Shared nothing concurrent programming via message passing (Actor model)[30]
Emphasis on recursion and higher-order functions instead of side-effect-based looping
Lightweight concurrency utilizing Erlang's mechanisms[29]
Railway oriented programming via the with construct[31]
Built-in tooling for managing dependencies, code compilation, running tests, formatting code, remote debugging and more
Lazy and async collections with streams
Pattern matching[29] to promote assertive code[32]
Unicode support and UTF-8 strings
Examples[edit]
The following examples can be run in an iex shell or saved in a file and run from the command line by typing elixir <filename>.
Classic Hello world example:

iex> IO.puts("Hello World!")
Hello World!

Comprehensions

iex> for n <- [1,2,3,4,5], rem(n, 2) == 1, do: n*n
[1, 9, 25]

Pattern Matching (destructuring)

iex> [1, a] = [1, 2]
iex> a
2

iex> {:ok, [hello: a]} = {:ok, [hello: "world"]}
iex> a
"world"

Pattern Matching (multiple clauses)

iex> case File.read("path/to/file") do
iex>   {:ok, contents} -> IO.puts("found file: #{contents}")
iex>   {:error, reason} -> IO.puts("missing file: #{reason}")
iex> end

Pipe Operator

iex> "1" |> String.to_integer() |> Kernel.*(2)
2

Modules

defmodule Fun do
  def fib(0), do: 0
  def fib(1), do: 1
  def fib(n), do: fib(n-2) + fib(n-1)  
end

Sequentially spawning a thousand processes

for num <- 1..1000, do: spawn fn -> IO.puts("#{num * 2}") end

Asynchronously performing a task

task = Task.async fn -> perform_complex_action() end
other_time_consuming_action()
Task.await task

Noteworthy Elixir projects[edit]
Mix is a build automation tool that provides tasks for creating, compiling, and testing Elixir projects, managing its dependencies, and more.[33]
Phoenix is a web development framework written in Elixir which implements the server-side Model View Controller (MVC) pattern.[34]
See also[edit]
.mw-parser-output .portalbox{float:right;border:solid #aaa 1px;padding:0}.mw-parser-output .portalbox.tleft{margin:0.5em 1em 0.5em 0}.mw-parser-output .portalbox.tright{margin:0.5em 0 0.5em 1em}.mw-parser-output .portalbox>ul{display:table;box-sizing:border-box;padding:0.1em;max-width:175px;background:#f9f9f9;font-size:85%;line-height:110%;font-style:italic;font-weight:bold}.mw-parser-output .portalbox>ul>li{display:table-row}.mw-parser-output .portalbox>ul>li>span:first-child{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox>ul>li>span:last-child{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}

Free and open-source software portal
Concurrent computing
Distributed computing
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ https://elixir-lang.org/blog/2021/05/19/elixir-v1-12-0-released/.

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"elixir/LICENSE at master Â· elixir-lang/elixir Â· GitHub". GitHub.

^ "Most Popular Programming Languages of 2018 - Elite Infoworld Blog". 2018-03-30. Retrieved 2018-05-08.

^ "Elixir". JosÃ© Valim. Retrieved 2013-02-17.

^ "Elixir at PagerDuty". PagerDuty. 2018-06-14. Retrieved 2019-04-21.

^ Vishnevskiy, Stanislav (Jul 6, 2017). "How Discord Scaled Elixir to 5,000,000 Concurrent Users". Retrieved 2019-04-21.

^ Valim, JosÃ© (2020-06-23). "Elixir at fintech with Brex". elixir-lang.github.com. Retrieved 2020-11-14.

^ "What's New in Release 6.0 | Documentation". www.emetrotel.com. Retrieved 2019-04-21.

^ "Introducing new open-source tools for the Elixir community". Retrieved 2016-08-01.

^ "Unlocking New Features in Moz Pro with a Database-Free Architecture". Retrieved 2016-08-01.

^ "Elixir". Bleacher Report Engineering. Retrieved 2019-05-22.

^ Lucia, Dave (Sep 24, 2018). "Two years of Elixir at The Outline". Retrieved 2019-05-22.

^ "What big projects use Elixir?". Retrieved 2016-08-01.

^ "Why Divvy uses Elixir instead of more popular coding languages". 2 April 2019. Retrieved 2019-04-30.

^ The operating system and all related software that runs on FarmBot's Raspberry Pi.: FarmBot/farmbot_os, FarmBot, 2019-10-28, retrieved 2019-10-29

^ "Elixir in production interview: Garth Hitchens". 3 June 2015. Retrieved 2016-08-01.

^ "Nerves - Craft and deploy bulletproof embedded software in Elixir". Retrieved 2016-08-01.

^ "ElixirConf". Retrieved 2018-07-11.

^ "ElixirConf". Retrieved 2018-07-11.

^ "Erlang & Elixir Fest". Retrieved 2019-02-18.

^ "Elixir LDN". Retrieved 2018-07-12.

^ "EMPEX - Empire State Elixir Conference". Retrieved 2018-07-12.

^ Elixir - A modern approach to programming for the Erlang VM. Retrieved 2013-02-17.

^ JosÃ© Valim - ElixirConf EU 2017 Keynote. Archived from the original on 2021-11-17. Retrieved 2017-07-14.

^ "Behinde the code: The One Who Created Elixir". Retrieved 2019-11-25.

^ "Elixir: A Mini-Documentary". Retrieved 2021-10-30.

^ "Imperative Assignements are breaking the application in 1.7 update Â· Issue #8076 Â· elixir-lang/elixir". GitHub. Retrieved 2020-02-10.

^ Elixir is a dynamic, functional language designed for building scalable and maintainable applications: elixir-lang/elixir, Elixir, 2019-04-21, retrieved 2019-04-21

^ Jump up to: a b c d e f "Elixir". Retrieved 2014-09-07.

^ Loder, Wolfgang (12 May 2015). Erlang and Elixir for Imperative Programmers. "Chapter 16: Code Structuring Concepts", section title "Actor Model": Leanpub. Retrieved 7 July 2015.{{cite book}}:  CS1 maint: location (link)

^ Wlaschin, Scott (May 2013). "Railway Oriented Programming". F# for Fun and Profit. Archived from the original on 30 January 2021. Retrieved 28 February 2021.

^ "Writing assertive code with Elixir". 24 September 2014. Retrieved 2018-07-05.

^ "Mix". Retrieved 2019-04-18.

^ "Overview". Retrieved 2019-04-18.


External links[edit]
Elixir language website
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteProgramming languages
Comparison
Timeline
History

Ada
ALGOL
APL
Assembly
BASIC
C
C++
C#
COBOL
Erlang
Forth
Fortran
Go
Haskell
Java
JavaScript
Kotlin
Lisp
Lua
ML
Pascal
Perl
PHP
Prolog
Python
R
Ruby
Rust
SQL
Shell
Simula
Smalltalk
Swift
more...

 Category
 Lists: Alphabetical
Categorical
Generational
Non-English-based

Authority control: National libraries  
United States





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Elixir_(programming_language)&oldid=1069268198"
		Categories: Concurrent programming languagesFunctional languagesPattern matching programming languagesProgramming languagesProgramming languages created in 2012Software using the Apache licenseHidden categories: CS1 maint: locationArticles with short descriptionShort description is different from WikidataArticles with a promotional tone from June 2020All articles with a promotional toneArticles with LCCN identifiers
	
