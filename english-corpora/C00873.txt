
Title:
User-centered design
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Framework of processes



.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}See also: Human-centered design
User-centered design (UCD) or user-driven development (UDD) is a framework of process (not restricted to interfaces or technologies) in which usability goals, user characteristics, environment, tasks and workflow of a product, service or process are given extensive attention at each stage of the design process. These tests are conducted with/without actual users during each stage of the process from requirements, pre-production models and post production, completing a circle of proof back to and ensuring that "development proceeds with the user as the center of focus."[1][2] Such testing[3] is necessary as it is often very difficult for the designers of a product to understand intuitively the first-time users of their design experiences, and what each user's learning curve may look like. User-centered design is based on the understanding of a user, their demands, priorities and experiences and when used, is known to lead to an increased product usefulness and usability as it delivers satisfaction to the user.[4]
The chief difference from other product design philosophies is that user-centered design tries to optimize the product around how users can, want, or need to use the product so that users are not forced to change their behavior and expectations to accommodate the product. The users thus stand in the center of two concentric circles. The inner circle includes the context of the product, objectives of developing it and the environment it would run in. The outer circle involves more granular details of task detail, task organization, and task flow.[2]

Contents

1 History
2 Models and approaches
3 User-Centered Design Process
4 Purpose
5 Elements

5.1 Visibility
5.2 Accessibility
5.3 Legibility
5.4 Language


6 Analysis tools

6.1 Persona
6.2 Scenario
6.3 Use case


7 See also
8 References
9 Further reading
10 Video



History[edit]
The term "User-Centered Design" was coined by Rob Kling in 1977[5] and later adopted in Donald A. Norman's research laboratory at the University of California, San Diego. The concept became widely popular as a result of the publication of the book User-Centered System Design: New Perspectives on Human-Computer Interaction in 1986.[6] The concept gained further attention and acceptance in Norman's seminal book The Design of Everyday Things (originally called The Psychology of Everyday Things). In this book, Norman describes the psychology behind what he deems 'good' and 'bad' design through examples. He exalts the importance of design in our everyday lives, and the consequences of errors caused by bad designs.
The two books include principles for building well-designed products. His recommendations are based on the needs of the user, leaving aside what he considers secondary issues like aesthetics. The main highlights of these are:

Simplifying the structure of the tasks such that the possible actions at any moment are intuitive.
Make things visible, including the conceptual model of the system, actions, results of actions and feedback.
Getting the mappings right between intended results and required actions.
Embracing and exploiting the constraints of systems
In a later book, Emotional Design,[7]:âp.5 onwardsâ Norman returns to some of his earlier ideas to elaborate what he had come to find as overly reductive.

Models and approaches[edit]
For example, the User-Centered Design process can help software designers to fulfill the goal of a product engineered for their users. User requirements are considered right from the beginning and included into the whole product cycle. These requirements are noted and refined through investigative methods including: ethnographic study, contextual inquiry, prototype testing, usability testing and other methods. Generative methods may also be used including: card sorting, affinity diagramming and participatory design sessions. In addition, user requirements can be inferred by careful analysis of usable products similar to the product being designed.
User-Centered Design takes inspiration from the following models:

Cooperative design: involving designers and users on an equal footing. This is the Scandinavian tradition of design of IT artifacts and it has been evolving since 1970.[8] This is also called Co-design.
Participatory design (PD), a North American term for the same concept, inspired by Cooperative Design, focusing on the participation of users. Since 1990, there has been a bi-annual Participatory Design Conference.[9]
Contextual design, "customer-centered design" in the actual context, including some ideas from Participatory design[10]
Here are the principles that help in ensuring a design is user-centered:[11]

Design is based upon an explicit understanding of users, tasks and environments.
Users are involved throughout design and development.[12]
Design is driven and refined by user-centered evaluation.
Process is iterative.
Design addresses the whole user experience.
Design team includes multidisciplinary skills and perspectives.
User-Centered Design Process[edit]
The goal of the User-Centered design is to make products which have very high usability. This includes how convenient the product is, in terms of its usage, manageability, effectiveness, and how well the product is mapped to the user requirements. Below are the general phases of User-Centered Design process:[13][14]

Specify context of use: Identify who the primary users of the product are, why they will use the product, what are their requirements and under what environment they will use it.
Specify Requirements: Once the context is specified, it is time to identify the granular requirements of the product. This is an important phase which can further facilitate the designers to create storyboards, and set important goals to make the product successful.
Create Design solutions and development: Based on product goals and requirements, start an iterative process of product design and development.
Evaluate Product: Product designers do usability testing to get users' feedback for the product at every stage of User-Centered Design.
In the next steps, the above procedure is repeated to further finish the product. These phases are general approaches and factors like design goals, team and their timeline, and environment in which the product is developed, determine the appropriate phases for a project and their order. You can either follow a waterfall model, agile model or any other software engineering practice.

Purpose[edit]
UCD asks questions about users and their tasks and goals, then uses the findings to make decisions about development and design.
UCD of a web site, for instance, seeks to answer the following questions:

Who are the users of the website?
What are the users' tasks and goals?
What are the users' experience levels with the website, and the similar websites?
What functions do the users need from the website?
What information might the users need, and in what form do they need it?
How do users think the website should work?
What are the extreme environments in which website can be accessed in?
Is the user multitasking?
Does the interface utilizes different input modes, such as touch, speech, gestures or orientation?
Elements[edit]
As an example of UCD viewpoints, the essential elements of UCD of a website usually are the considerations of visibility, accessibility, legibility and language.

Visibility[edit]
Visibility helps the user construct a mental model of the document. Models help the user predict the effect(s) of their actions while using the document. Important elements (such as those that aid navigation) should be emphatic. Users should be able to tell from a glance what they can and cannot do with the document.

Accessibility[edit]
Users should be able to find information quickly and easily throughout the document, regardless of its length. Users should be offered various ways to find information (such as navigational elements, search functions, table of contents,[15] clearly labeled sections, page numbers, color-coding, etc.). Navigational elements should be consistent with the genre of the document. âChunking' is a useful strategy that involves breaking information into small pieces that can be organized into some type of meaningful order or hierarchy. The ability to skim the document allows users to find their piece of information by scanning rather than reading. Bold and italic words are often used to this end.

Legibility[edit]
Text should be easy to read: Through analysis of the rhetorical situation, the designer should be able to determine a useful font-family and font style. Ornamental fonts, text in all capital letters, large or small body text are all can be hard to read and should be avoided. Text-colouring and bolding can be helpful when used in text-heavy scenarios. High figure-ground contrast between text and background increases legibility. Dark text against a light background is most legible.

Language[edit]
Depending on the rhetorical situation, certain types of languages are needed. Short sentences are helpful, as are well-written texts used in explanations and similar bulk-text situations. Unless the situation calls for it, jargon or heavily technical terms should not be used. Many writers will choose to use the active voice, verbs (instead of noun strings or nominals), and a simple sentence structure.

Analysis tools[edit]
There are a number of tools that are used in the analysis of User-Centered Design, mainly: personas, scenarios, and essential use cases.

Persona[edit]
During the UCD process, a Persona representing the user may be created. A persona is a user archetype used to help guide decisions about product features, navigation, interactions, and even visual design. In most cases, personas are synthesized from a series of ethnographic interviews with real people, then captured in 1-2 page descriptions that include behavior patterns, goals, skills, attitudes, and environment, with a few fictional personal details to bring the persona to life.[16]
For each product, or sometimes for each set of tools within a product, there is a small set of personas, one of whom is the primary focus for the design. There are also what's called a secondary persona, where the character is not the main target of the design, but their needs should be met and problems solved if possible. They exist to help account for further possible problems and difficulties that may occur even though the primary persona is satisfied with their solution. There is also an anti-persona, which is the character that the design is specifically not made for.
Personas are useful in the sense that they create a common shared understanding of the user group for which the design process is built around. Also, they help to prioritize the design considerations by providing a context of what the user needs and what functions are simply nice to add and have. They can also provide a human face and existence to a diversified and scattered user group, and help in creating some empathy and adding emotions when referring to the users. However, since personas are a generalized perception of the primary stakeholder group from collected data, the characteristics may be too broad and typical, or too much of an "average Joe". Sometimes, personas can have stereotypical properties also, which may hurt the entire design process. Overall, personas can be a useful tool to be used by designers to make informed design decisions around, opposed to referring to a set of data or a wide range of individuals.
Personas can also be modified all through the UCD of a product, based on user testing and changing environment. This is not an ideal way to use Personas but should not be a taboo either particularly when it becomes apparent that variables surrounding a product's development have changed since the design started and current persona/s may not cater well to the changed conditions. 

Scenario[edit]
A scenario created in the UCD process is a fictional story about the "daily life of" or a sequence of events with the primary stakeholder group as the main character. Typically, a persona that was created earlier is used as the main character of this story. The story should be specific of the events happening that relate to the problems of the primary stakeholder group, and normally the main research questions the design process is built upon. These may turn out to be a simple story about the daily life of an individual, but small details from the events should imply details about the users, and may include emotional or physical characteristics. There can be the best-case scenario, where everything works out best for the main character, the worst-case scenario, where the main character experiences everything going wrong around him or her, and an average-case scenario, which is the typical life of the individual, where nothing really special or really depressing occurs, and the day just moves on.
Scenarios create a social context in which the personas exist, and also create an actual physical world, instead of imagining a character with internal characteristics from gathered data and nothing else; there is more action involved in the persona's existence. A scenario is also more easily understood by people, since it is in the form of a story, and is easier to follow. Yet, like the personas, these scenarios are assumptions made by the researcher and designer, and is also created from a set of organized data. It is important to ensure that scenarios are created as close as possible to real world scenarios. Nevertheless, it can be sometimes difficult to explain and inform how low level tasks occur, for ex- the thought process of a persona before acting.

Use case[edit]
In short, a use case describes the interaction between an individual and the rest of the world. Each use case describes an event that may occur for a short period of time in real life, but may consist of intricate details and interactions between the actor and the world. It is represented as a series of simple steps for the character to achieve his or her goal, in the form of a cause and effect scheme. Use cases are normally written in the form of a chart with two columns: first column labelled actor, second column labelled world, and the actions performed by each side written in order in the respective columns. The following is an example of a use case for performing a song on a guitar in front of an audience.




Actor

World


choose music to play




pick up guitar






display sheet music


perform each note on sheet music using guitar






convey note to audience using sound




audience provides feedback to performer


assess performance and adjust as needed based on audience feedback.




complete song with required adjustments






audience applause

The interaction between actor and the world is an act that can be seen in everyday life, and we take them as granted and don't think too much about the small detail that needs to happen in order for an act like performing a piece of music to exist. It is similar to the fact that when speaking our mother tongue, we don't think too much about grammar and how to phrase words; they just come out since we are so used to saying them. The actions between an actor and the world, notably, the primary stakeholder (user) and the world in this case, should be thought about in detail, and hence use cases are created to understand how these tiny interactions occur.
An essential use case is a special kind of use case, also called an abstract use case. Essential use cases describe the essence of the problem, and deals with the nature of the problem itself. While writing essential use cases, no assumptions about unrelated details should be made. In additions, the goals of the subject should be separated from the process and implementation to reach that particular goal. Below is an example of an essential use case with the same goal as the former example.



Actor

World


choose sheet music to perform




gathers necessary resources






provides access to resources


performs piece sequentially






convey and interprets performance




provides feedback


completes performance



Use cases are useful because they help identify useful levels of design work. They allow the designers to see the actual low level processes that are involved in a certain problem, which makes the problem easier to handle, since certain minor steps and details the user makes are exposed. The designers' job should be to take into consideration these small problems in order to arrive at a final solution that works. Another way to say this is that use cases break complicated tasks into smaller bits, where these bits are useful units. Each bit completes a small task, which then builds up to the final bigger task. Like writing code on a computer, it is easier to write the basic smaller parts and make them work first, and then put them together to finish the larger more complicated code, instead tackling the entire code from the very beginning.
The first solution is less risky because if something goes wrong with the code, it is easier to look for the problem in the smaller bits, since the segment with the problem will be the one that does not work, while in the latter solution, the programmer may have to look through the entire code to search for a single error, which proves time-consuming. The same reasoning goes for writing use cases in UCD. Lastly, use cases convey useful and important tasks where the designer can now see which one are of higher importance than others. Some drawbacks of writing use cases include the fact that each action, by the actor or the world, consist of little detail, and is simply a small action. This may possibly lead to further imagination and different interpretation of action from different designers.
Also, during the process, it is really easy to oversimplify a task, since a small task derived from a larger task may still consist of even smaller tasks which were missed. Picking up a guitar may involve thinking of which guitar to pick up, which pick to use, and think about where the guitar is located first. These tasks may then be divided into smaller tasks, such as first thinking of what colour of guitar fits the place to perform the piece, and other related details. Tasks may be split further down into even tinier tasks, and it is up to the designer to determine what is a suitable place to stop splitting up the tasks. Tasks may not only be oversimplified, they may also be omitted in whole, thus the designer should be aware of all the detail and all the key steps that are involved in an event or action while writing use cases.

See also[edit]
.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}
Action research
Activity-centered design
Chief experience officer (CXO)
Component-based usability testing
Contextual inquiry
Design thinking
Empathic design
Human-centered computing
Human-centered systems
Human-centered design
Information architecture
Interaction design
Meta-design
Needs analysis
Paper prototyping
Participatory design
Process-centered design
Thanatosensitivity
Transgenerational design
Ubiquitous computing
Usability
World Usability Day

References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"Cover â Just Ask: Integrating Accessibility Throughout Design". uiaccess.com.

^ Jump up to: a b "Notes on User Centered Design Process (UCD)". www.w3.org.

^ Rubin, Jeffrey; Chisnell, Dana (March 10, 2011). Handbook of Usability Testing: How to Plan, Design, and Conduct Effective Tests. John Wiley & Sons. ISBNÂ 978-1-118-08040-5.

^ Vredenburg, Karel; Mao, Ji-Ye; Smith, Paul; Carey, Tom (2002). "A Survey of User-Centered Design Practice" (PDF).

^ Kling, Rob (1977). "The Organizational Context of User-Centered Software Designs". MIS Quarterly. 1 (4): 41â52. doi:10.2307/249021. ISSNÂ 0276-7783. JSTORÂ 249021.

^ Norman, D. A. (1986). User-Centered System Design: New Perspectives on Human-Computer Interaction.

^ "Don Norman (2003) Emotional Design, Prolog-- Three Teapots" (PDF). jnd.org.

^ Greenbaum&Kyng (eds): Design At Work â Cooperative design of Computer Systems, Lawrence Erlbaum 1991

^ Schuler&Namioka: Participatory Design, Lawrence Erlbaum 1993 and chapter 11 in Helander's Handbook of HCI, Elsevier 1997

^ Beyer&Holtzblatt, Contextual Design, Kaufmann 1998

^ "User-Centered Design Basics". www.usability.gov.

^ Mathur, Sunita; JanaudisâFerreira, Tania; Hemphill, Julia; Cafazzo, Joseph A.; Hart, Donna; Holdsworth, Sandra; Lovas, Mike; Wickerson, Lisa (September 23, 2021). "Userâcentered design features for digital health applications to support physical activity behaviors in solid organ transplant recipients: A qualitative study". Clinical Transplantation. doi:10.1111/ctr.14472. ISSNÂ 0902-0063.

^ "Notes on User Centered Design Process (UCD)". www.w3.org. Retrieved March 30, 2017.

^ "User-Centered Design Basics". www.usability.gov. Retrieved March 30, 2017.

^ Aaron., Scharf (1976). A new beginningÂ : primitivism and science in post-impressionist artÂ ; [and] Returnto nature. Open University. ISBNÂ 0-335-05151-0. OCLCÂ 1086245904.

^ "Perfecting your ourufrankline | Cooper Journal". www.cooper.com. Retrieved January 6, 2016.


Further reading[edit]
ISO 13407:1999 Human-centred design processes for interactive systems
ISO 9241-210:2010 Ergonomics of human-system interaction -- Part 210: Human-centred design for interactive systems
Video[edit]
Human Centered Design, IDEOâs David Kelley
User Centered Design, Don Norman
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteDesign
Outline
Designer
DisciplinesCommunicationdesign
Advertising
Book design
Brand design
Exhibit design
Film title design
Graphic design
Motion
Postage stamp design
Print design
Illustration
Information design
Instructional design
News design
Photography
Retail design
SignageÂ / Traffic sign design
TypographyÂ / Type design
Video design
Visual merchandising
Environmentaldesign
Architecture
Architectural lighting design
Building design
Passive solar
Ecological design
Environmental impact design
Garden design
Computer-aided
Healthy community design
Hotel design
Interior architecture
Interior design
EID
Keyline design
Landscape architecture
Sustainable
Landscape design
Spatial design
Urban design
Industrialdesign
Automotive design
Automotive suspension design
CMF design
Corrugated box design
Electric guitar design
Furniture design
Sustainable
Hardware interface design
Motorcycle design
Packaging and labeling
Photographic lens design
Product design
Production design
Sensory design
Service design
Interactiondesign
Experience design
EED
Game design
Level design
Video game design
Hardware interface design
Icon design
Immersive design
Information design
Sonic interaction design
User experience design
User interface design
Web design
Otherapplied arts
Public art design
CeramicÂ / glass design
Fashion design
Costume design
Jewellery design
Floral design
Game art design
Property design
Scenic design
Sound design
Stage/set lighting design
Textile design
Otherdesign& engineering
Algorithm design
Behavioural design
Boiler design
Database design
Drug design
Electrical system design
Experimental design
Filter design
Geometric design
Work design
Integrated circuit design
Circuit design
Physical design
Power network design
Mechanism design
Nuclear weapon design
Nucleic acid design
Organization design
Process design
Processor design
Protein design
Research design
Social design
Software design
Spacecraft design
Strategic design
Systems design
Approaches
Activity-centered
Adaptive web
Affective
Brainstorming
By committee
By contract
C-K theory
Closure
Co-design
Concept-oriented
Configuration
Contextual
Continuous
Cradle-to-cradle
Creative problem-solving
Creativity techniques
Critical
Design fiction
Defensive
Designâbidâbuild
Designâbuild
architect-led
Diffuse
Domain-driven
Ecological design
Energy neutral
Engineering design process
Probabilistic design
Error-tolerant
Fault-tolerant
Framework-oriented
For assembly
For behaviour change
For manufacturability
For Six Sigma
For testing
For X
Functional
Generative
Geodesign
HCD
High-level
Inclusive
Integrated
Integrated topside
Intelligence-based
Iterative
KISS principle
Low-level
Metadesign
Mind mapping
Modular
New Wave
Object-oriented
Open
Parametric
Participatory
Platform-based
Policy-based
Process-centered
Public interest
Rational
Regenerative
Reliability engineering
Research-based
Responsibility-driven
RWD
Safe-life
Sustainable
Systemic
SOD
Tableless web
Theory of constraints
Top-down and bottom-up
Transformation
Transgenerational
TRIZ
Universal
Design for All
Usage-centered
Use-centered
User-centered
Empathic
User innovation
Value-driven
Value sensitive
Privacy by
Design choice
computing
controls
culture
flow
leadership
management
marker
methods
pattern
research
science
sprint
strategy
theory
thinking
ToolsIntellectual propertyOrganizationsAwardsTools
AAD
Architectural model
Blueprint
Comprehensive layout
CAD
CAID
Virtual home design software
CAutoD
Design quality indicator
Electronic design automation
Flowchart
Mockup
Design specification
Prototype
Sketch
Storyboard
Technical drawing
HTML editor
Website wireframe
Intellectualproperty
Community design
Design around
Design infringement
Design patent
Fashion design copyright
Geschmacksmuster
Industrial design rights
European Union
Organizations
American Institute of Graphic Arts
Chartered Society of Designers
Design and Industries Association
Design Council
International Forum Design
The Design Society
Design Research Society
Awards
European Design Award
German Design Award
Good Design Award (Museum of Modern Art)
Good Design Award (Chicago Athenaeum)
Graphex
IF Product Design Award
James Dyson Award
Prince Philip Designers Prize
Related topics
Aesthetics
Agile
Concept art
Conceptual design
Creative industries
Cultural icon
.design
Enterprise architecture
Form factor
Futures studies
Indie design
Innovation management
Intelligent design
Lean startup
New product development
OODA loop
Philosophy of design
Process simulation
Slow design
STEAM fields
Unintelligent design
Visualization
Wicked problem
Design brief
change
classic
competition
architectural
student
director
education
elements and principles
engineer
firm
history
knowledge
language
life
load
museum
paradigm
rationale
review
specification
studies
studio
technology

 Commons    
 Wikibooks  
 Wikinews   
 Wikiquote  
 Wikisource 
 Wiktionary 

vteEngineering approachesSchool
Empathic design
Frugal innovation
Kansei engineering
Keep It Simple Stupid
Minimalism
Use-centered design
User-centered design
Concepts
Ornament and Crime
Overengineering
Planned obsolescence
Sustainability
Theory of constraints
Usability
Value engineering





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=User-centered_design&oldid=1054617536"
		Categories: Humanâcomputer interactionDesignUsabilityTechnical communicationHidden categories: Articles with short descriptionShort description matches WikidataUse American English from March 2021All Wikipedia articles written in American EnglishUse mdy dates from March 2021
	
