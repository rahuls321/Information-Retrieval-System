
Title:
Cluster analysis
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Grouping a set of objects by similarity
  The result of a cluster analysis shown as the coloring of the squares into three clusters.
Cluster analysis or clustering is the task of grouping a set of objects in such a way that objects in the same group (called a cluster) are more similar (in some sense) to each other than to those in other groups (clusters). It is a main task of exploratory data analysis, and a common technique for statistical data analysis, used in many fields, including pattern recognition, image analysis, information retrieval, bioinformatics, data compression, computer graphics and machine learning.
Cluster analysis itself is not one specific algorithm, but the general task to be solved. It can be achieved by various algorithms that differ significantly in their understanding of what constitutes a cluster and how to efficiently find them. Popular notions of clusters include groups with small distances between cluster members, dense areas of the data space, intervals or particular statistical distributions. Clustering can therefore be formulated as a multi-objective optimization problem. The appropriate clustering algorithm and parameter settings (including parameters such as the distance function to use, a density threshold or the number of expected clusters) depend on the individual data set and intended use of the results. Cluster analysis as such is not an automatic task, but an iterative process of knowledge discovery or interactive multi-objective optimization that involves trial and failure. It is often necessary to modify data preprocessing and model parameters until the result achieves the desired properties.
Besides the term clustering, there are a number of terms with similar meanings, including automatic classification, numerical taxonomy, botryology (from Greek Î²ÏÏÏÏÏ "grape"), typological analysis, and community detection. The subtle differences are often in the use of the results: while in data mining, the resulting groups are the matter of interest, in automatic classification the resulting discriminative power is of interest.
Cluster analysis was originated in anthropology by Driver and Kroeber in 1932[1] and introduced to psychology by Joseph Zubin in 1938[2] and Robert Tryon in 1939[3] and famously used by Cattell beginning in 1943[4] for trait theory classification in personality psychology.

Contents

1 Definition
2 Algorithms

2.1 Connectivity-based clustering (hierarchical clustering)
2.2 Centroid-based clustering
2.3 Distribution-based clustering
2.4 Density-based clustering
2.5 Grid-based clustering
2.6 Recent developments


3 Evaluation and assessment

3.1 Internal evaluation
3.2 External evaluation
3.3 Cluster tendency


4 Applications

4.1 Biology, computational biology and bioinformatics
4.2 Medicine
4.3 Business and marketing
4.4 World wide web
4.5 Computer science
4.6 Social science
4.7 Others


5 See also

5.1 Specialized types of cluster analysis
5.2 Techniques used in cluster analysis
5.3 Data projection and preprocessing
5.4 Other


6 References



Definition[edit]
The notion of a "cluster" cannot be precisely defined, which is one of the reasons why there are so many clustering algorithms.[5] There is a common denominator: a group of data objects. However, different researchers employ different cluster models, and for each of these cluster models again different algorithms can be given. The notion of a cluster, as found by different algorithms, varies significantly in its properties. Understanding these "cluster models" is key to understanding the differences between the various algorithms. Typical cluster models include:

.mw-parser-output .vanchor>:target~.vanchor-text{background-color:#b1d2ff}Connectivity models: for example, hierarchical clustering builds models based on distance connectivity.
Centroid models: for example, the k-means algorithm represents each cluster by a single mean vector.
Distribution models: clusters are modeled using statistical distributions, such as multivariate normal distributions used by the expectation-maximization algorithm.
Density models: for example, DBSCAN and OPTICS defines clusters as connected dense regions in the data space.
Subspace models: in biclustering (also known as co-clustering or two-mode-clustering), clusters are modeled with both cluster members and relevant attributes.
Group models: some algorithms do not provide a refined model for their results and just provide the grouping information.
Graph-based models: a clique, that is, a subset of nodes in a graph such that every two nodes in the subset are connected by an edge can be considered as a prototypical form of cluster. Relaxations of the complete connectivity requirement (a fraction of the edges can be missing) are known as quasi-cliques, as in the HCS clustering algorithm.
Signed graph models: Every path in a signed graph has a sign from the product of the signs on the edges. Under the assumptions of balance theory, edges may change sign and result in a bifurcated graph. The weaker "clusterability axiom" (no cycle has exactly one negative edge) yields results with more than two clusters, or subgraphs with only positive edges.[6]
Neural models: the most well known unsupervised neural network is the self-organizing map and these models can usually be characterized as similar to one or more of the above models, and including subspace models when neural networks implement a form of Principal Component Analysis or Independent Component Analysis.
A "clustering" is essentially a set of such clusters, usually containing all objects in the data set. Additionally, it may specify the relationship of the clusters to each other, for example, a hierarchy of clusters embedded in each other. Clusterings can be roughly distinguished as:

Hard clustering: each object belongs to a cluster or not
Soft clustering (also: fuzzy clustering): each object belongs to each cluster to a certain degree (for example, a likelihood of belonging to the cluster)
There are also finer distinctions possible, for example:

Strict partitioning clustering: each object belongs to exactly one cluster
Strict partitioning clustering with outliers: objects can also belong to no cluster, and are considered outliers
Overlapping clustering (also: alternative clustering, multi-view clustering): objects may belong to more than one cluster; usually involving hard clusters
Hierarchical clustering: objects that belong to a child cluster also belong to the parent cluster
Subspace clustering: while an overlapping clustering, within a uniquely defined subspace, clusters are not expected to overlap
Algorithms[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Main category: Cluster analysis algorithms
As listed above, clustering algorithms can be categorized based on their cluster model. The following overview will only list the most prominent examples of clustering algorithms, as there are possibly over 100 published clustering algorithms. Not all provide models for their clusters and can thus not easily be categorized. An overview of algorithms explained in Wikipedia can be found in the list of statistics algorithms.
There is no objectively "correct" clustering algorithm, but as it was noted, "clustering is in the eye of the beholder."[5] The most appropriate clustering algorithm for a particular problem often needs to be chosen experimentally, unless there is a mathematical reason to prefer one cluster model over another. An algorithm that is designed for one kind of model will generally fail on a data set that contains a radically different kind of model.[5] For example, k-means cannot find non-convex clusters.[5]

Connectivity-based clustering (hierarchical clustering)[edit]
Main article: Hierarchical clustering
Connectivity-based clustering, also known as hierarchical clustering, is based on the core idea of objects being more related to nearby objects than to objects farther away. These algorithms connect "objects" to form "clusters" based on their distance. A cluster can be described largely by the maximum distance needed to connect parts of the cluster. At different distances, different clusters will form, which can be represented using a dendrogram, which explains where the common name "hierarchical clustering" comes from: these algorithms do not provide a single partitioning of the data set, but instead provide an extensive hierarchy of clusters that merge with each other at certain distances. In a dendrogram, the y-axis marks the distance at which the clusters merge, while the objects are placed along the x-axis such that the clusters don't mix.
Connectivity-based clustering is a whole family of methods that differ by the way distances are computed. Apart from the usual choice of distance functions, the user also needs to decide on the linkage criterion (since a cluster consists of multiple objects, there are multiple candidates to compute the distance) to use. Popular choices are known as single-linkage clustering (the minimum of object distances), complete linkage clustering (the maximum of object distances), and UPGMA or WPGMA ("Unweighted or Weighted Pair Group Method with Arithmetic Mean", also known as average linkage clustering). Furthermore, hierarchical clustering can be agglomerative (starting with single elements and aggregating them into clusters) or divisive (starting with the complete data set and dividing it into partitions).
These methods will not produce a unique partitioning of the data set, but a hierarchy from which the user still needs to choose appropriate clusters. They are not very robust towards outliers, which will either show up as additional clusters or even cause other clusters to merge (known as "chaining phenomenon", in particular with single-linkage clustering). In the general case, the complexity is 
  
    
      
        
          
            O
          
        
        (
        
          n
          
            3
          
        
        )
      
    
    {\displaystyle {\mathcal {O}}(n^{3})}
  
 for agglomerative clustering and 
  
    
      
        
          
            O
          
        
        (
        
          2
          
            n
            â
            1
          
        
        )
      
    
    {\displaystyle {\mathcal {O}}(2^{n-1})}
  
 for divisive clustering,[7] which makes them too slow for large data sets. For some special cases, optimal efficient methods (of complexity 
  
    
      
        
          
            O
          
        
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle {\mathcal {O}}(n^{2})}
  
) are known: SLINK[8] for single-linkage and CLINK[9] for complete-linkage clustering. In the data mining community these methods are recognized as a theoretical foundation of cluster analysis, but often considered obsolete[citation needed]. They did however provide inspiration for many later methods such as density based clustering.


	Linkage clustering examples
		
			
			
Single-linkage on Gaussian data. At 35 clusters, the biggest cluster starts fragmenting into smaller parts, while before it was still connected to the second largest due to the single-link effect.

			
		
		
			
			
Single-linkage on density-based clusters. 20 clusters extracted, most of which contain single elements, since linkage clustering does not have a notion of "noise".

			
		

Centroid-based clustering[edit]
Main article: k-means clustering
In centroid-based clustering, each cluster is represented by a central vector, which is not necessarily a member of the data set. When the number of clusters is fixed to k, k-means clustering gives a formal definition as an optimization problem: find the k cluster centers and assign the objects to the nearest cluster center, such that the squared distances from the cluster are minimized.
The optimization problem itself is known to be NP-hard, and thus the common approach is to search only for approximate solutions. A particularly well known approximate method is Lloyd's algorithm,[10] often just referred to as "k-means algorithm" (although another algorithm introduced this name). It does however only find a local optimum, and is commonly run multiple times with different random initializations. Variations of k-means often include such optimizations as choosing the best of multiple runs, but also restricting the centroids to members of the data set (k-medoids), choosing medians (k-medians clustering), choosing the initial centers less randomly (k-means++) or allowing a fuzzy cluster assignment (fuzzy c-means).
Most k-means-type algorithms require the number of clusters â k â to be specified in advance, which is considered to be one of the biggest drawbacks of these algorithms. Furthermore, the algorithms prefer clusters of approximately similar size, as they will always assign an object to the nearest centroid. This often leads to incorrectly cut borders of clusters (which is not surprising since the algorithm optimizes cluster centers, not cluster borders).
K-means has a number of interesting theoretical properties. First, it partitions the data space into a structure known as a Voronoi diagram. Second, it is conceptually close to nearest neighbor classification, and as such is popular in machine learning. Third, it can be seen as a variation of model based clustering, and Lloyd's algorithm as a variation of the Expectation-maximization algorithm for this model discussed below.


	k-means clustering examples
		
			
			
k-means separates data into Voronoi cells, which assumes equal-sized clusters (not adequate here)

			
		
		
			
			
k-means cannot represent density-based clusters

			
		

Centroid-based clustering problems such as k-means and k-medoids are special cases of the uncapacitated, metric facility location problem, a canonical problem in the operations research and computational geometry communities. In a basic facility location problem (of which there are numerous variants that model more elaborate settings), the task is to find the best warehouse locations to optimally service a given set of consumers. One may view "warehouses" as cluster centroids and "consumer locations" as the data to be clustered. This makes it possible to apply the well-developed algorithmic solutions from the facility location literature to the presently considered centroid-based clustering problem.

Distribution-based clustering[edit]
The clustering model most closely related to statistics is based on distribution models. Clusters can then easily be defined as objects belonging most likely to the same distribution. A convenient property of this approach is that this closely resembles the way artificial data sets are generated: by sampling random objects from a distribution.
While the theoretical foundation of these methods is excellent, they suffer from one key problem known as overfitting, unless constraints are put on the model complexity. A more complex model will usually be able to explain the data better, which makes choosing the appropriate model complexity inherently difficult.
One prominent method is known as Gaussian mixture models (using the expectation-maximization algorithm). Here, the data set is usually modeled with a fixed (to avoid overfitting) number of Gaussian distributions that are initialized randomly and whose parameters are iteratively optimized to better fit the data set. This will converge to a local optimum, so multiple runs may produce different results. In order to obtain a hard clustering, objects are often then assigned to the Gaussian distribution they most likely belong to; for soft clusterings, this is not necessary.
Distribution-based clustering produces complex models for clusters that can capture correlation and dependence between attributes. However, these algorithms put an extra burden on the user: for many real data sets, there may be no concisely defined mathematical model (e.g. assuming Gaussian distributions is a rather strong assumption on the data).


	Gaussian mixture model clustering examples
		
			
			
On Gaussian-distributed data, EM works well, since it uses Gaussians for modelling clusters

			
		
		
			
			
Density-based clusters cannot be modeled using Gaussian distributions

			
		

Density-based clustering[edit]
In density-based clustering,[11] clusters are defined as areas of higher density than the remainder of the data set. Objects in sparse areas â that are required to separate clusters â are usually considered to be noise and border points.
The most popular[12] density based clustering method is DBSCAN.[13] In contrast to many newer methods, it features a well-defined cluster model called "density-reachability". Similar to linkage based clustering, it is based on connecting points within certain distance thresholds. However, it only connects points that satisfy a density criterion, in the original variant defined as a minimum number of other objects within this radius. A cluster consists of all density-connected objects (which can form a cluster of an arbitrary shape, in contrast to many other methods) plus all objects that are within these objects' range. Another interesting property of DBSCAN is that its complexity is fairly low â it requires a linear number of range queries on the database â and that it will discover essentially the same results (it is deterministic for core and noise points, but not for border points) in each run, therefore there is no need to run it multiple times. OPTICS[14] is a generalization of DBSCAN that removes the need to choose an appropriate value for the range parameter 
  
    
      
        Îµ
      
    
    {\displaystyle \varepsilon }
  
, and produces a hierarchical result related to that of linkage clustering. DeLi-Clu,[15] Density-Link-Clustering combines ideas from single-linkage clustering and OPTICS, eliminating the 
  
    
      
        Îµ
      
    
    {\displaystyle \varepsilon }
  
 parameter entirely and offering performance improvements over OPTICS by using an R-tree index.
The key drawback of DBSCAN and OPTICS is that they expect some kind of density drop to detect cluster borders. On data sets with, for example, overlapping Gaussian distributions â a common use case in artificial data â the cluster borders produced by these algorithms will often look arbitrary, because the cluster density decreases continuously. On a data set consisting of mixtures of Gaussians, these algorithms are nearly always outperformed by methods such as EM clustering that are able to precisely model this kind of data.
Mean-shift is a clustering approach where each object is moved to the densest area in its vicinity, based on kernel density estimation. Eventually, objects converge to local maxima of density. Similar to k-means clustering, these "density attractors" can serve as representatives for the data set, but mean-shift can detect arbitrary-shaped clusters similar to DBSCAN. Due to the expensive iterative procedure and density estimation, mean-shift is usually slower than DBSCAN or k-Means. Besides that, the applicability of the mean-shift algorithm to multidimensional data is hindered by the unsmooth behaviour of the kernel density estimate, which results in over-fragmentation of cluster tails.[15]


	Density-based clustering examples
		
			
			
Density-based clustering with DBSCAN.

			
		
		
			
			
DBSCAN assumes clusters of similar density, and may have problems separating nearby clusters

			
		
		
			
			
OPTICS is a DBSCAN variant, improving handling of different densities clusters

			
		

Grid-based clustering[edit]
The grid-based technique is used for a multi-dimensional data set.[16] In this technique, we create a grid structure, and the comparison is performed on grids (also known as cells). The grid-based technique is fast and has low computational complexity. There are two types of grid-based clustering methods: STING and CLIQUE. Steps involved in grid-based clustering algorithm are:

Divide data space into a finite number of cells.
Randomly select a cell âcâ, where c should not be traversed beforehand.
Calculate the density of âcâ
If the density of âcâ greater than threshold density
Mark cell âcâ as a new cluster
Calculate the density of all the neighbors of âcâ
If the density of a neighboring cell is greater than threshold density then, add the cell in the cluster and repeat steps 4.2 and 4.3 till there is no neighbor with a density greater than threshold density.
Repeat steps 2,3 and 4 till all the cells are traversed.
Stop.
Recent developments[edit]
In recent years, considerable effort has been put into improving the performance of existing algorithms.[17][18] Among them are CLARANS,[19] and BIRCH.[20] With the recent need to process larger and larger data sets (also known as big data), the willingness to trade semantic meaning of the generated clusters for performance has been increasing. This led to the development of pre-clustering methods such as canopy clustering, which can process huge data sets efficiently, but the resulting "clusters" are merely a rough pre-partitioning of the data set to then analyze the partitions with existing slower methods such as k-means clustering.
For high-dimensional data, many of the existing methods fail due to the curse of dimensionality, which renders particular distance functions problematic in high-dimensional spaces. This led to new clustering algorithms for high-dimensional data that focus on subspace clustering (where only some attributes are used, and cluster models include the relevant attributes for the cluster) and correlation clustering that also looks for arbitrary rotated ("correlated") subspace clusters that can be modeled by giving a correlation of their attributes.[21] Examples for such clustering algorithms are CLIQUE[22] and SUBCLU.[23]
Ideas from density-based clustering methods (in particular the DBSCAN/OPTICS family of algorithms) have been adapted to subspace clustering (HiSC,[24] hierarchical subspace clustering and DiSH[25]) and correlation clustering (HiCO,[26] hierarchical correlation clustering, 4C[27] using "correlation connectivity" and ERiC[28] exploring hierarchical density-based correlation clusters).
Several different clustering systems based on mutual information have been proposed. One is Marina MeilÄ's variation of information metric;[29] another provides hierarchical clustering.[30] Using genetic algorithms, a wide range of different fit-functions can be optimized, including mutual information.[31] Also belief propagation, a recent development in computer science and statistical physics, has led to the creation of new types of clustering algorithms.[32]

Evaluation and assessment[edit]
Evaluation (or "validation") of clustering results is as difficult as the clustering itself.[33] Popular approaches involve "internal" evaluation, where the clustering is summarized to a single quality score, "external" evaluation, where the clustering is compared to an existing "ground truth" classification, "manual" evaluation by a human expert, and "indirect" evaluation by evaluating the utility of the clustering in its intended application.[34]
Internal evaluation measures suffer from the problem that they represent functions that themselves can be seen as a clustering objective. For example, one could cluster the data set by the Silhouette coefficient; except that there is no known efficient algorithm for this. By using such an internal measure for evaluation, one rather compares the similarity of the optimization problems,[34] and not necessarily how useful the clustering is.
External evaluation has similar problems: if we have such "ground truth" labels, then we would not need to cluster; and in practical applications we usually do not have such labels. On the other hand, the labels only reflect one possible partitioning of the data set, which does not imply that there does not exist a different, and maybe even better, clustering.
Neither of these approaches can therefore ultimately judge the actual quality of a clustering, but this needs human evaluation,[34] which is highly subjective. Nevertheless, such statistics can be quite informative in identifying bad clusterings,[35] but one should not dismiss subjective human evaluation.[35]

Internal evaluation[edit]
See also: Determining the number of clusters in a data set
When a clustering result is evaluated based on the data that was clustered itself, this is called internal evaluation. These methods usually assign the best score to the algorithm that produces clusters with high similarity within a cluster and low similarity between clusters. One drawback of using internal criteria in cluster evaluation is that high scores on an internal measure do not necessarily result in effective information retrieval applications.[36] Additionally, this evaluation is biased towards algorithms that use the same cluster model. For example, k-means clustering naturally optimizes object distances, and a distance-based internal criterion will likely overrate the resulting clustering.
Therefore, the internal evaluation measures are best suited to get some insight into situations where one algorithm performs better than another, but this shall not imply that one algorithm produces more valid results than another.[5] Validity as measured by such an index depends on the claim that this kind of structure exists in the data set. An algorithm designed for some kind of models has no chance if the data set contains a radically different set of models, or if the evaluation measures a radically different criterion.[5] For example, k-means clustering can only find convex clusters, and many evaluation indexes assume convex clusters. On a data set with non-convex clusters neither the use of k-means, nor of an evaluation criterion that assumes convexity, is sound.
More than a dozen of internal evaluation measures exist, usually based on the intuition that items in the same cluster should be more similar than items in different clusters.[37]:â115â121â For example, the following methods can be used to assess the quality of clustering algorithms based on internal criterion:

DaviesâBouldin index
The DaviesâBouldin index can be calculated by the following formula:

  
    
      
        D
        B
        =
        
          
            1
            n
          
        
        
          â
          
            i
            =
            1
          
          
            n
          
        
        
          max
          
            j
            â 
            i
          
        
        
          (
          
            
              
                
                  Ï
                  
                    i
                  
                
                +
                
                  Ï
                  
                    j
                  
                
              
              
                d
                (
                
                  c
                  
                    i
                  
                
                ,
                
                  c
                  
                    j
                  
                
                )
              
            
          
          )
        
      
    
    {\displaystyle DB={\frac {1}{n}}\sum _{i=1}^{n}\max _{j\neq i}\left({\frac {\sigma _{i}+\sigma _{j}}{d(c_{i},c_{j})}}\right)}
  

where n is the number of clusters, 
  
    
      
        
          c
          
            i
          
        
      
    
    {\displaystyle c_{i}}
  
 is the centroid of cluster 
  
    
      
        i
      
    
    {\displaystyle i}
  
, 
  
    
      
        
          Ï
          
            i
          
        
      
    
    {\displaystyle \sigma _{i}}
  
 is the average distance of all elements in cluster 
  
    
      
        i
      
    
    {\displaystyle i}
  
 to centroid 
  
    
      
        
          c
          
            i
          
        
      
    
    {\displaystyle c_{i}}
  
, and 
  
    
      
        d
        (
        
          c
          
            i
          
        
        ,
        
          c
          
            j
          
        
        )
      
    
    {\displaystyle d(c_{i},c_{j})}
  
 is the distance between centroids 
  
    
      
        
          c
          
            i
          
        
      
    
    {\displaystyle c_{i}}
  
 and 
  
    
      
        
          c
          
            j
          
        
      
    
    {\displaystyle c_{j}}
  
. Since algorithms that produce clusters with low intra-cluster distances (high intra-cluster similarity) and high inter-cluster distances (low inter-cluster similarity) will have a low DaviesâBouldin index, the clustering algorithm that produces a collection of clusters with the smallest DaviesâBouldin index is considered the best algorithm based on this criterion.
Dunn index
The Dunn index aims to identify dense and well-separated clusters. It is defined as the ratio between the minimal inter-cluster distance to maximal intra-cluster distance. For each cluster partition, the Dunn index can be calculated by the following formula:[38]

  
    
      
        D
        =
        
          
            
              
                min
                
                  1
                  â¤
                  i
                  <
                  j
                  â¤
                  n
                
              
              d
              (
              i
              ,
              j
              )
            
            
              
                max
                
                  1
                  â¤
                  k
                  â¤
                  n
                
              
              
                d
                
                  â²
                
              
              (
              k
              )
            
          
        
        
        ,
      
    
    {\displaystyle D={\frac {\min _{1\leq i<j\leq n}d(i,j)}{\max _{1\leq k\leq n}d^{\prime }(k)}}\,,}
  

where d(i,j) represents the distance between clusters i and j, and d '(k) measures the intra-cluster distance of cluster k. The inter-cluster distance d(i,j) between two clusters may be any number of distance measures, such as the distance between the centroids of the clusters. Similarly, the intra-cluster distance d '(k) may be measured in a variety ways, such as the maximal distance between any pair of elements in clusterÂ k. Since internal criterion seek clusters with high intra-cluster similarity and low inter-cluster similarity, algorithms that produce clusters with high Dunn index are more desirable.
Silhouette coefficient
The silhouette coefficient contrasts the average distance to elements in the same cluster with the average distance to elements in other clusters. Objects with a high silhouette value are considered well clustered, objects with a low value may be outliers. This index works well with k-means clustering,[citation needed] and is also used to determine the optimal number of clusters.
External evaluation[edit]
In external evaluation, clustering results are evaluated based on data that was not used for clustering, such as known class labels and external benchmarks. Such benchmarks consist of a set of pre-classified items, and these sets are often created by (expert) humans. Thus, the benchmark sets can be thought of as a gold standard for evaluation.[33] These types of evaluation methods measure how close the clustering is to the predetermined benchmark classes. However, it has recently been discussed whether this is adequate for real data, or only on synthetic data sets with a factual ground truth, since classes can contain internal structure, the attributes present may not allow separation of clusters or the classes may contain anomalies.[39] Additionally, from a knowledge discovery point of view, the reproduction of known knowledge may not necessarily be the intended result.[39] In the special scenario of constrained clustering, where meta information (such as class labels) is used already in the clustering process, the hold-out of information for evaluation purposes is non-trivial.[40]
A number of measures are adapted from variants used to evaluate classification tasks. In place of counting the number of times a class was correctly assigned to a single data point (known as true positives), such pair counting metrics assess whether each pair of data points that is truly in the same cluster is predicted to be in the same cluster.[33]
As with internal evaluation, several external evaluation measures exist,[37]:â125â129â for example:

Purity: Purity is a measure of the extent to which clusters contain a single class.[36] Its calculation can be thought of as follows: For each cluster, count the number of data points from the most common class in said cluster. Now take the sum over all clusters and divide by the total number of data points. Formally, given some set of clusters 
  
    
      
        M
      
    
    {\displaystyle M}
  
 and some set of classes 
  
    
      
        D
      
    
    {\displaystyle D}
  
, both partitioning 
  
    
      
        N
      
    
    {\displaystyle N}
  
 data points, purity can be defined as:

  
    
      
        
          
            1
            N
          
        
        
          â
          
            m
            â
            M
          
        
        
          max
          
            d
            â
            D
          
        
        
          
            |
          
          m
          â©
          d
          
            |
          
        
      
    
    {\displaystyle {\frac {1}{N}}\sum _{m\in M}\max _{d\in D}{|m\cap d|}}
  

This measure doesn't penalize having many clusters, and more clusters will make it easier to produce a high purity. A purity score of 1 is always possible by putting each data point in its own cluster. Also, purity doesn't work well for imbalanced data, where even poorly performing clustering algorithms will give a high purity value. For example, if a size 1000 dataset consists of two classes, one containing 999 points and the other containing 1 point, then every possible partition will have a purity of at least 99.9%.
Rand index[41]
The Rand index computes how similar the clusters (returned by the clustering algorithm) are to the benchmark classifications. It can be computed using the following formula:

  
    
      
        R
        I
        =
        
          
            
              T
              P
              +
              T
              N
            
            
              T
              P
              +
              F
              P
              +
              F
              N
              +
              T
              N
            
          
        
      
    
    {\displaystyle RI={\frac {TP+TN}{TP+FP+FN+TN}}}
  

where  
  
    
      
        T
        P
      
    
    {\displaystyle TP}
  
 is the number of true positives, 
  
    
      
        T
        N
      
    
    {\displaystyle TN}
  
 is the number of true negatives, 
  
    
      
        F
        P
      
    
    {\displaystyle FP}
  
 is the number of false positives, and 
  
    
      
        F
        N
      
    
    {\displaystyle FN}
  
 is the number of false negatives. The instances being counted here are the number of correct pairwise assignments. That is, 
  
    
      
        T
        P
      
    
    {\displaystyle TP}
  
 is the number of pairs of points that are clustered together in the predicted partition and in the ground truth partition, 
  
    
      
        F
        P
      
    
    {\displaystyle FP}
  
 is the number of pairs of points that are clustered together in the predicted partition but not in the ground truth partition etc. If the dataset is of size N, then 
  
    
      
        T
        P
        +
        T
        N
        +
        F
        P
        +
        F
        N
        =
        
          
            
              (
            
            
              N
              2
            
            
              )
            
          
        
      
    
    {\displaystyle TP+TN+FP+FN={\binom {N}{2}}}
  
.
One issue with the Rand index is that false positives and false negatives are equally weighted. This may be an undesirable characteristic for some clustering applications. The F-measure addresses this concern,[citation needed] as does the chance-corrected adjusted Rand index.

F-measure
The F-measure can be used to balance the contribution of false negatives by weighting recall through a parameter 
  
    
      
        Î²
        â¥
        0
      
    
    {\displaystyle \beta \geq 0}
  
. Let precision and recall (both external evaluation measures in themselves) be defined as follows:

  
    
      
        P
        =
        
          
            
              T
              P
            
            
              T
              P
              +
              F
              P
            
          
        
      
    
    {\displaystyle P={\frac {TP}{TP+FP}}}
  


  
    
      
        R
        =
        
          
            
              T
              P
            
            
              T
              P
              +
              F
              N
            
          
        
      
    
    {\displaystyle R={\frac {TP}{TP+FN}}}
  

where 
  
    
      
        P
      
    
    {\displaystyle P}
  
 is the precision rate and 
  
    
      
        R
      
    
    {\displaystyle R}
  
 is the recall rate. We can calculate the F-measure by using the following formula:[36]

  
    
      
        
          F
          
            Î²
          
        
        =
        
          
            
              (
              
                Î²
                
                  2
                
              
              +
              1
              )
              â
              P
              â
              R
            
            
              
                Î²
                
                  2
                
              
              â
              P
              +
              R
            
          
        
      
    
    {\displaystyle F_{\beta }={\frac {(\beta ^{2}+1)\cdot P\cdot R}{\beta ^{2}\cdot P+R}}}
  

When 
  
    
      
        Î²
        =
        0
      
    
    {\displaystyle \beta =0}
  
, 
  
    
      
        
          F
          
            0
          
        
        =
        P
      
    
    {\displaystyle F_{0}=P}
  
. In other words, recall has no impact on the F-measure when 
  
    
      
        Î²
        =
        0
      
    
    {\displaystyle \beta =0}
  
, and increasing 
  
    
      
        Î²
      
    
    {\displaystyle \beta }
  
 allocates an increasing amount of weight to recall in the final F-measure.
Also 
  
    
      
        T
        N
      
    
    {\displaystyle TN}
  
 is not taken into account and can vary from 0 upward without bound.
Jaccard index
The Jaccard index is used to quantify the similarity between two datasets. The Jaccard index takes on a value between 0 and 1. An index of 1 means that the two dataset are identical, and an index of 0 indicates that the datasets have no common elements. The Jaccard index is defined by the following formula:

  
    
      
        J
        (
        A
        ,
        B
        )
        =
        
          
            
              
                |
              
              A
              â©
              B
              
                |
              
            
            
              
                |
              
              A
              âª
              B
              
                |
              
            
          
        
        =
        
          
            
              T
              P
            
            
              T
              P
              +
              F
              P
              +
              F
              N
            
          
        
      
    
    {\displaystyle J(A,B)={\frac {|A\cap B|}{|A\cup B|}}={\frac {TP}{TP+FP+FN}}}
  

This is simply the number of unique elements common to both sets divided by the total number of unique elements in both sets.
Also 
  
    
      
        T
        N
      
    
    {\displaystyle TN}
  
 is not taken into account and can vary from 0 upward without bound.
Dice index
The Dice symmetric measure doubles the weight on 
  
    
      
        T
        P
      
    
    {\displaystyle TP}
  
 while still ignoring 
  
    
      
        T
        N
      
    
    {\displaystyle TN}
  
:

  
    
      
        D
        S
        C
        =
        
          
            
              2
              T
              P
            
            
              2
              T
              P
              +
              F
              P
              +
              F
              N
            
          
        
      
    
    {\displaystyle DSC={\frac {2TP}{2TP+FP+FN}}}
  

FowlkesâMallows index[42]
The FowlkesâMallows index computes the similarity between the clusters returned by the clustering algorithm and the benchmark classifications. The higher the value of the FowlkesâMallows index the more similar the clusters and the benchmark classifications are. It can be computed using the following formula:

  
    
      
        F
        M
        =
        
          
            
              
                
                  T
                  P
                
                
                  T
                  P
                  +
                  F
                  P
                
              
            
            â
            
              
                
                  T
                  P
                
                
                  T
                  P
                  +
                  F
                  N
                
              
            
          
        
      
    
    {\displaystyle FM={\sqrt {{\frac {TP}{TP+FP}}\cdot {\frac {TP}{TP+FN}}}}}
  

where  
  
    
      
        T
        P
      
    
    {\displaystyle TP}
  
 is the number of true positives, 
  
    
      
        F
        P
      
    
    {\displaystyle FP}
  
 is the number of false positives, and 
  
    
      
        F
        N
      
    
    {\displaystyle FN}
  
 is the number of false negatives. The 
  
    
      
        F
        M
      
    
    {\displaystyle FM}
  
 index is the geometric mean of the precision and recall 
  
    
      
        P
      
    
    {\displaystyle P}
  
 and 
  
    
      
        R
      
    
    {\displaystyle R}
  
, and is thus also known as the G-measure, while the F-measure is their harmonic mean.[43][44] Moreover, precision and recall are also known as Wallace's indices 
  
    
      
        
          B
          
            I
          
        
      
    
    {\displaystyle B^{I}}
  
 and 
  
    
      
        
          B
          
            I
            I
          
        
      
    
    {\displaystyle B^{II}}
  
.[45] Chance normalized versions of recall, precision and G-measure correspond to Informedness, Markedness and Matthews Correlation and relate strongly to Kappa.[46]
The mutual information is an information theoretic measure of how much information is shared between a clustering and a ground-truth classification that can detect a non-linear similarity between two clusterings. Normalized mutual information is a family of corrected-for-chance variants of this that has a reduced bias for varying cluster numbers.[33]
Confusion matrix
A confusion matrix can be used to quickly visualize the results of a classification (or clustering) algorithm. It shows how different a cluster is from the gold standard cluster.
Cluster tendency[edit]
To measure cluster tendency is to measure to what degree clusters exist in the data to be clustered, and may be performed as an initial test, before attempting clustering. One way to do this is to compare the data against random data. On average, random data should not have clusters.

Hopkins statistic
There are multiple formulations of the Hopkins statistic.[47] A typical one is as follows.[48] Let 
  
    
      
        X
      
    
    {\displaystyle X}
  
 be the set of 
  
    
      
        n
      
    
    {\displaystyle n}
  
 data points in 
  
    
      
        d
      
    
    {\displaystyle d}
  
 dimensional space. Consider a random sample (without replacement) of 
  
    
      
        m
        âª
        n
      
    
    {\displaystyle m\ll n}
  
 data points with members 
  
    
      
        
          x
          
            i
          
        
      
    
    {\displaystyle x_{i}}
  
. Also generate a set 
  
    
      
        Y
      
    
    {\displaystyle Y}
  
 of 
  
    
      
        m
      
    
    {\displaystyle m}
  
 uniformly randomly distributed data points. Now define two distance measures, 
  
    
      
        
          u
          
            i
          
        
      
    
    {\displaystyle u_{i}}
  
 to be the distance of 
  
    
      
        
          y
          
            i
          
        
        â
        Y
      
    
    {\displaystyle y_{i}\in Y}
  
 from its nearest neighbor in X and 
  
    
      
        
          w
          
            i
          
        
      
    
    {\displaystyle w_{i}}
  
 to be the distance of 
  
    
      
        
          x
          
            i
          
        
        â
        X
      
    
    {\displaystyle x_{i}\in X}
  
 from its nearest neighbor in X. We then define the Hopkins statistic as:

  
    
      
        H
        =
        
          
            
              
                â
                
                  i
                  =
                  1
                
                
                  m
                
              
              
                
                  u
                  
                    i
                  
                  
                    d
                  
                
              
            
            
              
                â
                
                  i
                  =
                  1
                
                
                  m
                
              
              
                
                  u
                  
                    i
                  
                  
                    d
                  
                
              
              +
              
                â
                
                  i
                  =
                  1
                
                
                  m
                
              
              
                
                  w
                  
                    i
                  
                  
                    d
                  
                
              
            
          
        
        
        ,
      
    
    {\displaystyle H={\frac {\sum _{i=1}^{m}{u_{i}^{d}}}{\sum _{i=1}^{m}{u_{i}^{d}}+\sum _{i=1}^{m}{w_{i}^{d}}}}\,,}
  

With this definition, uniform random data should tend to have values near to 0.5, and clustered data should tend to have values nearer to 1.
However, data containing just a single Gaussian will also score close to 1, as this statistic measures deviation from a uniform distribution, not multimodality, making this statistic largely useless in application (as real data never is remotely uniform).
Applications[edit]
This section needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.  (November 2016) (Learn how and when to remove this template message)
Biology, computational biology and bioinformatics[edit]
See also: Distance matrices in phylogeny
Plant and animal ecology
Cluster analysis is used to describe and to make spatial and temporal comparisons of communities (assemblages) of organisms in heterogeneous environments. It is also used in plant systematics to generate artificial phylogenies or clusters of organisms (individuals) at the species, genus or higher level that share a number of attributes.
Transcriptomics
Clustering is used to build groups of genes with related expression patterns (also known as coexpressed genes) as in HCS clustering algorithm.[49][50] Often such groups contain functionally related proteins, such as enzymes for a specific pathway, or genes that are co-regulated. High throughput experiments using expressed sequence tags (ESTs) or DNA microarrays can be a powerful tool for genome annotationâa general aspect of genomics.
Sequence analysis
Sequence clustering is used to group homologous sequences into gene families.[51] This is a very important concept in bioinformatics, and evolutionary biology in general. See evolution by gene duplication.
High-throughput genotyping platforms
Clustering algorithms are used to automatically assign genotypes.[52]
Human genetic clustering
The similarity of genetic data is used in clustering to infer population structures.
Medicine[edit]
Medical imaging
On PET scans, cluster analysis can be used to differentiate between different types of tissue in a three-dimensional image for many different purposes.[53]
Analysis of antimicrobial activity
Cluster analysis can be used to analyse patterns of antibiotic resistance, to classify antimicrobial compounds according to their mechanism of action, to classify antibiotics according to their antibacterial activity.
IMRT segmentation
Clustering can be used to divide a fluence map into distinct regions for conversion into deliverable fields in MLC-based Radiation Therapy.
Business and marketing[edit]
Market research
Cluster analysis is widely used in market research when working with multivariate data from surveys and test panels. Market researchers use cluster analysis to partition the general population of consumers into market segments and to better understand the relationships between different groups of consumers/potential customers, and for use in market segmentation, product positioning, new product development and selecting test markets.
Grouping of shopping items
Clustering can be used to group all the shopping items available on the web into a set of unique products. For example, all the items on eBay can be grouped into unique products (eBay does not have the concept of a SKU).
World wide web[edit]
Social network analysis
In the study of social networks, clustering may be used to recognize communities within large groups of people.
Search result grouping
In the process of intelligent grouping of the files and websites, clustering may be used to create a more relevant set of search results compared to normal search engines like Google[citation needed]. There are currently a number of web-based clustering tools such as Clusty. It also may be used to return a more comprehensive set of results in cases where a search term could refer to vastly different things. Each distinct use of the term corresponds to a unique cluster of results, allowing a ranking algorithm to return comprehensive results by picking the top result from each cluster.[54]
Slippy map optimization
Flickr's map of photos and other map sites use clustering to reduce the number of markers on a map. This makes it both faster and reduces the amount of visual clutter.
Computer science[edit]
Software evolution
Clustering is useful in software evolution as it helps to reduce legacy properties in code by reforming functionality that has become dispersed. It is a form of restructuring and hence is a way of direct preventative maintenance.
Image segmentation
Clustering can be used to divide a digital image into distinct regions for border detection or object recognition.[55]
Evolutionary algorithms
Clustering may be used to identify different niches within the population of an evolutionary algorithm so that reproductive opportunity can be distributed more evenly amongst the evolving species or subspecies.
Recommender systems
Recommender systems are designed to recommend new items based on a user's tastes.  They sometimes use clustering algorithms to predict a user's preferences based on the preferences of other users in the user's cluster.
Markov chain Monte Carlo methods
Clustering is often utilized to locate and characterize extrema in the target distribution.
Anomaly detection
Anomalies/outliers are typically â be it explicitly or implicitly â defined with respect to clustering structure in data.
Natural language processing
Clustering can be used to resolve lexical ambiguity.[54]
Social science[edit]
Sequence analysis in social sciences
Cluster analysis is used to identify patterns of family life trajectories, professional careers, and daily or weekly time use for example.
Crime analysis
Cluster analysis can be used to identify areas where there are greater incidences of particular types of crime. By identifying these distinct areas or "hot spots" where a similar crime has happened over a period of time, it is possible to manage law enforcement resources more effectively.
Educational data mining
Cluster analysis is for example used to identify groups of schools or students with similar properties.
Typologies
From poll data, projects such as those undertaken by the Pew Research Center use cluster analysis to discern typologies of opinions, habits, and demographics that may be useful in politics and marketing.
Others[edit]
Field robotics
Clustering algorithms are used for robotic situational awareness to track objects and detect outliers in sensor data.[56]
Mathematical chemistry
To find structural similarity, etc., for example, 3000 chemical compounds were clustered in the space of 90 topological indices.[57]
Climatology
To find weather regimes or preferred sea level pressure atmospheric patterns.[58]
Finance
Cluster analysis has been used to cluster stocks into sectors.[59]
Petroleum geology
Cluster analysis is used to reconstruct missing bottom hole core data or missing log curves in order to evaluate reservoir properties.
Geochemistry
The clustering of chemical properties in different sample locations.
See also[edit]



Wikimedia Commons has media related to Cluster analysis.

Specialized types of cluster analysis[edit]
Automatic clustering algorithms
Balanced clustering
Clustering high-dimensional data
Conceptual clustering
Consensus clustering
Constrained clustering
Community detection
Data stream clustering
HCS clustering
Sequence clustering
Spectral clustering
Techniques used in cluster analysis[edit]
Artificial neural network (ANN)
Nearest neighbor search
Neighbourhood components analysis
Latent class analysis
Affinity propagation
Data projection and preprocessing[edit]
Dimension reduction
Principal component analysis
Multidimensional scaling
Other[edit]
Cluster-weighted modeling
Curse of dimensionality
Determining the number of clusters in a data set
Parallel coordinates
Structured data analysis
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Driver and Kroeber (1932). "Quantitative Expression of Cultural Relationships". University of California Publications in American Archaeology and Ethnology. Quantitative Expression of Cultural Relationships: 211â256 â via http://dpg.lib.berkeley.edu. {{cite journal}}: External link in |via= (help)

^ Zubin, Joseph (1938). "A technique for measuring like-mindedness". The Journal of Abnormal and Social Psychology. 33 (4): 508â516. doi:10.1037/h0055441. ISSNÂ 0096-851X.

^ Tryon, Robert C. (1939). Cluster Analysis: Correlation Profile and Orthometric (factor) Analysis for the Isolation of Unities in Mind and Personality. Edwards Brothers.

^ Cattell, R. B. (1943). "The description of personality: Basic traits resolved into clusters". Journal of Abnormal and Social Psychology. 38 (4): 476â506. doi:10.1037/h0054116.

^ Jump up to: a b c d e f Estivill-Castro, Vladimir (20 June 2002). "Why so many clustering algorithms â A Position Paper". ACM SIGKDD Explorations Newsletter. 4 (1): 65â75. doi:10.1145/568574.568575. S2CIDÂ 7329935.

^ James A. Davis (May 1967) "Clustering and structural balance in graphs", Human Relations 20:181â7

^ Everitt, Brian (2011). Cluster analysis. Chichester, West Sussex, U.K: Wiley. ISBNÂ 9780470749913.

^ Sibson, R. (1973). "SLINK: an optimally efficient algorithm for the single-link cluster method" (PDF). The Computer Journal. British Computer Society. 16 (1): 30â34. doi:10.1093/comjnl/16.1.30.

^ Defays, D. (1977). "An efficient algorithm for a complete link method". The Computer Journal. British Computer Society. 20 (4): 364â366. doi:10.1093/comjnl/20.4.364.

^ Lloyd, S. (1982). "Least squares quantization in PCM". IEEE Transactions on Information Theory. 28 (2): 129â137. doi:10.1109/TIT.1982.1056489.

^ Kriegel, Hans-Peter; KrÃ¶ger, Peer; Sander, JÃ¶rg; Zimek, Arthur (2011). "Density-based Clustering". WIREs Data Mining and Knowledge Discovery. 1 (3): 231â240. doi:10.1002/widm.30. S2CIDÂ 36920706.

^ Microsoft academic search: most cited data mining articles Archived 2010-04-21 at the Wayback Machine: DBSCAN is on rank 24, when accessed on: 4/18/2010

^ Ester, Martin; Kriegel, Hans-Peter; Sander, JÃ¶rg; Xu, Xiaowei (1996). "A density-based algorithm for discovering clusters in large spatial databases with noise".  In Simoudis, Evangelos; Han, Jiawei; Fayyad, Usama M. (eds.). Proceedings of the Second International Conference on Knowledge Discovery and Data Mining (KDD-96). AAAI Press. pp.Â 226â231. ISBNÂ 1-57735-004-9.

^ Ankerst, Mihael; Breunig, Markus M.; Kriegel, Hans-Peter; Sander, JÃ¶rg (1999). "OPTICS: Ordering Points To Identify the Clustering Structure". ACM SIGMOD international conference on Management of data. ACM Press. pp.Â 49â60. CiteSeerXÂ 10.1.1.129.6542.

^ Jump up to: a b Achtert, E.; BÃ¶hm, C.; KrÃ¶ger, P. (2006). "DeLi-Clu: Boosting Robustness, Completeness, Usability, and Efficiency of Hierarchical Clustering by a Closest Pair Ranking". Advances in Knowledge Discovery and Data Mining. Lecture Notes in Computer Science. Vol.Â 3918. pp.Â 119â128. CiteSeerXÂ 10.1.1.64.1161. doi:10.1007/11731139_16. ISBNÂ 978-3-540-33206-0.

^ Aggarwal, Charu C., editor. Reddy, Chandan K., editor. Data ClusteringÂ : Algorithms and Applications. ISBNÂ 978-1-315-37351-5. OCLCÂ 1110589522. {{cite book}}: |last= has generic name (help)CS1 maint: multiple names: authors list (link)

^ Sculley, D. (2010). Web-scale k-means clustering. Proc. 19th WWW.

^ Huang, Z. (1998). "Extensions to the k-means algorithm for clustering large data sets with categorical values". Data Mining and Knowledge Discovery. 2 (3): 283â304. doi:10.1023/A:1009769707641. S2CIDÂ 11323096.

^ R. Ng and J. Han. "Efficient and effective clustering method for spatial data mining". In: Proceedings of the 20th VLDB Conference, pages 144â155, Santiago, Chile, 1994.

^ Tian Zhang, Raghu Ramakrishnan, Miron Livny. "An Efficient Data Clustering Method for Very Large Databases." In: Proc. Int'l Conf. on Management of Data, ACM SIGMOD, pp. 103â114.

^ Kriegel, Hans-Peter; KrÃ¶ger, Peer; Zimek, Arthur (July 2012). "Subspace clustering". Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery. 2 (4): 351â364. doi:10.1002/widm.1057. S2CIDÂ 7241355.

^ Agrawal, R.; Gehrke, J.; Gunopulos, D.; Raghavan, P. (2005). "Automatic Subspace Clustering of High Dimensional Data". Data Mining and Knowledge Discovery. 11: 5â33. CiteSeerXÂ 10.1.1.131.5152. doi:10.1007/s10618-005-1396-1. S2CIDÂ 9289572.

^ Karin Kailing, Hans-Peter Kriegel and Peer KrÃ¶ger. Density-Connected Subspace Clustering for High-Dimensional Data. In: Proc. SIAM Int. Conf. on Data Mining (SDM'04), pp. 246â257, 2004.

^ Achtert, E.; BÃ¶hm, C.; Kriegel, H.-P.; KrÃ¶ger, P.; MÃ¼ller-Gorman, I.; Zimek, A. (2006). "Finding Hierarchies of Subspace Clusters". Knowledge Discovery in Databases: PKDD 2006. Lecture Notes in Computer Science. Vol.Â 4213. pp.Â 446â453. CiteSeerXÂ 10.1.1.705.2956. doi:10.1007/11871637_42. ISBNÂ 978-3-540-45374-1.

^ Achtert, E.; BÃ¶hm, C.; Kriegel, H. P.; KrÃ¶ger, P.; MÃ¼ller-Gorman, I.; Zimek, A. (2007). "Detection and Visualization of Subspace Cluster Hierarchies". Advances in Databases: Concepts, Systems and Applications. Lecture Notes in Computer Science. Vol.Â 4443. pp.Â 152â163. CiteSeerXÂ 10.1.1.70.7843. doi:10.1007/978-3-540-71703-4_15. ISBNÂ 978-3-540-71702-7.

^ Achtert, E.; BÃ¶hm, C.; KrÃ¶ger, P.; Zimek, A. (2006). "Mining Hierarchies of Correlation Clusters". Proc. 18th International Conference on Scientific and Statistical Database Management (SSDBM): 119â128. CiteSeerXÂ 10.1.1.707.7872. doi:10.1109/SSDBM.2006.35. ISBNÂ 978-0-7695-2590-7. S2CIDÂ 2679909.

^ BÃ¶hm, C.; Kailing, K.; KrÃ¶ger, P.; Zimek, A. (2004). "Computing Clusters of Correlation Connected objects". Proceedings of the 2004 ACM SIGMOD international conference on Management of data - SIGMOD '04. p.Â 455. CiteSeerXÂ 10.1.1.5.1279. doi:10.1145/1007568.1007620. ISBNÂ 978-1581138597. S2CIDÂ 6411037.

^ Achtert, E.; Bohm, C.; Kriegel, H. P.; KrÃ¶ger, P.; Zimek, A. (2007). "On Exploring Complex Relationships of Correlation Clusters". 19th International Conference on Scientific and Statistical Database Management (SSDBM 2007). p.Â 7. CiteSeerXÂ 10.1.1.71.5021. doi:10.1109/SSDBM.2007.21. ISBNÂ 978-0-7695-2868-7. S2CIDÂ 1554722.

^ MeilÄ, Marina (2003). "Comparing Clusterings by the Variation of Information". Learning Theory and Kernel Machines. Lecture Notes in Computer Science. Vol.Â 2777. pp.Â 173â187. doi:10.1007/978-3-540-45167-9_14. ISBNÂ 978-3-540-40720-1.

^ Kraskov, Alexander; StÃ¶gbauer, Harald; Andrzejak, Ralph G.; Grassberger, Peter (1 December 2003). "Hierarchical Clustering Based on Mutual Information". arXiv:q-bio/0311039. Bibcode:2003q.bio....11039K. {{cite journal}}: Cite journal requires |journal= (help)

^ Auffarth, B. (July 18â23, 2010). "Clustering by a Genetic Algorithm with Biased Mutation Operator". Wcci Cec. IEEE.

^ Frey, B. J.; Dueck, D. (2007). "Clustering by Passing Messages Between Data Points". Science. 315 (5814): 972â976. Bibcode:2007Sci...315..972F. CiteSeerXÂ 10.1.1.121.3145. doi:10.1126/science.1136800. PMIDÂ 17218491. S2CIDÂ 6502291.

^ Jump up to: a b c d Pfitzner, Darius; Leibbrandt, Richard; Powers, David (2009). "Characterization and evaluation of similarity measures for pairs of clusterings". Knowledge and Information Systems. Springer. 19 (3): 361â394. doi:10.1007/s10115-008-0150-6. S2CIDÂ 6935380.

^ Jump up to: a b c Feldman, Ronen; Sanger, James (2007-01-01). The Text Mining Handbook: Advanced Approaches in Analyzing Unstructured Data. Cambridge Univ. Press. ISBNÂ 978-0521836579. OCLCÂ 915286380.

^ Jump up to: a b Weiss, Sholom M.; Indurkhya, Nitin; Zhang, Tong; Damerau, Fred J. (2005). Text Mining: Predictive Methods for Analyzing Unstructured Information. Springer. ISBNÂ 978-0387954332. OCLCÂ 803401334.

^ Jump up to: a b c Manning, Christopher D.; Raghavan, Prabhakar; SchÃ¼tze, Hinrich (2008-07-07). Introduction to Information Retrieval. Cambridge University Press. ISBNÂ 978-0-521-86571-5.

^ Jump up to: a b Knowledge Discovery in Databases â Part III â Clustering (PDF), Heidelberg University, 2017

^ Dunn, J. (1974). "Well separated clusters and optimal fuzzy partitions". Journal of Cybernetics. 4: 95â104. doi:10.1080/01969727408546059.

^ Jump up to: a b FÃ¤rber, Ines; GÃ¼nnemann, Stephan; Kriegel, Hans-Peter; KrÃ¶ger, Peer; MÃ¼ller, Emmanuel; Schubert, Erich; Seidl, Thomas; Zimek, Arthur (2010). "On Using Class-Labels in Evaluation of Clusterings" (PDF).  In Fern, Xiaoli Z.; Davidson, Ian; Dy, Jennifer (eds.). MultiClust: Discovering, Summarizing, and Using Multiple Clusterings. ACM SIGKDD.

^ Pourrajabi, M.; Moulavi, D.; Campello, R. J. G. B.; Zimek, A.; Sander, J.; Goebel, R. (2014). "Model Selection for Semi-Supervised Clustering". Proceedings of the 17th International Conference on Extending Database Technology (EDBT). pp.Â 331â342. doi:10.5441/002/edbt.2014.31.

^ Rand, W. M. (1971). "Objective criteria for the evaluation of clustering methods". Journal of the American Statistical Association. American Statistical Association. 66 (336): 846â850. arXiv:1704.01036. doi:10.2307/2284239. JSTORÂ 2284239.

^ Fowlkes, E. B.; Mallows, C. L. (1983). "A Method for Comparing Two Hierarchical Clusterings". Journal of the American Statistical Association. 78 (383): 553â569. doi:10.1080/01621459.1983.10478008. JSTORÂ 2288117.

^ Powers, David (2003). Recall and Precision versus the Bookmaker. International Conference on Cognitive Science. pp.Â 529â534.

^ Arabie, P. (1985). "Comparing partitions". Journal of Classification. 2 (1): 1985. doi:10.1007/BF01908075. S2CIDÂ 189915041.

^ Wallace, D. L. (1983). "Comment". Journal of the American Statistical Association. 78 (383): 569â579. doi:10.1080/01621459.1983.10478009.

^ Powers, David (2012). The Problem with Kappa. European Chapter of the Association for Computational Linguistics. pp.Â 345â355.

^ Hopkins, Brian; Skellam, John Gordon (1954). "A new method for determining the type of distribution of plant individuals". Annals of Botany. Annals Botany Co. 18 (2): 213â227. doi:10.1093/oxfordjournals.aob.a083391.

^ Banerjee, A. (2004). "Validating clusters using the Hopkins statistic". IEEE International Conference on Fuzzy Systems. 1: 149â153. doi:10.1109/FUZZY.2004.1375706. ISBNÂ 978-0-7803-8353-1. S2CIDÂ 36701919.

^ Johnson, Stephen C. (1967-09-01). "Hierarchical clustering schemes". Psychometrika. 32 (3): 241â254. doi:10.1007/BF02289588. ISSNÂ 1860-0980. PMIDÂ 5234703. S2CIDÂ 930698.

^ Hartuv, Erez; Shamir, Ron (2000-12-31). "A clustering algorithm based on graph connectivity". Information Processing Letters. 76 (4): 175â181. doi:10.1016/S0020-0190(00)00142-3. ISSNÂ 0020-0190.

^ Remm, Maido; Storm, Christian E. V.; Sonnhammer, Erik L. L. (2001-12-14). "Automatic clustering of orthologs and in-paralogs from pairwise species comparisons11Edited by F. Cohen". Journal of Molecular Biology. 314 (5): 1041â1052. doi:10.1006/jmbi.2000.5197. ISSNÂ 0022-2836. PMIDÂ 11743721.

^ Botstein, David; Cox, David R.; Risch, Neil; Olshen, Richard; Curb, David; Dzau, Victor J.; Chen, Yii-Der I.; Hebert, Joan; Pesich, Robert (2001-07-01). "High-Throughput Genotyping with Single Nucleotide Polymorphisms". Genome Research. 11 (7): 1262â1268. doi:10.1101/gr.157801. ISSNÂ 1088-9051. PMCÂ 311112. PMIDÂ 11435409.

^ Filipovych, Roman; Resnick, Susan M.; Davatzikos, Christos (2011). "Semi-supervised Cluster Analysis of Imaging Data". NeuroImage. 54 (3): 2185â2197. doi:10.1016/j.neuroimage.2010.09.074. PMCÂ 3008313. PMIDÂ 20933091.

^ Jump up to: a b Di Marco, Antonio; Navigli, Roberto (2013). "Clustering and Diversifying Web Search Results with Graph-Based Word Sense Induction". Computational Linguistics. 39 (3): 709â754. doi:10.1162/COLI_a_00148. S2CIDÂ 1775181.

^ Bewley, A., & Upcroft, B. (2013). Advantages of Exploiting Projection Structure for Segmenting Dense 3D Point Clouds. In Australian Conference on Robotics and Automation [1]

^ Bewley, A.;  etÂ al. "Real-time volume estimation of a dragline payload". IEEE International Conference on Robotics and Automation. 2011: 1571â1576.

^ Basak, S.C.; Magnuson, V.R.; Niemi, C.J.; Regal, R.R. (1988). "Determining Structural Similarity of Chemicals Using Graph Theoretic Indices". Discr. Appl. Math. 19 (1â3): 17â44. doi:10.1016/0166-218x(88)90004-2.

^ Huth, R.;  etÂ al. (2008). "Classifications of Atmospheric Circulation Patterns: Recent Advances and Applications". Ann. N.Y. Acad. Sci. 1146: 105â152. Bibcode:2008NYASA1146..105H. doi:10.1196/annals.1446.019. PMIDÂ 19076414. S2CIDÂ 22655306.

^ Arnott, Robert D. (1980-11-01). "Cluster Analysis and Stock Price Comovement". Financial Analysts Journal. 36 (6): 56â62. doi:10.2469/faj.v36.n6.56. ISSNÂ 0015-198X.



.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteDifferentiable computingGeneral
Differentiable programming
Neural Turing machine
Differentiable neural computer
Automatic differentiation
Neuromorphic engineering
Cable theory
Pattern recognition
Computational learning theory
Tensor calculus
Concepts
Gradient descent
SGD
Clustering
Regression
Overfitting
Adversary
Attention
Convolution
Loss functions
Backpropagation
Normalization
Activation
Softmax
Sigmoid
Rectifier
Regularization
Datasets
Augmentation
Programming languages
Python
Julia
Application
Machine learning
Artificial neural network
Deep learning
Scientific computing
Artificial Intelligence
Hardware
IPU
TPU
VPU
Memristor
SpiNNaker
Software library
TensorFlow
PyTorch
Keras
Theano
ImplementationAudio-visual
AlexNet
WaveNet
Human image synthesis
HWR
OCR
Speech synthesis
Speech recognition
Facial recognition
AlphaFold
DALL-E
Verbal
Word2vec
Transformer
BERT
NMT
Project Debater
Watson
GPT-2
GPT-3
Decisional
AlphaGo
AlphaZero
Q-learning
SARSA
OpenAI Five
Self-driving car
MuZero
Action selection
Robot control
People
Alex Graves
Ian Goodfellow
Yoshua Bengio
Geoffrey Hinton
Yann LeCun
Andrew Ng
Demis Hassabis
David Silver
Fei-Fei Li
Organizations
DeepMind
OpenAI
MIT CSAIL
Mila
Google Brain
FAIR

 Portals
Computer programming
Technology
 Category
Artificial neural networks
Machine learning

hidevteStatistics
Outline
Index
showDescriptive statisticsContinuous dataCenter
Mean
arithmetic
geometric
harmonic
cubic
generalized/power
Median
Mode
Dispersion
Variance
Standard deviation
Average absolute deviation
Coefficient of variation
Percentile
Range
Interquartile range
Shape
Central limit theorem
Moments
Skewness
Kurtosis
L-moments
Count data
Index of dispersion
Summary tables
Grouped data
Frequency distribution
Contingency table
Dependence
Pearson product-moment correlation
Rank correlation
Spearman's Ï
Kendall's Ï
Partial correlation
Scatter plot
Graphics
Bar chart
Biplot
Box plot
Control chart
Correlogram
Fan chart
Forest plot
Histogram
Pie chart
QâQ plot
Run chart
Scatter plot
Stem-and-leaf display
Radar chart
Violin plot
showData collectionStudy design
Population
Statistic
Effect size
Statistical power
Optimal design
Sample size determination
Replication
Missing data
Survey methodology
Sampling
stratified
cluster
Standard error
Opinion poll
Questionnaire
Controlled experiments
Scientific control
Randomized experiment
Randomized controlled trial
Random assignment
Blocking
Interaction
Factorial experiment
Adaptive Designs
Adaptive clinical trial
Up-and-Down Designs
Stochastic approximation
Observational Studies
Cross-sectional study
Cohort study
Natural experiment
Quasi-experiment
showStatistical inferenceStatistical theory
Population
Statistic
Probability distribution
Sampling distribution
Order statistic
Empirical distribution
Density estimation
Statistical model
Model specification
Lp space
Parameter
location
scale
shape
Parametric family
LikelihoodÂ (monotone)
Locationâscale family
Exponential family
Completeness
Sufficiency
Statistical functional
Bootstrap
U
V
Optimal decision
loss function
Efficiency
Statistical distance
divergence
Asymptotics
Robustness
Frequentist inferencePoint estimation
Estimating equations
Maximum likelihood
Method of moments
M-estimator
Minimum distance
Unbiased estimators
Mean-unbiased minimum-variance
RaoâBlackwellization
LehmannâScheffÃ© theorem
Median unbiased
Plug-in
Interval estimation
Confidence interval
Pivot
Likelihood interval
Prediction interval
Tolerance interval
Resampling
Bootstrap
Jackknife
Testing hypotheses
1- & 2-tails
Power
Uniformly most powerful test
Permutation test
Randomization test
Multiple comparisons
Parametric tests
Likelihood-ratio
Score/Lagrange multiplier
Wald
Specific tests
Z-test (normal)
Student's t-test
F-test
Goodness of fit
Chi-squared
G-test
KolmogorovâSmirnov
AndersonâDarling
Lilliefors
JarqueâBera
Normality (ShapiroâWilk)
Likelihood-ratio test
Model selection
Cross validation
AIC
BIC
Rank statistics
Sign
Sample median
Signed rank (Wilcoxon)
HodgesâLehmann estimator
Rank sum (MannâWhitney)
Nonparametric anova
1-way (KruskalâWallis)
2-way (Friedman)
Ordered alternative (JonckheereâTerpstra)
Bayesian inference
Bayesian probability
prior
posterior
Credible interval
Bayes factor
Bayesian estimator
Maximum posterior estimator
showCorrelationRegression analysisCorrelation
Pearson product-moment
Partial correlation
Confounding variable
Coefficient of determination
Regression analysis
Errors and residuals
Regression validation
Mixed effects models
Simultaneous equations models
Multivariate adaptive regression splines (MARS)
Linear regression
Simple linear regression
Ordinary least squares
General linear model
Bayesian regression
Non-standard predictors
Nonlinear regression
Nonparametric
Semiparametric
Isotonic
Robust
Heteroscedasticity
Homoscedasticity
Generalized linear model
Exponential families
Logistic (Bernoulli)Â / BinomialÂ / Poisson regressions
Partition of variance
Analysis of variance (ANOVA, anova)
Analysis of covariance
Multivariate ANOVA
Degrees of freedom
hideCategoricalÂ / MultivariateÂ / Time-seriesÂ / Survival analysisCategorical
Cohen's kappa
Contingency table
Graphical model
Log-linear model
McNemar's test
Cochran-Mantel-Haenszel statistics
Multivariate
Regression
Manova
Principal components
Canonical correlation
Discriminant analysis
Cluster analysis
Classification
Structural equation model
Factor analysis
Multivariate distributions
Elliptical distributions
Normal
Time-seriesGeneral
Decomposition
Trend
Stationarity
Seasonal adjustment
Exponential smoothing
Cointegration
Structural break
Granger causality
Specific tests
DickeyâFuller
Johansen
Q-statistic (LjungâBox)
DurbinâWatson
BreuschâGodfrey
Time domain
Autocorrelation (ACF)
partial (PACF)
Cross-correlation (XCF)
ARMA model
ARIMA model (BoxâJenkins)
Autoregressive conditional heteroskedasticity (ARCH)
Vector autoregression (VAR)
Frequency domain
Spectral density estimation
Fourier analysis
Wavelet
Whittle likelihood
SurvivalSurvival function
KaplanâMeier estimator (product limit)
Proportional hazards models
Accelerated failure time (AFT) model
First hitting time
Hazard function
NelsonâAalen estimator
Test
Log-rank test
showApplicationsBiostatistics
Bioinformatics
Clinical trialsÂ / studies
Epidemiology
Medical statistics
Engineering statistics
Chemometrics
Methods engineering
Probabilistic design
ProcessÂ / quality control
Reliability
System identification
Social statistics
Actuarial science
Census
Crime statistics
Demography
Econometrics
Jurimetrics
National accounts
Official statistics
Population statistics
Psychometrics
Spatial statistics
Cartography
Environmental statistics
Geographic information system
Geostatistics
Kriging

Category
Â Mathematics portal
Commons
 WikiProject





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Cluster_analysis&oldid=1065378878"
		Categories: Cluster analysisData miningGeostatisticsHidden categories: CS1 errors: external linksCS1: long volume valueWebarchive template wayback linksCS1 errors: generic nameCS1 maint: multiple names: authors listCS1 errors: missing periodicalArticles with short descriptionShort description is different from WikidataAll articles with unsourced statementsArticles with unsourced statements from March 2016Articles with unsourced statements from March 2021Articles with unsourced statements from May 2018Articles needing additional references from November 2016All articles needing additional referencesArticles with unsourced statements from July 2018Commons category link is on Wikidata
	
