
Title:
Quantum algorithm
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Algorithms run on quantum computers, typically relying on superposition and/or entanglement


In quantum computing, a quantum algorithm is an algorithm which runs on a realistic model of quantum computation, the most commonly used model being the quantum circuit model of computation.[1][2] A classical (or non-quantum) algorithm is a finite sequence of instructions, or a step-by-step procedure for solving a problem, where each step or instruction can be performed on a classical computer. Similarly, a quantum algorithm is a step-by-step procedure, where each of the steps can be performed on a quantum computer. Although all classical algorithms can also be performed on a quantum computer,[3]:â126â  the term quantum algorithm is usually used for those algorithms which seem inherently quantum, or use some essential feature of quantum computation such as quantum superposition or quantum entanglement.
Problems which are undecidable using classical computers remain undecidable using quantum computers.[4]:â127â What makes quantum algorithms interesting is that they might be able to solve some problems faster than classical algorithms because the quantum superposition and quantum entanglement that quantum algorithms exploit probably cannot be efficiently simulated on classical computers (see Quantum supremacy).
The best-known algorithms are Shor's algorithm for factoring and Grover's algorithm for searching an unstructured database or an unordered list. Shor's algorithms runs much (almost exponentially) faster than the best-known classical algorithm for factoring, the general number field sieve.[5] Grover's algorithm runs quadratically faster than the best possible classical algorithm for the same task,[citation needed] a linear search.

Contents

1 Overview
2 Algorithms based on the quantum Fourier transform

2.1 DeutschâJozsa algorithm
2.2 BernsteinâVazirani algorithm
2.3 Simon's algorithm
2.4 Quantum phase estimation algorithm
2.5 Shor's algorithm
2.6 Hidden subgroup problem
2.7 Boson sampling problem
2.8 Estimating Gauss sums
2.9 Fourier fishing and Fourier checking


3 Algorithms based on amplitude amplification

3.1 Grover's algorithm
3.2 Quantum counting


4 Algorithms based on quantum walks

4.1 Element distinctness problem
4.2 Triangle-finding problem
4.3 Formula evaluation
4.4 Group commutativity


5 BQP-complete problems

5.1 Computing knot invariants
5.2 Quantum simulation
5.3 Solving a linear systems of equations


6 Hybrid quantum/classical algorithms

6.1 QAOA
6.2 Variational quantum eigensolver
6.3 Contracted quantum eigensolver


7 See also
8 References
9 External links

9.1 Surveys





Overview[edit]
Quantum algorithms are usually described, in the commonly used circuit model of quantum computation, by a quantum circuit which acts on some input qubits and terminates with a measurement. A quantum circuit consists of simple quantum gates which act on at most a fixed number of qubits. The number of qubits has to be fixed because a changing number of qubits implies non-unitary evolution. Quantum algorithms may also be stated in other models of quantum computation, such as the Hamiltonian oracle model.[6]
Quantum algorithms can be categorized by the main techniques used by the algorithm. Some commonly used techniques/ideas in quantum algorithms include phase kick-back, phase estimation, the quantum Fourier transform, quantum walks, amplitude amplification and topological quantum field theory. Quantum algorithms may also be grouped by the type of problem solved, for instance see the survey on quantum algorithms for algebraic problems.[7]

Algorithms based on the quantum Fourier transform[edit]
The quantum Fourier transform is the quantum analogue of the discrete Fourier transform, and is used in several quantum algorithms. The Hadamard transform is also an example of a quantum Fourier transform over an n-dimensional vector space over the field F2. The quantum Fourier transform can be efficiently implemented on a quantum computer using only a polynomial number of quantum gates.[citation needed]

DeutschâJozsa algorithm[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Main article: DeutschâJozsa algorithm
  Deutsch-Jozsa algorithm
The DeutschâJozsa algorithm solves a black-box problem which probably requires exponentially many queries to the black box for any deterministic classical computer, but can be done with exactly one query by a quantum computer. If we allow both bounded-error quantum and classical algorithms, then there is no speedup since a classical probabilistic algorithm can solve the problem with a constant number of queries with small probability of error. The algorithm determines whether a function f is either constant (0 on all inputs or 1 on all inputs) or balanced (returns 1 for half of the input domain and 0 for the other half).

BernsteinâVazirani algorithm[edit]
Main article: BernsteinâVazirani algorithm
The BernsteinâVazirani algorithm is the first quantum algorithm that solves a problem more efficiently than the best known classical algorithm. It was designed to create an oracle separation between BQP and BPP.

Simon's algorithm[edit]
Main article: Simon's algorithm
Simon's algorithm solves a black-box problem exponentially faster than any classical algorithm, including bounded-error probabilistic algorithms. This algorithm, which achieves an exponential speedup over all classical algorithms that we consider efficient, was the motivation for Shor's factoring algorithm.

Quantum phase estimation algorithm[edit]
Main article: Quantum phase estimation algorithm
The quantum phase estimation algorithm is used to determine the eigenphase of an eigenvector of a unitary gate given a quantum state proportional to the eigenvector and access to the gate.   The algorithm is frequently used as a subroutine in other algorithms.

Shor's algorithm[edit]
Main article: Shor's algorithm
Shor's algorithm solves the discrete logarithm problem and the integer factorization problem in polynomial time,[8] whereas the best known classical algorithms take super-polynomial time. These problems are not known to be in P or NP-complete. It is also one of the few quantum algorithms that solves a nonâblack-box problem in polynomial time where the best known classical algorithms run in super-polynomial time.

Hidden subgroup problem[edit]
The abelian hidden subgroup problem is a generalization of many problems that can be solved by a quantum computer, such as Simon's problem, solving Pell's equation, testing the principal ideal of a ring R and factoring. There are efficient quantum algorithms known for the Abelian hidden subgroup problem.[9] The more general hidden subgroup problem, where the group isn't necessarily abelian, is a generalization of the previously mentioned problems and graph isomorphism and certain lattice problems. Efficient quantum algorithms are known for certain non-abelian groups. However, no efficient algorithms are known for the symmetric group, which would give an efficient algorithm for graph isomorphism[10] and the dihedral group, which would solve certain lattice problems.[11]

Boson sampling problem[edit]
Main article: Boson sampling
The Boson Sampling Problem in an experimental configuration assumes[12] an input of bosons (ex. photons of light) of moderate number getting randomly scattered into a large number of output modes constrained by a defined unitarity. The problem is then to produce a fair sample of the probability distribution of the output which is dependent on the input arrangement of bosons and the Unitarity.[13] Solving this problem with a classical computer algorithm requires computing the permanent of the unitary transform matrix, which may be either impossible or take a prohibitively long time. In 2014, it was proposed[14] that existing technology and standard probabilistic methods of generating single photon states could be used as input into a suitable quantum computable linear optical network and that sampling of the output probability distribution would be demonstrably superior using quantum algorithms. In 2015, investigation predicted[15] the sampling problem had similar complexity for inputs other than Fock state photons and identified a transition in computational complexity from classically simulatable to just as hard as the Boson Sampling Problem, dependent on the size of coherent amplitude inputs.

Estimating Gauss sums[edit]
A Gauss sum is a type of exponential sum. The best known classical algorithm for estimating these sums takes exponential time. Since the discrete logarithm problem reduces to Gauss sum estimation, an efficient classical algorithm for estimating Gauss sums would imply an efficient classical algorithm for computing discrete logarithms, which is considered unlikely. However, quantum computers can estimate Gauss sums to polynomial precision in polynomial time.[16]

Fourier fishing and Fourier checking[edit]
We have an oracle consisting of n random Boolean functions mapping n-bit strings to a Boolean value. We are required to find n n-bit strings z1,..., zn such that for the Hadamard-Fourier transform, at least 3/4 of the strings satisfy


  
    
      
        
          |
        
        
          
            
              f
              ~
            
          
        
        (
        
          z
          
            i
          
        
        )
        
          |
        
        â©¾
        1
      
    
    {\displaystyle |{\tilde {f}}(z_{i})|\geqslant 1}
  

and at least 1/4 satisfies


  
    
      
        
          |
        
        
          
            
              f
              ~
            
          
        
        (
        
          z
          
            i
          
        
        )
        
          |
        
        â©¾
        2.
      
    
    {\displaystyle |{\tilde {f}}(z_{i})|\geqslant 2.}
  

This can be done in bounded-error quantum polynomial time (BQP).[17]

Algorithms based on amplitude amplification[edit]
Amplitude amplification is a technique that allows the amplification of a chosen subspace of a quantum state. Applications of amplitude amplification usually lead to quadratic speedups over the corresponding classical algorithms. It can be considered to be a generalization of Grover's algorithm.

Grover's algorithm[edit]
Main article: Grover's algorithm
Grover's algorithm searches an unstructured database (or an unordered list) with N entries, for a marked entry, using only 
  
    
      
        O
        (
        
          
            N
          
        
        )
      
    
    {\displaystyle O({\sqrt {N}})}
  
 queries instead of the 
  
    
      
        O
        (
        
          N
        
        )
      
    
    {\displaystyle O({N})}
  
 queries required classically.[18] Classically, 
  
    
      
        O
        (
        
          N
        
        )
      
    
    {\displaystyle O({N})}
  
 queries are required even allowing bounded-error probabilistic algorithms.
Theorists have considered a hypothetical generalization of a standard quantum computer that could access the histories of the hidden variables in Bohmian mechanics. (Such a computer is completely hypothetical and would not be a standard quantum computer, or even possible under the standard theory of quantum mechanics.) Such a hypothetical computer could implement a search of an N-item database at most in 
  
    
      
        O
        (
        
          
            N
            
              3
            
          
        
        )
      
    
    {\displaystyle O({\sqrt[{3}]{N}})}
  
 steps. This is slightly faster than the 
  
    
      
        O
        (
        
          
            N
          
        
        )
      
    
    {\displaystyle O({\sqrt {N}})}
  
 steps taken by Grover's algorithm. Neither search method would allow either model of quantum computer to solve NP-complete problems in polynomial time.[19]

Quantum counting[edit]
Quantum counting solves a generalization of the search problem. It solves the problem of counting the number of marked entries in an unordered list, instead of just detecting if one exists. Specifically, it counts the number of marked entries in an 
  
    
      
        N
      
    
    {\displaystyle N}
  
-element list, with error 
  
    
      
        Îµ
      
    
    {\displaystyle \varepsilon }
  
 making only 
  
    
      
        Î
        
          (
          
            
              
                1
                Îµ
              
            
            
              
                
                  N
                  k
                
              
            
          
          )
        
      
    
    {\displaystyle \Theta \left({\frac {1}{\varepsilon }}{\sqrt {\frac {N}{k}}}\right)}
  
 queries, where 
  
    
      
        k
      
    
    {\displaystyle k}
  
 is the number of marked elements in the list.[20][21] More precisely, the algorithm outputs an estimate 
  
    
      
        
          k
          â²
        
      
    
    {\displaystyle k'}
  
 for 
  
    
      
        k
      
    
    {\displaystyle k}
  
, the number of marked entries, with the following accuracy: 
  
    
      
        
          |
        
        k
        â
        
          k
          â²
        
        
          |
        
        â¤
        Îµ
        k
      
    
    {\displaystyle |k-k'|\leq \varepsilon k}
  
.

Algorithms based on quantum walks[edit]
Main article: Quantum walk
A quantum walk is the quantum analogue of a classical random walk, which can be described by a probability distribution over some states. A quantum walk can be described by a quantum superposition over states. Quantum walks are known to give exponential speedups for some black-box problems.[22][23] They also provide polynomial speedups for many problems. A framework for the creation of quantum walk algorithms exists and is quite a versatile tool.[24]

Element distinctness problem[edit]
Main article: Element distinctness problem
The element distinctness problem is the problem of determining whether all the elements of a list are distinct. Classically, Î©(N) queries are required for a list of size N. However, it can be solved in 
  
    
      
        Î
        (
        
          N
          
            2
            
              /
            
            3
          
        
        )
      
    
    {\displaystyle \Theta (N^{2/3})}
  
 queries on a quantum computer. The optimal algorithm is by Andris Ambainis.[25] Yaoyun Shi first proved a tight lower bound when the size of the range is sufficiently large.[26] Ambainis[27] and Kutin[28] independently (and via different proofs) extended his work to obtain the lower bound for all functions.

Triangle-finding problem[edit]
Main article: Triangle finding problem
The triangle-finding problem is the problem of determining whether a given graph contains a triangle (a clique of size 3). The best-known lower bound for quantum algorithms is Î©(N), but the best algorithm known requires O(N1.297) queries,[29] an improvement over the previous best O(N1.3) queries.[24][30]

Formula evaluation[edit]
A formula is a tree with a gate at each internal node and an input bit at each leaf node. The problem is to evaluate the formula, which is the output of the root node, given oracle access to the input.
A well studied formula is the balanced binary tree with only NAND gates.[31] This type of formula requires Î(Nc) queries using randomness,[32] where 
  
    
      
        c
        =
        
          log
          
            2
          
        
        â¡
        (
        1
        +
        
          
            33
          
        
        )
        
          /
        
        4
        â
        0.754
      
    
    {\displaystyle c=\log _{2}(1+{\sqrt {33}})/4\approx 0.754}
  
. With a quantum algorithm however, it can be solved in Î(N0.5) queries. No better quantum algorithm for this case was known until one was found for the unconventional Hamiltonian oracle model.[6] The same result for the standard setting soon followed.[33]
Fast quantum algorithms for more complicated formulas are also known.[34]

Group commutativity[edit]
The problem is to determine if a black box group, given by k generators, is commutative. A black box group is a group with an oracle function, which must be used to perform the group operations (multiplication, inversion, and comparison with identity). We are interested in the query complexity, which is the number of oracle calls needed to solve the problem. The deterministic and randomized query complexities are 
  
    
      
        Î
        (
        
          k
          
            2
          
        
        )
      
    
    {\displaystyle \Theta (k^{2})}
  
 and 
  
    
      
        Î
        (
        k
        )
      
    
    {\displaystyle \Theta (k)}
  
 respectively.[35] A quantum algorithm requires 
  
    
      
        Î©
        (
        
          k
          
            2
            
              /
            
            3
          
        
        )
      
    
    {\displaystyle \Omega (k^{2/3})}
  
 queries but the best known algorithm uses 
  
    
      
        O
        (
        
          k
          
            2
            
              /
            
            3
          
        
        log
        â¡
        k
        )
      
    
    {\displaystyle O(k^{2/3}\log k)}
  
 queries.[36]

BQP-complete problems[edit]
The complexity class BQP (bounded-error quantum polynomial time) is the set of decision problems solvable by a quantum computer in polynomial time with error probability of at most 1/3 for all instances.[37] It is the quantum analogue to the classical complexity class BPP.
A problem is BQP-complete if it is in BQP and any problem in BQP can be reduced to it in polynomial time. Informally, the class of BQP-complete problems are those that are as hard as the hardest problems in BQP and are themselves efficiently solvable by a quantum computer (with bounded error).

Computing knot invariants[edit]
Witten had shown that the Chern-Simons topological quantum field theory (TQFT) can be solved in terms of Jones polynomials. A quantum computer can simulate a TQFT, and thereby approximate the Jones polynomial,[38] which as far as we know, is hard to compute classically in the worst-case scenario.[citation needed]

Quantum simulation[edit]
The idea that quantum computers might be more powerful than classical computers originated in Richard Feynman's observation that classical computers seem to require exponential time to simulate many-particle quantum systems.[39] Since then, the idea that quantum computers can simulate quantum physical processes exponentially faster than classical computers has been greatly fleshed out and elaborated. Efficient (that is, polynomial-time) quantum algorithms have been developed for simulating both Bosonic and Fermionic systems[40] and in particular, the simulation of chemical reactions beyond the capabilities of current classical supercomputers requires only a few hundred qubits.[41] Quantum computers can also efficiently simulate topological quantum field theories.[42] In addition to its intrinsic interest, this result has led to efficient quantum algorithms for estimating quantum topological invariants such as Jones[43] and HOMFLY polynomials,[44] and the Turaev-Viro invariant of three-dimensional manifolds.[45]

Solving a linear systems of equations[edit]
Main article: Quantum algorithm for linear systems of equations
In 2009 Aram Harrow, Avinatan Hassidim, and Seth Lloyd, formulated a quantum algorithm for solving linear systems. The algorithm estimates the result of a scalar measurement on the solution vector to a given linear system of equations.[46]
Provided the linear system is a sparse and has a low condition number 
  
    
      
        Îº
      
    
    {\displaystyle \kappa }
  
, and that the user is interested in the result of a scalar measurement on the solution vector, instead of the values of the solution vector itself, then the algorithm has a runtime of 
  
    
      
        O
        (
        log
        â¡
        (
        N
        )
        
          Îº
          
            2
          
        
        )
      
    
    {\displaystyle O(\log(N)\kappa ^{2})}
  
, where 
  
    
      
        N
      
    
    {\displaystyle N}
  
 is the number of variables in the linear system. This offers an exponential speedup over the fastest classical algorithm, which runs in 
  
    
      
        O
        (
        N
        Îº
        )
      
    
    {\displaystyle O(N\kappa )}
  
 (or 
  
    
      
        O
        (
        N
        
          
            Îº
          
        
        )
      
    
    {\displaystyle O(N{\sqrt {\kappa }})}
  
 for positive semidefinite matrices).

Hybrid quantum/classical algorithms[edit]
Hybrid Quantum/Classical Algorithms combine quantum state preparation and measurement with classical optimization.[47] These algorithms generally aim to determine the ground state eigenvector and eigenvalue of a Hermitian Operator.

QAOA[edit]
The quantum approximate optimization algorithm is a toy model of quantum annealing which can be used to solve problems in graph theory.[48] The algorithm makes use of classical optimization of quantum operations to maximize an objective function.

Variational quantum eigensolver[edit]
The VQE algorithm applies classical optimization to minimize the energy expectation of an ansatz state to find the ground state energy of a molecule.[49] This can also be extended to find excited energies of molecules.[50]

Contracted quantum eigensolver[edit]
The CQE algorithm minimizes the residual of a contraction (or projection) of the SchrÃ¶dinger equation onto the space of two (or more) electrons to find the ground- or excited-state energy and two-electron reduced density matrix of a molecule.[51]  It is based on classical methods for solving energies and two-electron reduced density matrices directly from the anti-Hermitian contracted SchrÃ¶dinger equation.[52]

See also[edit]
Quantum machine learning
Quantum optimization algorithms
Quantum sort
Primality test
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Nielsen, Michael A.; Chuang, Isaac L. (2000). Quantum Computation and Quantum Information. Cambridge University Press. ISBNÂ 978-0-521-63503-5.

^ Mosca, M. (2008). "Quantum Algorithms". arXiv:0808.0369 [quant-ph].

^ Lanzagorta, Marco; Uhlmann, Jeffrey K. (1 January 2009). Quantum Computer Science. Morgan & Claypool Publishers. ISBNÂ 9781598297324.

^ Nielsen, Michael A.; Chuang, Isaac L. (2010). Quantum Computation and Quantum Information (2ndÂ ed.). Cambridge: Cambridge University Press. ISBNÂ 978-1-107-00217-3.

^ "Shor's algorithm".

^ Jump up to: a b Farhi, E.; Goldstone, J.; Gutmann, S. (2007). "A Quantum Algorithm for the Hamiltonian NAND Tree". arXiv:quant-ph/0702144.

^ Childs, Andrew M.; van Dam, W. (2010). "Quantum algorithms for algebraic problems". Reviews of Modern Physics. 82 (1): 1â52. arXiv:0812.0380. Bibcode:2010RvMP...82....1C. doi:10.1103/RevModPhys.82.1. S2CIDÂ 119261679.

^ 
Shor, P. W. (1997). "Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer". SIAM Journal on Scientific and Statistical Computing. 26 (5): 1484â1509. arXiv:quant-ph/9508027. Bibcode:1995quant.ph..8027S. doi:10.1137/s0097539795293172. S2CIDÂ 2337707.

^ Boneh, D.; Lipton, R. J. (1995). "Quantum cryptoanalysis of hidden linear functions".  In Coppersmith, D. (ed.). Proceedings of the 15th Annual International Cryptology Conference on Advances in Cryptology. Springer-Verlag. pp.Â 424â437. ISBNÂ 3-540-60221-6.

^ Moore, C.; Russell, A.; Schulman, L. J. (2005). "The Symmetric Group Defies Strong Fourier Sampling: Part I". arXiv:quant-ph/0501056.

^ Regev, O. (2003). "Quantum Computation and Lattice Problems". arXiv:cs/0304005.

^ Ralph, T.C. (July 2013). "Figure 1: The boson-sampling problem". Nature Photonics. Nature. 7 (7): 514â515. doi:10.1038/nphoton.2013.175. Retrieved 12 September 2014.

^ Lund, A.P.; Laing, A.; Rahimi-Keshari, S.; Rudolph, T.; O'Brien, J.L.; Ralph, T.C. (5 September 2014). "Boson Sampling from Gaussian States". Phys. Rev. Lett. 113 (10): 100502. arXiv:1305.4346. Bibcode:2014PhRvL.113j0502L. doi:10.1103/PhysRevLett.113.100502. PMIDÂ 25238340. S2CIDÂ 27742471.

^ "The quantum revolution is a step closer". Phys.org. Omicron Technology Limited. Retrieved 12 September 2014.

^ Seshadreesan, Kaushik P.; Olson, Jonathan P.; Motes, Keith R.; Rohde, Peter P.; Dowling, Jonathan P. (2015). "Boson sampling with displaced single-photon Fock states versus single-photon-added coherent states: The quantum-classical divide and computational-complexity transitions in linear optics". Physical Review A. 91 (2): 022334. arXiv:1402.0531. Bibcode:2015PhRvA..91b2334S. doi:10.1103/PhysRevA.91.022334. S2CIDÂ 55455992.

^ 
van Dam, W.; Seroussi, G. (2002). "Efficient Quantum Algorithms for Estimating Gauss Sums". arXiv:quant-ph/0207131.

^ 
Aaronson, S. (2009). "BQP and the Polynomial Hierarchy". arXiv:0910.4698 [quant-ph].

^ 
Grover, Lov K. (1996). "A fast quantum mechanical algorithm for database search". arXiv:quant-ph/9605043.

^ Aaronson, Scott. "Quantum Computing and Hidden Variables" (PDF).

^ 
Brassard, G.; Hoyer, P.; Tapp, A. (1998). Quantum Counting. Lecture Notes in Computer Science. Vol.Â 1443. pp.Â 820â831. arXiv:quant-ph/9805082. doi:10.1007/BFb0055105. ISBNÂ 978-3-540-64781-2. S2CIDÂ 14147978.

^ 
Brassard, G.; Hoyer, P.; Mosca, M.; Tapp, A. (2002). "Quantum Amplitude Amplification and Estimation".  In Samuel J. Lomonaco, Jr. (ed.). Quantum Computation and Quantum Information. AMS Contemporary Mathematics. Vol.Â 305. pp.Â 53â74. arXiv:quant-ph/0005055. Bibcode:2000quant.ph..5055B. doi:10.1090/conm/305/05215. ISBNÂ 9780821821404. S2CIDÂ 54753.

^ 
Childs, A. M.; Cleve, R.; Deotto, E.; Farhi, E.; Gutmann, S.; Spielman, D. A. (2003). "Exponential algorithmic speedup by quantum walk". Proceedings of the 35th Symposium on Theory of Computing. Association for Computing Machinery. pp.Â 59â68. arXiv:quant-ph/0209131. doi:10.1145/780542.780552. ISBNÂ 1-58113-674-9.

^ 
Childs, A. M.; Schulman, L. J.; Vazirani, U. V. (2007). "Quantum Algorithms for Hidden Nonlinear Structures". Proceedings of the 48th Annual IEEE Symposium on Foundations of Computer Science. IEEE. pp.Â 395â404. arXiv:0705.2784. doi:10.1109/FOCS.2007.18. ISBNÂ 978-0-7695-3010-9.

^ Jump up to: a b 
Magniez, F.; Nayak, A.; Roland, J.; Santha, M. (2007). "Search via quantum walk". Proceedings of the 39th Annual ACM Symposium on Theory of Computing. Association for Computing Machinery. pp.Â 575â584. arXiv:quant-ph/0608026. doi:10.1145/1250790.1250874. ISBNÂ 978-1-59593-631-8.

^ 
Ambainis, A. (2007). "Quantum Walk Algorithm for Element Distinctness". SIAM Journal on Computing. 37 (1): 210â239. arXiv:quant-ph/0311001. doi:10.1137/S0097539705447311. S2CIDÂ 6581885.

^ 
Shi, Y. (2002). Quantum lower bounds for the collision and the element distinctness problems. Proceedings of the 43rd Symposium on Foundations of Computer Science. pp.Â 513â519. arXiv:quant-ph/0112086. doi:10.1109/SFCS.2002.1181975.

^ 
Ambainis, A. (2005). "Polynomial Degree and Lower Bounds in Quantum Complexity: Collision and Element Distinctness with Small Range". Theory of Computing. 1 (1): 37â46. doi:10.4086/toc.2005.v001a003.

^ 
Kutin, S. (2005). "Quantum Lower Bound for the Collision Problem with Small Range". Theory of Computing. 1 (1): 29â36. doi:10.4086/toc.2005.v001a002.

^ Aleksandrs Belovs (2011). "Span Programs for Functions with Constant-Sized 1-certificates". arXiv:1105.4024 [quant-ph].

^ 
Magniez, F.; Santha, M.; Szegedy, M. (2007). "Quantum Algorithms for the Triangle Problem". SIAM Journal on Computing. 37 (2): 413â424. arXiv:quant-ph/0310134. doi:10.1137/050643684. S2CIDÂ 594494.

^ 
Aaronson, S. (3 February 2007). "NAND now for something completely different". Shtetl-Optimized. Retrieved 17 December 2009.

^ 
Saks, M.E.; Wigderson, A. (1986). "Probabilistic Boolean Decision Trees and the Complexity of Evaluating Game Trees" (PDF). Proceedings of the 27th Annual Symposium on Foundations of Computer Science. IEEE. pp.Â 29â38. doi:10.1109/SFCS.1986.44. ISBNÂ 0-8186-0740-8.

^ 
Ambainis, A. (2007). "A nearly optimal discrete query quantum algorithm for evaluating NAND formulas". arXiv:0704.3628 [quant-ph].

^ 
Reichardt, B. W.; Spalek, R. (2008). "Span-program-based quantum algorithm for evaluating formulas". Proceedings of the 40th Annual ACM symposium on Theory of Computing. Association for Computing Machinery. pp.Â 103â112. arXiv:0710.2630. doi:10.1145/1374376.1374394. ISBNÂ 978-1-60558-047-0.

^ 
Pak, Igor (2012). "Testing commutativity of a group and the power of randomization". LMS Journal of Computation and Mathematics. 15: 38â43. doi:10.1112/S1461157012000046.

^ 
Magniez, F.; Nayak, A. (2007). "Quantum Complexity of Testing Group Commutativity". Algorithmica. 48 (3): 221â232. arXiv:quant-ph/0506265. doi:10.1007/s00453-007-0057-8. S2CIDÂ 3163328.

^ Michael Nielsen and Isaac Chuang (2000). Quantum Computation and Quantum Information. Cambridge: Cambridge University Press. ISBNÂ 0-521-63503-9.

^ 
Aharonov, D.; Jones, V.; Landau, Z. (2006). "A polynomial quantum algorithm for approximating the Jones polynomial". Proceedings of the 38th Annual ACM symposium on Theory of Computing. Association for Computing Machinery. pp.Â 427â436. arXiv:quant-ph/0511096. doi:10.1145/1132516.1132579.

^ 
Feynman, R. P. (1982). "Simulating physics with computers". International Journal of Theoretical Physics. 21 (6â7): 467â488. Bibcode:1982IJTP...21..467F. CiteSeerXÂ 10.1.1.45.9310. doi:10.1007/BF02650179. S2CIDÂ 124545445.

^ 
Abrams, D. S.; Lloyd, S. (1997). "Simulation of many-body Fermi systems on a universal quantum computer". Physical Review Letters. 79 (13): 2586â2589. arXiv:quant-ph/9703054. Bibcode:1997PhRvL..79.2586A. doi:10.1103/PhysRevLett.79.2586. S2CIDÂ 18231521.

^ 
Kassal, I.; Jordan, S. P.; Love, P. J.; Mohseni, M.; Aspuru-Guzik, A. (2008). "Polynomial-time quantum algorithm for the simulation of chemical dynamics". Proceedings of the National Academy of Sciences of the United States of America. 105 (48): 18681â86. arXiv:0801.2986. Bibcode:2008PNAS..10518681K. doi:10.1073/pnas.0808245105. PMCÂ 2596249. PMIDÂ 19033207.

^ 
Freedman, M.; Kitaev, A.; Wang, Z. (2002). "Simulation of Topological Field Theories by Quantum Computers". Communications in Mathematical Physics. 227 (3): 587â603. arXiv:quant-ph/0001071. Bibcode:2002CMaPh.227..587F. doi:10.1007/s002200200635. S2CIDÂ 449219.

^ 
Aharonov, D.; Jones, V.; Landau, Z. (2009). "A polynomial quantum algorithm for approximating the Jones polynomial". Algorithmica. 55 (3): 395â421. arXiv:quant-ph/0511096. doi:10.1007/s00453-008-9168-0. S2CIDÂ 7058660.

^ 
Wocjan, P.; Yard, J. (2008). "The Jones polynomial: quantum algorithms and applications in quantum complexity theory". Quantum Information and Computation. 8 (1): 147â180. arXiv:quant-ph/0603069. Bibcode:2006quant.ph..3069W. doi:10.26421/QIC8.1-2-10. S2CIDÂ 14494227.

^ 
Alagic, G.; Jordan, S.P.; KÃ¶nig, R.; Reichardt, B. W. (2010). "Approximating Turaev-Viro 3-manifold invariants is universal for quantum computation". Physical Review A. 82 (4): 040302. arXiv:1003.0923. Bibcode:2010PhRvA..82d0302A. doi:10.1103/PhysRevA.82.040302. S2CIDÂ 28281402.

^ Harrow, Aram W; Hassidim, Avinatan; Lloyd, Seth (2008). "Quantum algorithm for solving linear systems of equations". Physical Review Letters. 103 (15): 150502. arXiv:0811.3171. Bibcode:2009PhRvL.103o0502H. doi:10.1103/PhysRevLett.103.150502. PMIDÂ 19905613. S2CIDÂ 5187993.

^ Moll, Nikolaj; Barkoutsos, Panagiotis; Bishop, Lev S.; Chow, Jerry M.; Cross, Andrew; Egger, Daniel J.; Filipp, Stefan; Fuhrer, Andreas; Gambetta, Jay M.; Ganzhorn, Marc; Kandala, Abhinav; Mezzacapo, Antonio; MÃ¼ller, Peter; Riess, Walter; Salis, Gian; Smolin, John; Tavernelli, Ivano; Temme, Kristan (2018). "Quantum optimization using variational algorithms on near-term quantum devices". Quantum Science and Technology. 3 (3): 030503. arXiv:1710.01022. Bibcode:2018QS&T....3c0503M. doi:10.1088/2058-9565/aab822. S2CIDÂ 56376912.

^ Farhi, Edward; Goldstone, Jeffrey; Gutmann, Sam (14 November 2014). "A Quantum Approximate Optimization Algorithm". arXiv:1411.4028 [quant-ph].

^ Peruzzo, Alberto; McClean, Jarrod; Shadbolt, Peter; Yung, Man-Hong; Zhou, Xiao-Qi; Love, Peter J.; Aspuru-Guzik, AlÃ¡n; OâBrien, Jeremy L. (23 July 2014). "A variational eigenvalue solver on a photonic quantum processor". Nature Communications. 5 (1): 4213. arXiv:1304.3061. Bibcode:2014NatCo...5E4213P. doi:10.1038/ncomms5213. ISSNÂ 2041-1723. PMCÂ 4124861. PMIDÂ 25055053.

^ Higgott, Oscar; Wang, Daochen; Brierley, Stephen (2019). "Variational Quantum Computation of Excited States". Quantum. 3: 156. arXiv:1805.08138. doi:10.22331/q-2019-07-01-156. S2CIDÂ 119185497.

^ Smart, Scott; Mazziotti, David (18 February 2021). "Quantum Solver of Contracted Eigenvalue Equations for Scalable Molecular Simulations on Quantum Computing Devices". Phys. Rev. Lett. 125 (7): 070504. arXiv:2004.11416. Bibcode:2021PhRvL.126g0504S. doi:10.1103/PhysRevLett.126.070504. PMIDÂ 33666467. S2CIDÂ 216144443.

^ Mazziotti, David (6 October 2006). "Anti-Hermitian Contracted SchrÃ¶dinger Equation: Direct Determination of the Two-Electron Reduced Density Matrices of Many-Electron Molecules". Phys. Rev. Lett. 97 (14): 143002. Bibcode:2006PhRvL..97n3002M. doi:10.1103/PhysRevLett.97.143002. PMIDÂ 17155245.


External links[edit]
The Quantum Algorithm Zoo: A comprehensive list of quantum algorithms that provide a speedup over the fastest known classical algorithms.
Andrew Childs' lecture notes on quantum algorithms
The Quantum search algorithm - brute force.
Surveys[edit]
Smith, J.; Mosca, M. (2012). "Algorithms for Quantum Computers". Handbook of Natural Computing. p.Â 1451. doi:10.1007/978-3-540-92910-9_43. ISBNÂ 978-3-540-92909-3. S2CIDÂ 16565723.
Childs, A. M.; Van Dam, W. (2010). "Quantum algorithms for algebraic problems". Reviews of Modern Physics. 82 (1): 1â52. arXiv:0812.0380. Bibcode:2010RvMP...82....1C. doi:10.1103/RevModPhys.82.1. S2CIDÂ 119261679.
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteQuantum information scienceGeneral
DiVincenzo's criteria
NISQ era
Quantum computing
Timeline
Cloud-based
Quantum information
Quantum programming
Qubit
physical vs. logical
Quantum processors
Theorems
Bell's
Gleason's
GottesmanâKnill
Holevo's
MargolusâLevitin
No-broadcast
No-cloning
No-communication
No-deleting
No-hiding
No-teleportation
PBR
Quantum threshold
SolovayâKitaev
Quantumcommunication
Classical capacity
entanglement-assisted
Quantum capacity
Entanglement distillation
LOCC
Quantum channel
Quantum network
Quantum cryptography
Quantum key distribution
BB84
SARG04
Three-stage quantum cryptography protocol
Quantum Secret Sharing
Quantum teleportation
Superdense coding
Quantum algorithms
BernsteinâVazirani
DeutschâJozsa
Grover's
Quantum counting
Quantum phase estimation
Shor's
Simon's
Amplitude amplification
Linear systems of equations
Quantum annealing
Quantum Fourier transform
Quantum neural network
Universal quantum simulator
Quantumcomplexity theory
BQP
EQP
QIP
QMA
PostBQP
Quantumcomputing models
Adiabatic quantum computation
Differentiable quantum computing
One-way quantum computer
cluster state
Quantum circuit
Quantum logic gate
Quantum Turing machine
Topological quantum computer
Quantumerror correction
Codes
CSS
Quantum convolutional
stabilizer
Shor
Steane
Toric
gnu
Entanglement-assisted quantum error correction
PhysicalimplementationsQuantum optics
Boson sampling
Cavity QED
Circuit QED
Linear optical quantum computing
KLM protocol
Ultracold atoms
Optical lattice
Trapped ion quantum computer
Spin-based
Kane QC
Spin qubit QC
Nitrogen-vacancy center
Nuclear magnetic resonance QC
Superconductingquantum computing
Charge qubit
Flux qubit
Phase qubit
Transmon
Quantumprogramming
OpenQASM-Qiskit-IBM QX
Quil-Forest/Rigetti QCS
Cirq
Q#
libquantum
many others...
 Quantum mechanics topics
showvteQuantum mechanicsBackground
Introduction
History
Timeline
Classical mechanics
Old quantum theory
Glossary
Fundamentals
Born rule
Braâket notation
 Complementarity
Density matrix
Energy level
Ground state
Excited state
Degenerate levels
Zero-point energy
Entanglement
Hamiltonian
Interference
Decoherence
Measurement
Nonlocality
Quantum state
Superposition
Tunnelling
Scattering theory
Symmetry in quantum mechanics
Uncertainty
Wave function
Collapse
Waveâparticle duality
Formulations
Formulations
Heisenberg
Interaction
Matrix mechanics
SchrÃ¶dinger
Path integral formulation
Phase space
Equations
Dirac
KleinâGordon
Pauli
Rydberg
SchrÃ¶dinger
Interpretations
Interpretations
Bayesian
Consistent histories
Copenhagen
de BroglieâBohm
Ensemble
Hidden-variable
Local
Many-worlds
Objective collapse
Quantum logic
Relational
Transactional
Van Neumann-Wigner
Experiments
Bell's inequality
DavissonâGermer
Delayed-choice quantum eraser
Double-slit
FranckâHertz
MachâZehnder interferometer
ElitzurâVaidman
Popper
Quantum eraser
SternâGerlach
Wheeler's delayed choice
Science
Quantum biology
Quantum chemistry
Quantum chaos
Quantum cosmology
Quantum differential calculus
Quantum dynamics
Quantum geometry
Quantum measurement problem
Quantum stochastic calculus
Quantum spacetime
Technology
Quantum algorithms
Quantum amplifier
Quantum bus
Quantum cellular automata
Quantum finite automata
Quantum channel
Quantum circuit
Quantum complexity theory
Quantum computing
Timeline
Quantum cryptography
Quantum electronics
Quantum error correction
Quantum imaging
Quantum image processing
Quantum information
Quantum key distribution
Quantum logic
Quantum logic gates
Quantum machine
Quantum machine learning
Quantum metamaterial
Quantum metrology
Quantum network
Quantum neural network
Quantum optics
Quantum programming
Quantum sensing
Quantum simulator
Quantum teleportation
Extensions
Casimir effect
Quantum statistical mechanics
Quantum field theory
History
Quantum gravity
Relativistic quantum mechanics

 Category
 Physics portal
 Commons

showvteEmerging technologiesFieldsQuantum
algorithms
amplifier
bus
cellular automata
channel
circuit
complexity theory
computing
clock
cryptography
post-quantum
dynamics
electronics
error correction
finite automata
image processing
imaging
information
key distribution
logic
logic gates
machine
machine learning
metamaterial
network
neural network
optics
programming
sensing
simulator
teleportation
Other
Anti-gravity
Acoustic levitation
Cloak of invisibility
Digital scent technology
Force field
Plasma window
Immersive virtual reality
Magnetic refrigeration
Phased-array optics
Thermoacoustic heat engine

 Category
 List





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Quantum_algorithm&oldid=1068864959"
		Categories: Quantum computingQuantum information scienceTheoretical computer scienceQuantum algorithmsEmerging technologiesHidden categories: Articles with short descriptionShort description matches WikidataUse American English from January 2019All Wikipedia articles written in American EnglishUse dmy dates from December 2020All articles with unsourced statementsArticles with unsourced statements from February 2018Articles with unsourced statements from December 2014
	
