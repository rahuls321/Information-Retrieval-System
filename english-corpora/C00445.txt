
Title:
Run-length encoding
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Not to be confused with run-length limited.
Run-length encoding (RLE) is a form of lossless data compression in which runs of data (sequences in which the same data value occurs in many consecutive data elements) are stored as a single data value and count, rather than as the original run.  This is most efficient on data that contains many such runs, for example, simple graphic images such as icons, line drawings, Conway's Game of Life, and animations. For files that do not have many runs, RLE could increase the file size. 
RLE may also be used to refer to an early graphics file format supported by CompuServe for compressing black and white images, but was widely supplanted by their later Graphics Interchange Format (GIF). RLE also refers to a little-used image format in Windows 3.x, with the extension rle, which is a run-length encoded bitmap, used to compress the Windows 3.x startup screen.

Contents

1 Example
2 History and applications
3 See also
4 References
5 External links



Example[edit]
Consider a screen containing plain black text on a solid white background, over hypothetical scan line, it can be rendered as follows:

 12W1B12W3B24W1B14W 
This can be interpreted as a sequence of twelve Ws, one B, twelve Ws, three Bs, etc., and represents the original 67 characters in only 18.  While the actual format used for the storage of images is generally binary rather than ASCII characters like this, the principle remains the same.  Even binary data files can be compressed with this method; file format specifications often dictate repeated bytes in files as padding space.  However, newer compression methods such as DEFLATE often use LZ77-based algorithms, a generalization of run-length encoding that can take advantage of runs of strings of characters (such as BWWBWWBWWBWW).
Run-length encoding can be expressed in multiple ways to accommodate data properties as well as additional compression algorithms.  For instance, one popular method encodes run lengths for runs of two or more characters only, using an "escape" symbol to identify runs, or using the character itself as the escape, so that any time a character appears twice it denotes a run.  On the previous example, this would give the following:

WW12BWW12BB3WW24BWW14
This would be interpreted as a run of twelve Ws, a B, a run of twelve Ws, a run of three Bs, etc.  In data where runs are less frequent, this can significantly improve the compression rate.
One other matter is the application of additional compression algorithms.  Even with the runs extracted, the frequencies of different characters may be large, allowing for further compression; however, if the run lengths are written in the file in the locations where the runs occurred, the presence of these numbers interrupts the normal flow and makes it harder to compress.  To overcome this, some run-length encoders separate the data and escape symbols from the run lengths, so that the two can be handled independently.  For the example data, this would result in two outputs, the string "WWBWWBBWWBWW" and the numbers (12,12,3,24,14).

History and applications[edit]
Run-length encoding (RLE) schemes were employed in the transmission of analog television signals as far back as 1967.[1] In 1983, run-length encoding was patented by Hitachi.[2][3][4] RLE is particularly well suited to palette-based bitmap images such as computer icons, and was a popular image compression method on early online services such as CompuServe before the advent of more sophisticated formats such as GIF.[5]  It does not work well on continuous-tone images such as photographs, although JPEG uses it on the coefficients that remain after transforming and quantizing image blocks.
Common formats for run-length encoded data include Truevision TGA, PackBits, PCX and ILBM.  The International Telecommunication Union also describes a standard to encode run-length-colour for fax machines, known as T.45.[6]  The standard, which is combined with other techniques into Modified Huffman coding,[citation needed] is relatively efficient because most faxed documents are generally white space, with occasional interruptions of black.

See also[edit]
Kolakoski sequence
Look-and-say sequence
Comparison of graphics file formats
Golomb coding
BurrowsâWheeler transform
Recursive indexing
Run-length limited
Bitmap index
ForsythâEdwards Notation, which uses run-length-encoding for empty spaces in chess positions.
DEFLATE
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Robinson, A. H.; Cherry, C. (1967). "Results of a prototype television bandwidth compression scheme". Proceedings of the IEEE. IEEE. 55 (3): 356â364. doi:10.1109/PROC.1967.5493.

^ "Run Length Encoding Patents". Internet FAQ Consortium. 21 March 1996. Retrieved 14 July 2019.

^ "Method and system for data compression and restoration". Google Patents. 7 August 1984. Retrieved 14 July 2019.

^ "Data recording method". Google Patents. 8 August 1983. Retrieved 14 July 2019.

^ Dunn, Christopher (1987). "Smile! You're on RLE!" (PDF). The Transactor. Transactor Publishing. 7 (6): 16â18. Retrieved 2015-12-06.

^ Recommendation T.45 (02/00): Run-length colour encoding. International Telecommunication Union. 2000. Retrieved 2015-12-06.


External links[edit]
Run-length encoding implemented in different programming languages (on Rosetta Code)
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}show.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteData compression methodsLosslessEntropy type
Arithmetic
Asymmetric numeral systems
Golomb
Huffman
Adaptive
Canonical
Modified
Range
Shannon
ShannonâFano
ShannonâFanoâElias
Tunstall
Unary
Universal
Exp-Golomb
Fibonacci
Gamma
Levenshtein
Dictionary type
Byte pair encoding
LempelâZiv
842
Brotli
Deflate
LZ4
LZFSE
LZJB
LZMA
LZO
LZRW
LZS
LZSS
LZW
LZWL
LZX
Snappy
Zstandard
Other types
BWT
CTW
Delta
DMC
DPCM
LDCT
MTF
PAQ
PPM
RLE
LossyTransform type
Discrete cosine transform
DCT
MDCT
DST
FFT
Wavelet
Daubechies
DWT
SPIHT
Predictive type
DPCM
ADPCM
LPC
ACELP
CELP
LAR
LSP
WLPC
Motion
Compensation
Estimation
Vector
Psychoacoustic
AudioConcepts
Bit rate
ABR
CBR
VBR
Companding
Convolution
Dynamic range
Latency
NyquistâShannon theorem
Sampling
Sound quality
Speech coding
Sub-band coding
Codec parts
A-law
Î¼-law
DPCM
ADPCM
DM
FT
FFT
LPC
ACELP
CELP
LAR
LSP
WLPC
MDCT
Psychoacoustic model
ImageConcepts
Chroma subsampling
Coding tree unit
Color space
Compression artifact
Image resolution
Macroblock
Pixel
PSNR
Quantization
Standard test image
Methods
Chain code
DCT
Deflate
Fractal
KLT
LP
RLE
Wavelet
Daubechies
DWT
EZW
SPIHT
VideoConcepts
Bit rate
ABR
CBR
VBR
Display resolution
Frame
Frame rate
Frame types
Interlace
Video characteristics
Video quality
Codec parts
DCT
DPCM
Deblocking filter
Lapped transform
Motion
Compensation
Estimation
Vector
Wavelet
Daubechies
DWT
Theory
Entropy
Grammar
Information theory
Timeline
Kolmogorov complexity
Quantization
Rateâdistortion
Redundancy

 Compression formats
 Compression software (codecs)

showvteMultimedia compression and container formatsVideocompressionISO, IEC, MPEG
MJPEG
Motion JPEG 2000
MPEG-1
MPEG-2
Part 2
MPEG-4
Part 2 / ASP
Part 10 / AVC
Part 33 / IVC
MPEG-H
Part 2 / HEVC
MPEG-I
Part 3 / VVC
MPEG-5
Part 1 / EVC
Part 2 / LCEVC
ITU-T, VCEG
H.120
DCT
H.261
H.262
H.263
H.264 / AVC
H.265 / HEVC
H.266 / VVC
DV
SMPTE
VC-1
VC-2
VC-3
VC-5
VC-6
TrueMotion
TrueMotion S
DCT
VP3
VP6
VP7
VP8
VP9
AV1
Others
Apple Video
AVS
Bink
Cinepak
Daala
DVI
FFV1
Huffyuv
Indeo
Lagarith
Microsoft Video 1
MSU Lossless
OMS Video
Pixlet
ProRes
422
4444
QuickTime
Animation
Graphics
RealVideo
RTVideo
SheerVideo
Smacker
Sorenson Video/Spark
Theora
Thor
WMV
XEB
YULS
AudiocompressionISO, IEC, MPEG
MPEG-1 Layer II
Multichannel
MPEG-1 Layer I
MPEG-1 Layer III (MP3)
AAC
HE-AAC
AAC-LD
MPEG Surround
MPEG-4 ALS
MPEG-4 SLS
MPEG-4 DST
MPEG-4 HVXC
MPEG-4 CELP
MPEG-D USAC
MPEG-H 3D Audio
ITU-T
G.711
A-law
Âµ-law
G.718
G.719
G.722
G.722.1
G.722.2
G.723
G.723.1
G.726
G.728
G.729
G.729.1
IETF
Opus
iLBC
Speex
Vorbis
3GPP
AMR
AMR-WB
AMR-WB+
EVRC
EVRC-B
EVS
GSM-HR
GSM-FR
GSM-EFR
ETSI
AC-3
AC-4
DTS
Others
ACELP
ALAC
Asao
ATRAC
AVS
CELT
Codec 2
DRA
FLAC
iSAC
MELP
Monkey's Audio
MT9
Musepack
OptimFROG
OSQ
QCELP
RCELP
RealAudio
RTAudio
SBC
SD2
SHN
SILK
Siren
SMV
SVOPC
TTA
True Audio
TwinVQ
VMR-WB
VSELP
WavPack
WMA
MQA
aptX
aptX HD
aptX Low Latency
aptX Adaptive
LDAC
LHDC
LLAC
ImagecompressionIEC, ISO, IETF, W3C, ITU-T, JPEG
CCITT Group 4
DCT
HEIC
HEVC
JPEG
JPEG XL
JPEG XR
JPEG XT
TIFF/EP
Arithmetic
JBIG
JBIG2
JPEG-LS
JPEG XS
JPEG 2000
LZ
GIF
PNG
TIFF
TIFF/IT
Others
APNG
BPG
DCT
AVIF
AV1
DjVu
EXR
FLIF
ICER
MNG
PGF
QTVR
WBMP
WebP
ContainersISO, IEC
MPEG-ES
MPEG-PES
MPEG-PS
MPEG-TS
ISO/IEC base media file format
MPEG-4 Part 14 (MP4)
Motion JPEG 2000
MPEG-21 Part 9
MPEG media transport
ITU-T
H.222.0
T.802
IETF
RTP
Ogg
SMPTE
GXF
MXF
Others
3GP and 3G2
AMV
ASF
AIFF
AVI
AU
BPG
Bink
Smacker
BMP
DivX Media Format
EVO
Flash Video
HEIF
IFF
M2TS
Matroska
WebM
QuickTime File Format
RatDVD
RealMedia
RIFF
WAV
MOD and TOD
VOB, IFO and BUP
Collaborations
NETVC
MPEG LA
HEVC Advance
Alliance for Open Media
Methods
Discrete cosine transform
DCT
MDCT
Entropy
Arithmetic
Huffman
Modified
FFT
LPC
ACELP
CELP
LSP
WLPC
Lossless
Lossy
LZ
DEFLATE
LZW
PCM
A-law
Âµ-law
ADPCM
DPCM
Transform
Wavelet
Daubechies
DWT
Transform
Lists
Comparison of audio coding formats
Comparison of video codecs
List of codecs
See Compression methods for techniques and Compression software for codecs




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Run-length_encoding&oldid=1064058730"
		Categories: Data compressionLossless compression algorithmsHidden categories: All articles with unsourced statementsArticles with unsourced statements from December 2015
	
