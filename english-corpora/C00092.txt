
Title:
Scratch (programming language)
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Programming language learning environment
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about the programming language. For other uses, see Scratch (disambiguation).
This article relies too much on references to primary sources. Please improve this  by adding secondary or tertiary sources.  (December 2021) (Learn how and when to remove this template message)


.mw-parser-output .infobox-subbox{padding:0;border:none;margin:-3px;width:auto;min-width:100%;font-size:100%;clear:none;float:none;background-color:transparent}.mw-parser-output .infobox-3cols-child{margin:auto}.mw-parser-output .infobox .navbar{font-size:100%}body.skin-minerva .mw-parser-output .infobox-header,body.skin-minerva .mw-parser-output .infobox-subheader,body.skin-minerva .mw-parser-output .infobox-above,body.skin-minerva .mw-parser-output .infobox-title,body.skin-minerva .mw-parser-output .infobox-image,body.skin-minerva .mw-parser-output .infobox-full-data,body.skin-minerva .mw-parser-output .infobox-below{text-align:center}ScratchThe Scratch 3.0 development environment on startupParadigmEvent-driven, block-based programming languageFirstÂ appeared2003Â (2003) (first prototype)2004Â (2004) (second prototype)15 May 2007; 14 years agoÂ (15 May 2007) (public launch)[1]9 May 2013; 8 years agoÂ (9 May 2013) (Scratch 2.0) 2 January 2019; 3 years agoÂ (2 January 2019) (Scratch 3.0)Implementation languageSqueak (Scratch 0.x, 1.x)ActionScript (Scratch 2.0)JavaScript (Scratch 3.0)OSMicrosoft Windows, macOS, Linux (via renderer), HTML5, iOS, iPadOS, and Android.LicenseGPLv2 and Scratch Source Code LicenseFilename extensions
.scratch (Scratch 0.x)*.sb, *.sprite (Scratch 1.x)*.sb2, *.sprite2 (Scratch 2.0)*.sb3, *.sprite3 (Scratch 3.0)
Websitescratch.mit.edu
Official Wiki: scratch-wiki.infoInfluenced byLogo, Smalltalk, HyperCard, StarLogo, AgentSheets, AgentCubes, EtoysInfluencedCatrobat,[2]
ScratchJr,[3] Snap!,[4][5] mBlock, Turtlestitch
Scratch is a high-level block-based visual programming language and website targeted primarily at children 8â16 as an educational tool for programming.[6][7] Users on the site, called Scratchers, can create projects on the website using a block-like interface. Projects can be exported to HTML5, Android apps and EXE files using external tools. The service is developed by the MIT Media Lab, has been translated into 70+ languages, and is used in most parts of the world.[8] Scratch is taught and used in after-school centers, schools, and colleges, as well as other public knowledge institutions. As of December 2021, community statistics on the language's official website show more than 92 million projects shared by over 82 million users, and more than 100 million monthly website visits.[8]
Scratch takes its name from a technique used by disk jockeys called "scratching", where vinyl records are clipped together and manipulated on a turntable to produce different sound effects and music. Like scratching, the website lets users mix together different media (including graphics, sound, and other programs) in creative ways by creating and 'remixing' projects, like video games, animations, and simulations.[9][10]

Contents

1 Scratch 3.0

1.1 User interface
1.2 Offline editing
1.3 Extensions

1.3.1 Physical
1.3.2 Digital


1.4 Code base


2 Community of users

2.1 Educational users
2.2 Online community
2.3 Scratch Wiki
2.4 Developers


3 Events
4 History
5 Filetypes
6 Older versions

6.1 Technology
6.2 Interface
6.3 1.4 sounds


7 Extensions

7.1 Features and derivatives

7.1.1 Snap! (Build Your Own Blocks)
7.1.2 ScratchJr




8 Censorship
9 See also
10 References
11 External links



Scratch 3.0[edit]
User interface[edit]
The Scratch interface is divided into three main sections: a stage area, block palette, and a coding area to place and arrange the blocks into scripts that can be run by pressing the green flag or clicking on the code itself. Users may also create their own code blocks and they will appear in "My Blocks".
The stage area features the results (e.g., animations, turtle graphics, either in a small or normal size, with a full-screen option also available) and all sprites thumbnails being listed in the bottom area. The stage uses x and y coordinates, with 0,0 being the stage center.[11]

  A program to change the background and make a character speak, when clicked
With a sprite selected at the bottom of the staging area, blocks of commands can be applied to it by dragging them from the block palette into the coding area. The Costumes tab allows users to change the look of the sprite in order to create various effects, including animation.[11] The Sounds tab allows attaching sounds and music to a sprite.[12]
When creating sprites and also backgrounds, users can draw their own sprite manually,[11] choose a Sprite from the library, or upload an image.[12]
The table below shows the categories of the programming blocks:




Category
Notes

Category
Notes



Motion
Movements of sprites like angles and position

Sensing
Sprites can interact with the surroundings



Looks
Controls the visuals of the sprite

Operators
Mathematical operators, comparisons



Sound
Plays audio files and effects

Variables
Variable and Lists of usage and assignment



Events
Event handlers

My Blocks
Certain functions created by the user defined by other blocks in defining scripts.



Control
Conditionals and loops etc.

Extensions
Explained below

Offline editing[edit]
An offline "Desktop editor" for Scratch 3.0 is available for Microsoft Windows 10 in the Microsoft Store and Apple's macOS 10.13;[13] this allows the creation and playing of Scratch programs offline. The offline editor can also be downloaded in previous versions, such as Scratch 2.0 and Scratch 1.4.

Extensions[edit]
In Scratch, extensions add extra blocks and features that can be used in projects. In Scratch 2.0 and 3.0, the extensions were all hardware-based. Software-based extensions were added in Scratch 3.0, such as text-to-speech voices, along with some new hardware-based extensions like the micro:bit. The extensions are listed below.

Music
Pen
Video Sensing
Text to Speech
Translate
BBC Micro:bit
LEGO Mindstorms EV3
LEGO WeDo 2.0
Makey Makey
LEGO SPIKE Prime
LEGO BOOST
Go Direct Force & Acceleration
Physical[edit]
Lego Mindstorms EV3 â control motors and receive sensor data from the Lego Mindstorms EV3
Makey Makey â use the Makey Makey to control projects
Lego Education WeDo 2.0 â control motors and receive sensor data from the Lego WeDo
Lego Education SPIKE PrimeâThe main programming language for the Lego SPIKE Prime, including motor control and receiving sensor data
BBC micro:bit â use of a BBC micro:bit to control projects
Lego BOOST â bring robotic creations to life
Go Direct Force & Acceleration â Sense pull, push, motion, and spin.
Digital[edit]
Many of the digital extensions in Scratch 3.0 used to be regular block categories that were moved to the extensions section to reduce clutter. These include:

Music â Play digital instruments (drums, trumpets, violins, pianos and more)
Pen â Draw on the Stage with a variety of thicknesses and color
Video Sensing â Detect motion with the camera.
New digital extensions have also been added in collaborations with commercial companies. These include:

Text to Speech â Converts words in a text into voice output (variety of voices, supplied by Amazon)
Translate â Uses Google Translate to translate text from one language into a variety of other languages, including Arabic, Chinese, Dutch, English, French, Greek, and Japanese
Users can also create their own extensions for Scratch 3.0 using JavaScript.[14]

Code base[edit]
Scratch 3.0 is a completely new JavaScript-based codebase made up of multiple components such as "Scratch-GUI," now based on a library from Blockly,[15] "Scratch-VM," which interprets code, and "Scratch-Render," the rendering engine.[16] The Scratch Blocks are made using Blockly.[17]
Controversy[18]
Some users quit Scratch as Scratch 3.0 broke their projects. Many users complained that the new interface was childish.
A paper published in 2019 by NYU argues and illustrates, for coding music with Scratch, "that the music and sound blocks as currently implemented in Scratch may limit and frustrate meaningful music making for children, the core user base for Scratch."[19]

Community of users[edit]
  The Scratch website after the release of public project sharing in late 2007
Scratch is used in many different settings: schools, museums, libraries, community centers, and homes.[20][21][9] Although Scratch's target group is 8 through 16-year-old school pupils,[22] it is used by all ages including educators and parents. This wide outreach has created many surrounding communities, both physical and digital.[8] In April 2020, the Tiobe ranking of the world's programming languages included Scratch into the top 20. According to Tiobe, there are 50 million projects written in Scratch, and every month one million new projects are added.[23]

Educational users[edit]
Scratch is used as the introductory language because the creation of interesting programs is relatively easy, and skills learned can be applied to other programming languages such as Python and Java.

  Comparison of Scratch 1.4 and Scratch 2.0
Scratch is not exclusively for creating games. With the provided visuals, programmers can create animations, text, stories, music, and more. There are already many programs which students can use to learn topics in math, history, and even photography. Scratch allows teachers to create conceptual and visual lessons and science lab assignments with animations that help visualize difficult concepts. Within the social sciences, instructors can create quizzes, games, and tutorials with interactive elements. Using Scratch allows young people to understand the logic of programming and how to creatively build and collaborate.[24]
Scratch is taught to more than 800 schools and 70 colleges of DAV organization in India and across the world.[25][26]
In higher education, Scratch is used in the first week of Harvard University's CS50 introductory computer science course.[27][28]

Online community[edit]
  "Jumper", an example of a game created with Scratch 2.0
  "Abyss", an example of a game created with Scratch 3.0
Users of Scratch are called 'Scratchers'. Scratchers have the capability to share their projects and get feedback. Projects can be uploaded directly from the development environment to the Scratch website and any member of the community can download the full source code to study or to remix into new projects.[29][30] Scratchers can also create project studios, comment, favorite, and "love" others' projects, follow other members to see their projects and activity, and share ideas. Projects range from gamed and animations to practical tools. Additionally, to encourage creation and sharing amongst users, the website frequently establishes "Scratch Design Studio" challenges.[31]
The MIT Scratch Team works to ensure that this community maintains a friendly and respectful environment for all people.[32][33]
Educators have their own online community called ScratchEd, developed and supported by the Harvard Graduate School of Education. In this community, Scratch educators share stories, exchange resources, and ask questions.[34]

Scratch Wiki[edit]
The Scratch Wiki is a support resource for Scratch and its website, history, and phenomena surrounding it. Although supported by the Scratch Team (developers of Scratch), it is primarily written by Scratchers (users of Scratch) for information regarding the program and website.[35] It is available at en.scratch-wiki.info.[35]

Developers[edit]
Both Scratch 2.0 and Scratch 3.0 are open source on GitHub,[36] and developers may contribute to Scratch.[37]

Events[edit]
Scratch Educators can gather in person at Scratch Educator Meetups. At these gatherings, Scratch Educators learn from each other and share ideas and strategies that support computational creativity.[38]
An annual "Scratch Week", formerly known as "Scratch Day", is declared in May each year. Community members are encouraged to host an event on or around this day, large or small, that celebrates Scratch. These events are held worldwide, and a listing can be found on the Scratch Day website. Scratch Week is a series focusing on Scratch activities on the Scratch website.[39]
Every April Fools' Day, the Scratch Team will play pranks on users and add Easter eggs.

History[edit]
In the early 2000s, the  MIT Media Lab's Lifelong Kindergarten group (LLK) was developing visual programming languages targeted towards children.[40] In 2003, Mitchel Resnick, Yasmin Kafai, and John Maeda were awarded a National Science Foundation grant for the development of a new programming environment for children to express themselves with code.[41] The LLK, led by Mitchel Resnick, in partnership with Yasmin Kafai's team at UCLA worked closely with Computer Clubhouses in Boston and Los Angeles to develop Scratch, grounding its design in the practices and social dynamics of these after-school youth centers.[41] It started as a basic programming language, with no labeled categories and no green flag.[42] Similar to AgentSheets[43] Scratch employed concepts of Tactile Programming later known as blocks-based programming. Scratch was made with the intention to teach kids to program.[42]
The philosophy of Scratch encourages the sharing, reuse, and combination of code, as indicated by the team slogan, "Imagine, Program, Share".[44] Users can make their own projects, or they may choose to "remix" someone else's project. Projects created and remixed with Scratch are licensed under the Creative Commons Attribution-Share Alike License.[45] Scratch automatically gives credit to the user who created the original project and program in the top part.[9]
Scratch was developed based on ongoing interaction with youth and staff at Computer Clubhouses. The use of Scratch at Computer Clubhouses served as a model for other after-school centers demonstrating how informal learning settings can support the development of technological fluency.[46]

  The 2.0 Scratch Homepage
Scratch 2.0 was released on 9 May 2013.[11] The update changed the look of the site and included both an online project editor and an offline editor.[47] Custom blocks could now be defined within projects, along with several other improvements.[48] The Scratch 2.0 Offline editor could be downloaded for Windows, Mac and Linux directly from Scratch's website, although support for Linux was later dropped. The unofficial mobile version had to be downloaded from the Scratch forums.[49][50]

  The 3.0 Scratch Homepage
Scratch 3.0 was first announced by the Scratch Team in 2016. Several public alpha versions were released between then and January 2018, after which the pre-beta "Preview" versions were released.[51] A beta version of Scratch 3.0 was released on 1 August 2018.[52] for use on most browsers; with the notable exception of Internet Explorer.[53]
Scratch 3.0, the first 3.x release version, was released on 2 January 2019.[54]

Filetypes[edit]
In Scratch 1.4, an *.sb file was the file format used to store projects.[55]
An *.sb file is divided into four sections:

"header", this 10-byte header contains the ASCII string 'ScratchV02' in versions higher than Scratch 1.2, and 'ScratchV01' in Scratch 1.2 and below
"infoSize", encodes the length of the project's infoObjects. A 4-byte long, 32-bit, big-Endian integer.
"infoObjects", a dictionary-format data section. It contains: "thumbnail", a thumbnail of the project's stage; "author", the username of the project's creator; "comment", the Project Notes; "history", the save and upload log; "scratch-version", the version of Scratch used to save the file;
"contents", an object table with the Stage as the root. All objects in the program are stored here as references.
Scratch 2.0 uses the *.sb2 file format. These are zip files containing a .json file as well as the contents of the Scratch project including sounds (stored as .wav) and images (stored as .png).[56] Each filetype, excluding the project.json, is stored as a number, starting at 0 and counting up with each additional file. The image file labeled '0.png' is always a 480x360 white image, but '0.wav' will still be the earliest non-deleted file.
The ScratchX experimental version of Scratch used the .sbx file format.[57]
Scratch 3.0 uses the *.sb3 format, which is very similar to *.sb2,[58] one difference being the sound.

Older versions[edit]
  Scratch 2.0 development environment and its different areas at startup
Although the main Scratch website now runs only the current version (Scratch 3.0), the offline editors for Scratch 2.0 (and the earlier Scratch 1.4) are still available for download[59] and can be used to create and run games locally.[citation needed][60] It is still possible to upload projects from the Scratch 2.0 launcher, which are immediately converted into Scratch 3.0 when uploaded to the main site.[61] There is also an offline version of Scratch 3.0.

Technology[edit]
The editor of Scratch 1.4 and below was written in Squeak.[62] Its online project viewer was written in Java, and a player written in Adobe Flash was later added.[63] Scratch 2.0 relied on Adobe Flash for the online version, and Adobe AIR for the offline editor. These have fallen out of favor,[64] and Adobe has dropped support for them at the end of 2020.[65]

Interface[edit]
  A script that lets the sprite say Hello, World! then stops the script in Scratch 2.0
In Scratch 2.0, the stage area is on the left side, with the programming blocks palette in the middle the coding area on the right. Extensions are in the "More blocks" section of palette.[7]
The blocks palette in Scratch 2.0 is made of discrete sections that are not scrollable from one to the next; the table below shows the different sections:




Category
Notes

Category
Notes



Motion
Moves and changes position of sprites


Events
Event handlers



Looks
Controls the visuals of the sprite

Control
Conditionals and loops



Sound
Audio files, sequences

Sensing
Sprite interaction



Pen
Draw on the canvas

Operators
Mathematical operators



Data
Variables and arrays

More Blocks
Functions, return value is always void

1.4 sounds[edit]
Scratch 2.0 changed how sounds were imported, so many Scratch 1.4 sounds stopped working. (The project file was changed from *.sb to *.sb2).

Extensions[edit]
  An example of the Scratch 3 Extensions Page.
In Scratch 2.0, extensions were all hardware based.

Features and derivatives[edit]
Scratch uses event-driven programming with multiple active objects called sprites.[11] Sprites can be drawn, as vector or bitmap graphics, from scratch in a simple editor that is part of Scratch, or can be imported from external sources. Scratch 3.0 only supports one-dimensional arrays, known as "lists", and floating point scalars and strings are supported, but with limited string manipulation ability. There is a strong contrast between the powerful multimedia functions and multi-threaded programming style and the rather limited scope of the Scratch programming language.
Scratch 2.0 does not treat procedures as first class structures and has limited file I/O options with Scratch 2.0 Extension Protocol, an experimental extension feature that allows interaction between Scratch 2.0 and other programs.[66] The Extension protocol allows interfacing with hardware boards such as Lego Mindstorms[67] or Arduino.[68] Scratch 2.0 was implemented in ActionScript, with an experimental JavaScript-based interpreter being developed in parallel.[69]
Scratch 1.4 was based on Squeak, which is based on Smalltalk-80.[62] A number of Scratch derivatives[70] called Scratch Modifications have been created using the source code of Scratch 1.4. These programs are a variant of Scratch that normally include a few extra blocks or changes to the GUI.[71]

Snap! (Build Your Own Blocks)[edit]
A more advanced visual programming language inspired by Scratch is Snap!, featuring first class procedures (their mathematical foundations are called also lambda calculus), first class lists (including lists of lists), and first class truly object oriented sprites with prototyping inheritance, and nestable sprites, which are not part of Scratch.[72] Snap! (previously "BYOB") was developed by Jens MÃ¶nig[73][74] with documentation provided by Brian Harvey[75][76] from University of California, Berkeley and has been used to teach "The Beauty and Joy of Computing" introductory course in CS for non-CS-major students.[77] Both of them were members of the Scratch Team before designing "Snap!".[78][7]

ScratchJr[edit]
In July 2014, ScratchJr was released for iPad, and in 2016, ScratchJr for Android. Although heavily inspired by Scratch and co-led by Mitch Resnick, it is nonetheless a complete rewrite designed for younger childrenâtargeting ages 5 through 8.[79]

Censorship[edit]
In August 2020, GreatFire announced that the Chinese government had blocked access to the Scratch website. At the time, it was estimated that more than three million people in China were using it.[80][81] The outlet cited the fact that Macao, Hong Kong and Taiwan were listed as countries on the website.[80][82]

See also[edit]
.mw-parser-output .portalbox{float:right;border:solid #aaa 1px;padding:0}.mw-parser-output .portalbox.tleft{margin:0.5em 1em 0.5em 0}.mw-parser-output .portalbox.tright{margin:0.5em 0 0.5em 1em}.mw-parser-output .portalbox>ul{display:table;box-sizing:border-box;padding:0.1em;max-width:175px;background:#f9f9f9;font-size:85%;line-height:110%;font-style:italic;font-weight:bold}.mw-parser-output .portalbox>ul>li{display:table-row}.mw-parser-output .portalbox>ul>li>span:first-child{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox>ul>li>span:last-child{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}

Free and open-source software portal
Computer programming portal
Blockly, interface used by Scratch to make the code blocks
Code.org
Programmable Cricket
PWCT (software)
Visual programming language
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"Scratch Timeline â Scratch Wiki". en.scratch-wiki.info.

^ "Catrobat Home". catrobat.org.

^ "ScratchJr â Home". scratchjr.org.

^ "Snap! Build Your Own Blocks". snap.berkeley.edu.

^ "Snap! Build Your Own Blocks". snap.berkeley.edu.

^ Resnick, Mitchel; Maloney, John; Monroy-HernÃ¡ndez, AndrÃ©s; Rusk, Natalie; Eastmond, Evelyn; Brennan, Karen; Millner, Amon; Rosenbaum, Eric; Silver, Jay; Silverman, Brian; Kafai, Yasmin (1 November 2009). "Scratch: programming for all". Communications of the ACM. 52 (11): 60â67. doi:10.1145/1592761.1592779. ISSNÂ 0001-0782.

^ a b c Resnick, Mitchel; Maloney, John; HernÃ¡ndez, AndrÃ©s; Rusk, Natalie; Eastmond, Evelyn; Brennan, Karen; Millner, Amon; Rosenbaum, Eric; Silver, Jay; Silverman, Brian; Kafai, Yasmin (2009). "Scratch: Programming for All" (PDF). Communications of the ACM. 52 (11): 60â67. doi:10.1145/1592761.1592779.

^ a b c "Community statistics at a glance". scratch.mit.edu. Archived from the original on 6 April 2016. Retrieved 18 May 2019.

^ a b c Lamb, Annette; Johnson, Larry (April 2011). "Scratch: Computer Programming for 21st Century Learners" (PDF). Teacher Librarian. 38 (4): 64â68. Retrieved 18 May 2019.

^ Schorow, Stephanie (14 May 2007). "Creating from Scratch". MIT News. Archived from the original on 13 October 2018. Retrieved 18 May 2019.

^ a b c d e Marji, Majed (2014). Learn to Program with Scratch. San Francisco, California: No Starch Press. pp.Â xvii, 1â9, 13â15. ISBNÂ 978-1-59327-543-3.

^ a b "Science Buddies: Scratch User Guide: Installing & Getting Started with Scratch". ScienceBuddies.org. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "Scratch Desktop". Retrieved 19 September 2019.

^ "Scratch 3.0 Extensions". Github. MIT. Retrieved 19 September 2019.

^ Pasternak, Erik (17 January 2019). "Scratch 3.0's new programming blocks, built on Blockly". Retrieved 2 October 2019.

^ Frang, Corey (28 February 2019). "Porting Scratch from Flash to Javascript". Retrieved 21 September 2019.

^ "Blockly". Google Developers.

^ "Scratcher who quit Scratch". Scratch User. 2 January 2019.{{cite web}}:  CS1 maint: url-status (link)

^ https://jitp.commons.gc.cuny.edu/music-making-in-scratch-high-floors-low-ceilings-and-narrow-walls/

^ Oliveira, Michael (30 April 2014). "Canadian schools starting to teach computer coding to kids". CTV.ca. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "Scratch Day". Science Museum of Minnesota. Archived from the original on 8 April 2013. Retrieved 18 May 2019.

^ "Scratch â About". scratch.mit.edu.

^ Fay, Joe (6 April 2020). "Kids programming language Scratch nails top 20 in latest dev rankings â¢ DEVCLASS". DEVCLASS. Retrieved 27 April 2020.

^ Martin, Neil (25 June 2015). "What is Scratch? Is it AV or IT?". AV Magazine. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "DAV CS Syllabus" (PDF). Archived from the original (PDF) on 13 July 2018. Retrieved 18 May 2019.

^ "DAV Jharkhand Syllabus". Retrieved 18 May 2019.

^ Young, Jeffrey R. (20 July 2007). "Fun, Not Fear, Is at the Heart of Scratch, a New Programming Language". The Chronicle of Higher Education. ISSNÂ 0009-5982. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "CS50 Syllabus". Archived from the original on 17 March 2015. Retrieved 18 May 2019.

^ Monroy-Hernandez, Andres; Hill, Benjamin Mako; Gonzalez-Rivero, Jazmin; Boyd, Danah (2011). "Computers Can't Give Credit: How Automatic Attribution Falls Short in an Online Remixing Community". Proceedings of the 29th International Conference on Human Factors in Computing Systems (CHI '11). ACM. pp.Â 3421â30. arXiv:1507.01285. doi:10.1145/1978942.1979452. S2CIDÂ 7494330.

^ Hill, B.M; Monroy-HernÃ¡ndez, A.; Olson, K.R. (2010). "Responses to remixing on a social media sharing website". ICWSM 2010Â : Proceedings of the 4th International Conference on Weblogs and Social Media, May 23â26, 2010. Washington, D.C.: AAAI Press. arXiv:1507.01284. Bibcode:2015arXiv150701284M. ISBNÂ 978-1-57735-445-1. OCLCÂ 844857775.

^ "Scratch Design Studio". wiki.scratch.mit.edu. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "For Parents". scratch.mit.edu. Archived from the original on 4 April 2019. Retrieved 18 May 2019.

^ "Scratch Community Guidelines". scratch.mit.edu. Archived from the original on 7 April 2019. Retrieved 18 May 2019.

^ "Scratch for Educators". scratch.mit.edu. Archived from the original on 5 October 2008. Retrieved 18 May 2010.

^ a b "Scratch Wiki". en.scratch-wiki.info. Archived from the original on 12 May 2019. Retrieved 18 May 2019.

^ "LLK/scratch-gui". 9 January 2021 â via GitHub.

^ "Scratch â Developers". scratch.mit.edu.

^ "Scratch Educator". Meetup.com. Archived from the original on 21 April 2019. Retrieved 18 May 2019.

^ "Scratch Week". Archived from the original on 7 April 2019. Retrieved 18 May 2019.

^ "LLK - Projects - Building-Block Programming". llk.media.mit.edu. Archived from the original on 30 April 2001. Retrieved 19 December 2021.

^ a b "NSF Award Search: Award # 0325828 â ITR: A Networked, Media-Rich Programming Environment to Enhance Informal Learning and Technological Fluency at Community Technology Centers". www.nsf.gov. Retrieved 15 April 2021.

^ a b "Development of Scratch 1.0". en.scratch-wiki.info. Archived from the original on 3 January 2019. Retrieved 18 May 2019.

^ "Tactile Programming: A Unified Manipulation Paradigm Supporting Program Comprehension, Composition and Sharing". Retrieved 15 October 2021.

^ "Scratch â Imagine, Program, Share". scratch.mit.edu. Archived from the original on 22 February 2011. Retrieved 18 May 2019.

^ "Creative Commons License". wiki.scratch.mit.edu. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "ITR: A Networked, Media-Rich Programming Environment to Enhance Informal Learning and Technological Fluency at Community Technology Centers". National Science Foundation. Archived from the original on 30 December 2015. Retrieved 18 May 2019.

^ "Scratch Desktop". scratch.mit.edu. Archived from the original on 6 April 2019. Retrieved 18 May 2019.

^ Biggs, John (10 May 2013). "Kids' Programming Tool Scratch Now Runs in the Browser". TechCrunch. Archived from the original on 9 July 2012. Retrieved 18 May 2019.

^ "Updated Scratch 2.0 Offline (Beta) is now available!". Scratch. 29 August 2013. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "Scratch 2.0 Preview". YouTube. MITScratchTeam. 1 May 2013. Archived from the original on 24 January 2014. Retrieved 18 May 2019.

^ "Scratch 3.0". en.scratch-wiki.info. Archived from the original on 9 May 2019. Retrieved 18 May 2019.

^ "3 Things To Know About Scratch 3.0". Medium.com. Archived from the original on 12 May 2019. Retrieved 18 May 2019.

^ "Scratch 3.0". scratch.mit.edu. Archived from the original on 6 April 2019. Retrieved 18 May 2019.

^ "Scratch 3.0 â Scratch Wiki". en.scratch-wiki.info. Retrieved 27 April 2021.

^ "Scratch Wiki â *.sb". 4 October 2015. Retrieved 7 November 2015.

^ "Scratch File Format (2.0)". Scratch Wiki. Retrieved 2 October 2019.

^ "LLK/scratchx". GitHub.

^ "Scratch File Format". Scratch Wiki. Retrieved 2 October 2019.

^ "Scratch 2.0 Offline Editor". MIT. Retrieved 21 September 2019.

^ "3 Things To Know About Scratch 3.0". The Scratch Team. 31 January 2019. Retrieved 21 September 2019.

^ "Offline Editor (2.0) â Scratch Wiki". en.scratch-wiki.info. Retrieved 27 April 2021.

^ a b "Scratch". Squeak/Smalltalk. Retrieved 7 March 2021.

^ "Scratch Forums / Beta Flash player". Scratch Archived Forums. Retrieved 7 March 2021.

^ O'Donnell, Lindsey (14 January 2019). "Mozilla Kills Default Support for Adobe Flash in Firefox 69". Retrieved 21 September 2019.

^ Adobe Corporate Communications (30 May 2019). "The Future of Adobe AIR". Retrieved 21 September 2019.

^ "Scratch Extension". MIT. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "EV3+Scratch Extension". Scratch extension GitHub. Code & Circuit. Archived from the original on 20 January 2016. Retrieved 18 May 2019.

^ "Preliminary Scratch extension for talking to Arduino boards running Firmata". Scratch extension GitHub. Damellis. Archived from the original on 16 January 2018. Retrieved 18 May 2019.

^ "We're seeking contributors to help finish our HTML5 Scratch player (now open sourced!)". Scratch. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "Scratch Modification". Scratch Wiki. Lifelong Kindergarten Group at the MIT Media Lab. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "Blocks". Scratch Wiki. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "Snap! â Build Your Own Blocks". University of California, Berkeley. Archived from the original on 16 May 2019. Retrieved 18 May 2019.

^ MÃ¶nig, Jens. "Jens on Scratch". Scratch. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ MÃ¶nig, Jens (31 May 2011). "BYOB 3.1 â Prototypal Inheritance for Scratch". Chirp Blog. Archived from the original on 6 December 2013. Retrieved 18 May 2019.

^ "Brian Harvey". Electrical Engineering and Computer Sciences. Archived from the original on 3 April 2019. Retrieved 18 May 2019.

^ "bharvey". Scratch. Archived from the original on 18 May 2019. Retrieved 18 May 2019.

^ "CS10Â : The Beauty and Joy of Computing". EECS Instructional Support Group Home Page. Archived from the original on 23 January 2014. Retrieved 18 May 2019.

^ "Relationship With the Scratch Team".

^ "About ScratchJr". scratchjr.org. Retrieved 19 September 2019.

^ a b Liao, Rita (7 September 2020). "China bans Scratch, MIT's programming language for kids". TechCrunch. Retrieved 27 April 2021.{{cite web}}:  CS1 maint: url-status (link)

^ "China appears to be blocking access to children's programming language Scratch â Computer â News". World Today News. 7 September 2020. Retrieved 19 November 2020.

^ "China blocks MIT's kid-friendly programming language Scratch". Developer Tech News. 8 September 2020. Retrieved 19 November 2020.


External links[edit]
 Scratch at Wikibooks
 Media related to Scratch (programming language) at Wikimedia Commons
Official website 
Scratch at Curlie
TurboWarp and Forkphorus , explained in Modifications.
Kids coding parents Guide
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}Authority control General
Integrated Authority File (Germany)
National libraries
United States

.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteGame engines (list)
Source port
First-person shooter engine
list
Game engine recreation
list
Game creation system
List of visual novel engines
id Tech
Proprietary1980s
Filmation
Freescape
SCUMM
1990s
3D GameStudio
Clickteam
Dark Engine
FaceGen
GameMaker
Genie Engine
GoldSrc
iMUSE
INSANE
Jedi
LithTech
Mugen
Pie in the Sky
Reality Lab
RenderWare
RPG Maker
Sim RPG Maker
Truevision3D
Unreal Engine
Virtual Theatre
Voxel Space
Zero
Zillions of Games
2000s
Anvil
C4 Engine
Chrome Engine
CryEngine
Crystal Tools
Diesel
Ego
Essence Engine
Euphoria
Flare3D
Frostbite
Gamebryo
GameSalad
Havok
HeroEngine
IW
Leadwerks
Marmalade
MT Framework
Q
RAGE
Retro Engine
SAGE
Shark 3D
ShiVa
Silent Storm engine
Source
SpeedTree
Titan
Unigine
Unity
Vicious Engine
Vision
Visual3D Game Engine
2010s
4A Engine
Amazon Lumberyard
Autodesk Gameware
Bitsquid
Construct
Creation Engine
Decima
Felgo
Fox Engine
id Tech 5
id Tech 6
Ignite
Kynapse
Luminous Engine
Nvidia GameWorks
Panta Rhei
Pixel Game Maker MV
RE Engine
Snowdrop
Source 2
UbiArt Framework
2020s
id Tech 7
Free andopen-source1970s
Z-machine
1990s
Adventure Game Studio
Build
Crystal Space
Doom engine
Game-Maker
OHRRPGCE
Quake engine
Quake II engine
Stratagus
2000s
Away3D
Blender Game Engine
Bork3D Game Engine
Cafu Engine
Cocos2d
Dim3
Game Editor
GDevelop
id Tech 3
id Tech 4
Irrlicht Engine
jMonkeyEngine
Lightweight Java Game Library
LÃ¶ve
OGRE
Open Wonderland
Panda3D
Papervision3D
PhyreEngine
Plasma
Platinum Arts Sandbox
Pygame
Ren'Py
Scratch
Solar2D
Spring Engine
Thousand Parsec
Torque
Vassal Engine
Wintermute Engine
2010s
Delta3D
Godot
GPUOpen
Horde3D
libGDX
Moai
OpenFL
ORX
PlayCanvas
Stencyl
Stride
2020s
Open 3D Engine





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Scratch_(programming_language)&oldid=1069479833"
		Categories: Dynamically typed programming languagesEducational programming languagesFree educational softwareMIT Media LabPedagogic integrated development environmentsSmalltalk programming language familyVideo game development softwareVideo game enginesVideo game IDESoftware developer communitiesProgramming languages created in 2003Computer file formatsFilename extensionsCreative Commons-licensed websitesHidden categories: CS1 maint: url-statusArticles with short descriptionShort description is different from WikidataArticles lacking reliable references from December 2021All articles lacking reliable referencesUse dmy dates from November 2021All articles with unsourced statementsArticles with unsourced statements from September 2019Commons category link from WikidataArticles with Curlie linksArticles with GND identifiersArticles with LCCN identifiers
	
