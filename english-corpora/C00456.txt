
Title:
List of unsolved problems in computer science
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This is a dynamic list and may never be able to satisfy particular standards for completeness. You can help by adding missing items with reliable sources.
Wikipedia list article
This article is a list of notable unsolved problems in computer science. A problem in computer science is considered unsolved when no solution is known, or when experts in the field disagree about proposed solutions.

Contents

1 Computational complexity
2 Polynomial versus non-polynomial time for specific algorithmic problems
3 Other algorithmic problems
4 Natural language processing algorithms
5 Programming language theory
6 Other problems
7 References
8 External links



Computational complexity[edit]
Main article: Computational complexity theory
P versus NP problem
What is the relationship between BQP and NP?
NC = P problem
NP = co-NP problem
P = BPP problem
P = PSPACE problem
L = NL problem
PH = PSPACE problem
L = P problem
L = RL problem
Unique games conjecture
Is the exponential time hypothesis true?
Is the strong exponential time hypothesis (SETH) true?
Do one-way functions exist?
Is public-key cryptography possible?
Log-rank conjecture
Polynomial versus non-polynomial time for specific algorithmic problems[edit]
Main article: NP-intermediate
Can integer factorization be done in polynomial time on a classical (non-quantum) computer?
Can the discrete logarithm be computed in polynomial time on a classical (non-quantum) computer?
Can the shortest vector of a lattice be computed in polynomial time on a classical or quantum computer?
Can clustered planar drawings be found in polynomial time?
Can the graph isomorphism problem be solved in polynomial time?
Can leaf powers and k-leaf powers be recognized in polynomial time?
Can parity games be solved in polynomial time?
Can the rotation distance between two binary trees be computed in polynomial time?
Can graphs of bounded clique-width be recognized in polynomial time?[1]
Can one find a simple closed quasigeodesic on a convex polyhedron in polynomial time?[2]
Can a simultaneous embedding with fixed edges for two given graphs be found in polynomial time?[3]
Other algorithmic problems[edit]
The dynamic optimality conjecture: do splay trees have a bounded competitive ratio?
Is there a k-competitive online algorithm for the k-server problem?
Can a depth-first search tree be constructed in NC?
Can the fast Fourier transform be computed in o(n log n) time?
What is the fastest algorithm for multiplication of two n-digit numbers?
What is the lowest possible average-case time complexity of Shellsort with a deterministic, fixed gap sequence?
Can 3SUM be solved in strongly sub-quadratic time, that is, in time O(n2âÏµ) for some Ïµ>0?
Can the edit distance between two strings of length n be computed in strongly sub-quadratic time?  (This is only possible if the strong exponential time hypothesis is false.)
Can X + Y sorting be done in o(n2 log n) time?
What is the fastest algorithm for matrix multiplication?
Can all-pairs shortest paths be computed in strongly sub-cubic time, that is, in time O(V3âÏµ) for some Ïµ>0?
Can the SchwartzâZippel lemma for polynomial identity testing be derandomized?
Does linear programming admit a strongly polynomial-time algorithm?  (This is problem #9 in Smale's list of problems.)
How many queries are required for envy-free cake-cutting?
What is the algorithmic complexity of the minimum spanning tree problem? Equivalently, what is the decision tree complexity of the MST problem? The optimal algorithm to compute MSTs is known, but it relies on decision trees, so its complexity is unknown.
Natural language processing algorithms[edit]
Main article: Natural language processing
Is there any perfect syllabification algorithm in the English language?
Is there any perfect stemming algorithm in the English language?
Is there any perfect phrase chunking algorithm in the English language?
How can computers discern pronoun ambiguity in the English Language? (Also known as the Winograd Schema Challenge).
Programming language theory[edit]
Main article: Programming language theory
POPLmark
BarendregtâGeuversâKlop conjecture
Other problems[edit]
AanderaaâKarpâRosenberg conjecture
ÄernÃ½ Conjecture
Generalized star height problem
Separating words problem
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Fellows, Michael R.; Rosamond, Frances A.; Rotics, Udi; Szeider, Stefan (2009), "Clique-width is NP-complete" (PDF), SIAM Journal on Discrete Mathematics, 23 (2): 909â939, doi:10.1137/070687256, MRÂ 2519936, archived from the original (PDF) on 2019-02-27.

^ Demaine, Erik D.; O'Rourke, Joseph (2007), "24 Geodesics: LyusternikâSchnirelmann", Geometric folding algorithms: Linkages, origami, polyhedra, Cambridge: Cambridge University Press, pp.Â 372â375, doi:10.1017/CBO9780511735172, ISBNÂ 978-0-521-71522-5, MRÂ 2354878.

^ Gassner, Elisabeth; JÃ¼nger, Michael; Percan, Merijam; Schaefer, Marcus; Schulz, Michael (2006), "Simultaneous graph embeddings with fixed edges" (PDF), Graph-Theoretic Concepts in Computer Science: 32nd International Workshop, WG 2006, Bergen, Norway, June 22-24, 2006, Revised Papers (PDF), Lecture Notes in Computer Science, vol.Â 4271, Berlin: Springer, pp.Â 325â335, doi:10.1007/11917496_29, MRÂ 2290741.


External links[edit]
Open problems around exact algorithms by Gerhard J. Woeginger, Discrete Applied Mathematics 156 (2008) 397â405.
The RTA list of open problems â open problems in rewriting.
The TLCA List of Open Problems â open problems in area typed lambda calculus.
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteWell-known unsolved problems by discipline
Astronomy
Biology
Chemistry
Computer science
Economics
Fair division
Geoscience
Information theory
Linguistics
Mathematics
Medicine
Philosophy
Physics
Statistics





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=List_of_unsolved_problems_in_computer_science&oldid=1054621684"
		Categories: ConjecturesLists of unsolved problemsUnsolved problems in computer scienceHidden categories: Dynamic listsArticles with short descriptionShort description is different from Wikidata
	
