
Title:
Lossy compression
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Data compression approach that reduces data size while discarding or changing some of it
.mw-parser-output .tmulti .thumbinner{display:flex;flex-direction:column}.mw-parser-output .tmulti .trow{display:flex;flex-direction:row;clear:left;flex-wrap:wrap;width:100%;box-sizing:border-box}.mw-parser-output .tmulti .tsingle{margin:1px;float:left}.mw-parser-output .tmulti .theader{clear:both;font-weight:bold;text-align:center;align-self:center;background-color:transparent;width:100%}.mw-parser-output .tmulti .thumbcaption{background-color:transparent}.mw-parser-output .tmulti .text-align-left{text-align:left}.mw-parser-output .tmulti .text-align-right{text-align:right}.mw-parser-output .tmulti .text-align-center{text-align:center}@media all and (max-width:720px){.mw-parser-output .tmulti .thumbinner{width:100%!important;box-sizing:border-box;max-width:none!important;align-items:center}.mw-parser-output .tmulti .trow{justify-content:center}.mw-parser-output .tmulti .tsingle{float:none!important;max-width:100%!important;box-sizing:border-box;text-align:center}.mw-parser-output .tmulti .tsingle .thumbcaption{text-align:left}.mw-parser-output .tmulti .trow>.thumbcaption{text-align:center}}Low-compression (high quality) JPEGHigh-compression (low quality) JPEG
In information technology, lossy compression or irreversible compression is the class of data encoding methods that uses inexact approximations and partial data discarding to represent the content. These techniques are used to reduce data size for storing, handling, and transmitting content. The different versions of the photo of the cat on this page show how higher degrees of approximation create coarser images as more details are removed. This is opposed to lossless data compression (reversible data compression) which does not degrade the data. The amount of data reduction possible using lossy compression is much higher than using lossless techniques.
Well-designed lossy compression technology often reduces file sizes significantly before degradation is noticed by the end-user. Even when noticeable by the user, further data reduction may be desirable (e.g., for real-time communication or to reduce transmission times or storage needs). The most widely used lossy compression algorithm is the discrete cosine transform (DCT), first published by Nasir Ahmed, T. Natarajan and K. R. Rao in 1974. In 2019 a new family of sinusoidal-hyperbolic transform functions, which have comparable properties and performance with DCT, were proposed for lossy compression.[1]
Lossy compression is most commonly used to compress multimedia data (audio, video, and images), especially in applications such as streaming media and internet telephony. By contrast, lossless compression is typically required for text and data files, such as bank records and text articles. It can be advantageous to make a master lossless file which can then be used to produce additional copies from. This allows one to avoid basing new compressed copies off of a lossy source file, which would yield additional artifacts and further unnecessary information loss.

Contents

1 Types
2 Transform coding
3 Information loss
4 Comparison

4.1 Emotional effects
4.2 Transparency
4.3 Compression ratio


5 Transcoding and editing

5.1 Editing of lossy files

5.1.1 JPEG
5.1.2 Metadata
5.1.3 Downsampling/compressed representation scalability




6 Methods

6.1 Graphics

6.1.1 Image
6.1.2 3D computer graphics
6.1.3 Video


6.2 Audio

6.2.1 General
6.2.2 Speech


6.3 Other data


7 Lowering resolution
8 See also
9 Notes
10 External links



Types[edit]
It is possible to compress many types of digital data in a way that reduces the size of a computer file needed to store it, or the bandwidth needed to transmit it, with no loss of the full information contained in the original file. A picture, for example, is converted to a digital file by considering it to be an array of dots and specifying the color and brightness of each dot. If the picture contains an area of the same color, it can be compressed without loss by saying "200 red dots" instead of "red dot, red dot, ...(197 more times)..., red dot."
The original data contains a certain amount of information, and there is a lower limit to the size of file that can carry all the information. Basic information theory says that there is an absolute limit in reducing the size of this data. When data is compressed, its entropy increases, and it cannot increase indefinitely. For example, a compressed ZIP file is smaller than its original, but repeatedly compressing the same file will not reduce the size to nothing. Most compression algorithms can recognize when further compression would be pointless and would in fact increase the size of the data.
In many cases, files or data streams contain more information than is needed. For example, a picture may have more detail than the eye can distinguish when reproduced at the largest size intended; likewise, an audio file does not need a lot of fine detail during a very loud passage. Developing lossy compression techniques as closely matched to human perception as possible is a complex task. Sometimes the ideal is a file that provides exactly the same perception as the original, with as much digital information as possible removed; other times, perceptible loss of quality is considered a valid tradeoff.
The terms "irreversible" and "reversible" are preferred over "lossy" and "lossless" respectively for some applications, such as medical image compression, to circumvent the negative implications of "loss". The type and amount of loss can affect the utility of the images. Artifacts or undesirable effects of compression may be clearly discernible yet the result still useful for the intended purpose. Or lossy compressed images may be 'visually lossless', or in the case of medical images, so-called Diagnostically Acceptable Irreversible Compression (DAIC)[2] may have been applied.

Transform coding[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Main article: Transform coding
Some forms of lossy compression can be thought of as an application of transform coding, which is a type of data compression used for digital images, digital audio signals, and digital video. The transformation is typically used to enable better (more targeted) quantization. Knowledge of the application is used to choose information to discard, thereby lowering its bandwidth. The remaining information can then be compressed via a variety of methods. When the output is decoded, the result may not be identical to the original input, but is expected to be close enough for the purpose of the application.
The most common form of lossy compression is a transform coding method, the discrete cosine transform (DCT),[3] which was first published by Nasir Ahmed, T. Natarajan and K. R. Rao in 1974.[4] DCT is the most widely used form of lossy compression, for popular image compression formats (such as JPEG),[5] video coding standards (such as MPEG and H.264/AVC) and audio compression formats (such as MP3 and AAC).
In the case of audio data, a popular form of transform coding is perceptual coding, which transforms the raw data to a domain that more accurately reflects the information content. For example, rather than expressing a sound file as the amplitude levels over time, one may express it as the frequency spectrum over time, which corresponds more accurately to human audio perception. While data reduction (compression, be it lossy or lossless) is a main goal of transform coding, it also allows other goals: one may represent data more accurately for the original amount of space[6] â for example, in principle, if one starts with an analog or high-resolution digital master, an MP3 file of a given size should provide a better representation than a raw uncompressed audio in WAV or AIFF file of the same size. This is because uncompressed audio can only reduce file size by lowering bit rate or depth, whereas compressing audio can reduce size while maintaining bit rate and depth. This compression becomes a selective loss of the least significant data, rather than losing data across the board. Further, a transform coding may provide a better domain for manipulating or otherwise editing the data â for example, equalization of audio is most naturally expressed in the frequency domain (boost the bass, for instance) rather than in the raw time domain.
From this point of view, perceptual encoding is not essentially about discarding data, but rather about a better representation of data. Another use is for backward compatibility and graceful degradation: in color television, encoding color via a luminance-chrominance transform domain (such as YUV) means that black-and-white sets display the luminance, while ignoring the color information. Another example is chroma subsampling: the use of color spaces such as YIQ, used in NTSC, allow one to reduce the resolution on the components to accord with human perception â humans have highest resolution for black-and-white (luma), lower resolution for mid-spectrum colors like yellow and green, and lowest for red and blues â thus NTSC displays approximately 350 pixels of luma per scanline, 150 pixels of yellow vs. green, and 50 pixels of blue vs. red, which are proportional to human sensitivity to each component.

Information loss[edit]
Lossy compression formats suffer from generation loss: repeatedly compressing and decompressing the file will cause it to progressively lose quality. This is in contrast with lossless data compression, where data will not be lost via the use of such a procedure. Information-theoretical foundations for lossy data compression are provided by rate-distortion theory.  Much like the use of probability in optimal coding theory, rate-distortion theory heavily draws on Bayesian estimation and decision theory in order to model perceptual distortion and even aesthetic judgment.
There are two basic lossy compression schemes:

In lossy transform codecs, samples of picture or sound are taken, chopped into small segments, transformed into a new basis space, and quantized. The resulting quantized values are then entropy coded.
In lossy predictive codecs, previous and/or subsequent decoded data is used to predict the current sound sample or image frame. The error between the predicted data and the real data, together with any extra information needed to reproduce the prediction, is then quantized and coded.
In some systems the two techniques are combined, with transform codecs being used to compress the error signals generated by the predictive stage.

Comparison[edit]
The advantage of lossy methods over lossless methods is that in some cases a lossy method can produce a much smaller compressed file than any lossless method, while still meeting the requirements of the application. Lossy methods are most often used for compressing sound, images or videos. This is because these types of data are intended for human interpretation where the mind can easily "fill in the blanks" or see past very minor errors or inconsistencies â ideally lossy compression is transparent (imperceptible), which can be verified via an ABX test. Data files using lossy compression are smaller in size and thus cost less to store and to transmit over the Internet, a crucial consideration for streaming video services such as Netflix and streaming audio services such as Spotify.

Emotional effects[edit]
A study conducted by the Audio Engineering Library concluded that lower bit rate (112 kbps) lossy compression formats such as MP3s have distinct effects on timbral and emotional characteristics, tending to strengthen negative emotional qualities and weaken positive ones.[7] The study further noted that the trumpet is the instrument most affected by compression, while the horn is least.

Transparency[edit]
Further information: Transparency (data compression)
When a user acquires a lossily compressed file, (for example, to reduce download time) the retrieved file can be quite different from the original at the bit level while being indistinguishable to the human ear or eye for most practical purposes. Many compression methods focus on the idiosyncrasies of human physiology, taking into account, for instance, that the human eye can see only certain wavelengths of light. The psychoacoustic model describes how sound can be highly compressed without degrading perceived quality. Flaws caused by lossy compression that are noticeable to the human eye or ear are known as compression artifacts.

Compression ratio[edit]
The compression ratio (that is, the size of the compressed file compared to that of the uncompressed file) of lossy video codecs is nearly always far superior to that of the audio and still-image equivalents.

Video can be compressed immensely (e.g., 100:1) with little visible quality loss
Audio can often be compressed at 10:1 with almost imperceptible loss of quality
Still images are often lossily compressed at 10:1, as with audio, but the quality loss is more noticeable, especially on closer inspection.
Transcoding and editing[edit]
Further information: Transcoding
An important caveat about lossy compression (formally transcoding), is that editing lossily compressed files causes digital generation loss from the re-encoding. This can be avoided by only producing lossy files from (lossless) originals and only editing (copies of) original files, such as images in raw image format instead of JPEG. If data which has been compressed lossily is decoded and compressed losslessly, the size of the result can be comparable with the size of the data before lossy compression, but the data already lost cannot be recovered. When deciding to use lossy conversion without keeping the original, format conversion may be needed in the future to achieve compatibility with software or devices (format shifting), or to avoid paying patent royalties for decoding or distribution of compressed files.

Editing of lossy files[edit]
See also: commons:Commons:Software Â§Â JPEG, and commons:Commons:Software Â§Â Ogg Vorbis (audio)
By modifying the compressed data directly without decoding and re-encoding, some editing of lossily compressed files without degradation of quality is possible. Editing which reduces the file size as if it had been compressed to a greater degree, but without more loss than this, is sometimes also possible.

JPEG[edit]
The primary programs for lossless editing of JPEGs are jpegtran, and the derived exiftran (which also preserves Exif information), and Jpegcrop (which provides a Windows interface).
These allow the image to be cropped, rotated, flipped, and flopped, or even converted to grayscale (by dropping the chrominance channel). While unwanted information is destroyed, the quality of the remaining portion is unchanged.
Some other transforms are possible to some extent, such as joining images with the same encoding (composing side by side, as on a grid) or pasting images such as logos onto existing images (both via Jpegjoin), or scaling.[8]
Some changes can be made to the compression without re-encoding:

Optimizing the compression (to reduce size without change to the decoded image)
Converting between progressive and non-progressive encoding.
The freeware Windows-only IrfanView has some lossless JPEG operations in its JPG_TRANSFORM plugin.

Metadata[edit]
Metadata, such as ID3 tags, Vorbis comments, or Exif information, can usually be modified or removed without modifying the underlying data.

Downsampling/compressed representation scalability[edit]
One may wish to downsample or otherwise decrease the resolution of the represented source signal and the quantity of data used for its compressed representation without re-encoding, as in bitrate peeling, but this functionality is not supported in all designs, as not all codecs encode data in a form that allows less important detail to simply be dropped. Some well-known designs that have this capability include JPEG 2000 for still images and H.264/MPEG-4 AVC based Scalable Video Coding for video.  Such schemes have also been standardized for older designs as well, such as JPEG images with progressive encoding, and MPEG-2 and MPEG-4 Part 2 video, although those prior schemes had limited success in terms of adoption into real-world common usage. Without this capacity, which is often the case in practice, to produce a representation with lower resolution or lower fidelity than a given one, one needs to start with the original source signal and encode, or start with a compressed representation and then decompress and re-encode it (transcoding), though the latter tends to cause digital generation loss.
Another approach is to encode the original signal at several different bitrates, and then either choose which to use (as when streaming over the internet â as in RealNetworks' "SureStream" â or offering varying downloads, as at Apple's iTunes Store), or broadcast several, where the best that is successfully received is used, as in various implementations of hierarchical modulation. Similar techniques are used in mipmaps, pyramid representations, and more sophisticated scale space methods. Some audio formats feature a combination of a lossy format and a lossless correction which when combined reproduce the original signal; the correction can be stripped, leaving a smaller, lossily compressed, file. Such formats include MPEG-4 SLS (Scalable to Lossless), WavPack, OptimFROG DualStream, and DTS-HD Master Audio in lossless (XLL) mode).

Methods[edit]
Graphics[edit]
Image[edit]
Further information: Image compression
Discrete cosine transform (DCT)
JPEG[9]
WebP (high-density lossless or lossy compression of RGB and RGBA images)
High Efficiency Image Format (HEIF)
Better Portable Graphics (BPG) (lossless or lossy compression)
JPEG XR, a successor of JPEG with support for high-dynamic range, wide gamut pixel formats (lossless or lossy compression)
Wavelet compression
JPEG 2000, JPEG's successor format that uses wavelets (lossless or lossy compression)
DjVu
ICER, used by the Mars Rovers, related to JPEG 2000 in its use of wavelets
PGF, Progressive Graphics File (lossless or lossy compression)
Cartesian Perceptual Compression, also known as CPC
Fractal compression
JBIG2 (lossless or lossy compression)
S3TC texture compression for 3D computer graphics hardware
3D computer graphics[edit]
glTF
Video[edit]
Further information: Video coding format and Video compression
Discrete cosine transform (DCT)
H.261[9]
Motion JPEG[9]
MPEG-1 Part 2[10]
MPEG-2 Part 2 (H.262)[10]
MPEG-4 Part 2 (H.263)[9]
Advanced Video Coding (AVC / H.264 / MPEG-4 AVC)[9] (may also be lossless, even in certain video sections)
High Efficiency Video Coding (HEVC / H.265)[9]
Ogg Theora (noted for its lack of patent restrictions)
VC-1
Wavelet compression
Motion JPEG 2000
Dirac
Sorenson video codec
Audio[edit]
Further information: Audio coding format and Audio data compression
General[edit]
Modified discrete cosine transform (MDCT)
Dolby Digital (AC-3)
Adaptive Transform Acoustic Coding (ATRAC)
MPEG Layer III (MP3)[11]
Advanced Audio Coding (AAC / MP4 Audio)[12]
Vorbis
Windows Media Audio (WMA) (Standard and Pro profiles are lossy. WMA Lossless is also available.)
LDAC[13][14]
Opus (Notable for lack of patent restrictions, low delay, and high quality speech and general audio.)
Adaptive differential pulse-code modulation (ADPCM)
Master Quality Authenticated (MQA)
MPEG-1 Audio Layer II (MP2)
Musepack (based on Musicam)
aptX/ aptX-HD[15]
Speech[edit]
Further information: Speech encoding
Linear predictive coding (LPC)
Adaptive predictive coding (APC)
Code-excited linear prediction (CELP)
Algebraic code-excited linear prediction (ACELP)
Relaxed code-excited linear prediction (RCELP)
Low-delay CELP (LD-CELP)
Adaptive Multi-Rate (used in GSM and 3GPP)
Codec2 (noted for its lack of patent restrictions)
Speex (noted for its lack of patent restrictions)
Modified discrete cosine transform (MDCT)
AAC-LD
Constrained Energy Lapped Transform (CELT)
Opus (mostly for real-time applications)
Other data[edit]
Researchers have (semi-seriously) performed lossy compression on text by either using a thesaurus to substitute short words for long ones, or generative text techniques,[16] although these sometimes fall into the related category of lossy data conversion.

Lowering resolution[edit]
A general kind of lossy compression is to lower the resolution of an image, as in image scaling, particularly decimation. One may also remove less "lower information" parts of an image, such as by seam carving. Many media transforms, such as Gaussian blur, are, like lossy compression, irreversible: the original signal cannot be reconstructed from the transformed signal. However, in general these will have the same size as the original, and are not a form of compression. Lowering resolution has practical uses, as the NASA New Horizons craft transmitted thumbnails of its encounter with Pluto-Charon before it sent the higher resolution images. Another solution for slow connections is the usage of Image interlacing which progressively defines the image. Thus a partial transmission is enough to preview the final image, in a lower resolution version, without creating a scaled and a full version too.[citation needed]

See also[edit]
Data compression
Lossless compression
Compression artifact
Rateâdistortion theory
List of codecs
Lenna
Image scaling
Seam carving
Transcoding
Notes[edit]

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Abedi, M.; Sun, B.; Zheng, Z. (July 2019). "A Sinusoidal-Hyperbolic Family of Transforms With Potential Applications in Compressive Sensing". IEEE Transactions on Image Processing. 28 (7): 3571â3583. doi:10.1109/TIP.2019.2912355. PMIDÂ 31071031.

^ European Society of Radiology (2011). "Usability of irreversible image compression in radiological imaging. A position paper by the European Society of Radiology (ESR)". Insights Imaging. 2 (2): 103â115. doi:10.1007/s13244-011-0071-x. PMCÂ 3259360. PMIDÂ 22347940.

^ "Data compression". Encyclopedia Britannica. Retrieved 13 August 2019.

^ Ahmed, Nasir; Natarajan, T.; Rao, K. R. (January 1974), "Discrete Cosine Transform", IEEE Transactions on Computers, C-23 (1): 90â93, doi:10.1109/T-C.1974.223784

^ "T.81 â DIGITAL COMPRESSION AND CODING OF CONTINUOUS-TONE STILL IMAGES â REQUIREMENTS AND GUIDELINES" (PDF). CCITT. September 1992. Retrieved 12 July 2019.

^ âAlthough one main goal of digital audio perceptual coders is data reduction, this is not a necessary characteristic. As we shall see, perceptual coding can be used to improve the representation of digital audio through advanced bit allocation.â Masking and Perceptual Coding, Victor Lombardi, noisebetweenstations.com

^ Svetlik, Joe (December 5, 2016). "MP3s make you less happy, study says". What Hi Fi?. What Hi Fi?. Retrieved December 17, 2018.

^ "New jpegtran features". sylvana.net. Retrieved 2019-09-20.

^ a b c d e f StankoviÄ, Radomir S.; Astola, Jaakko T. (2012). "Reminiscences of the Early Work in DCT: Interview with K.R. Rao" (PDF). Reprints from the Early Days of Information Sciences. 60. Retrieved 13 October 2019.

^ a b K. R. Rao and J. J. Hwang, Techniques and Standards for Image, Video, and Audio Coding, Prentice Hall, 1996; JPEG: Chapter 8; H.261: Chapter 9; MPEG-1: Chapter 10;  MPEG-2: Chapter 11.

^ Guckert, John (Spring 2012). "The Use of FFT and MDCT in MP3 Audio Compression" (PDF). University of Utah. Retrieved 14 July 2019.

^ Brandenburg, Karlheinz (1999). "MP3 and AAC Explained" (PDF). Archived (PDF) from the original on 2017-02-13.

^ Darko, John H. (2017-03-29). "The inconvenient truth about Bluetooth audio". DAR__KO. Archived from the original on 2018-01-14. Retrieved 2018-01-13.

^ Ford, Jez (2015-08-24). "What is Sony LDAC, and how does it do it?". AVHub. Retrieved 2018-01-13.

^ Ford, Jez (2016-11-22). "aptX HD - lossless or lossy?". AVHub. Retrieved 2018-01-13.

^ I. H. WITTEN;  etÂ al. "Semantic and Generative Models for Lossy Text Compression" (PDF). The Computer Journal. Retrieved 2007-10-13.


External links[edit]
Lossy audio formats, comparing the speed and compression strength of five lossy audio formats.
Data compression basics, including chapters on lossy compression of images, audio and video.
Lossy PNG image compression (research)
(Wayback Machine copy)

Using lossy GIF/PNG compression for the web (article)
JPG for Archiving, comparing the suitability of JPG and lossless compression for image archives
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteData compression methodsLosslessEntropy type
Arithmetic
Asymmetric numeral systems
Golomb
Huffman
Adaptive
Canonical
Modified
Range
Shannon
ShannonâFano
ShannonâFanoâElias
Tunstall
Unary
Universal
Exp-Golomb
Fibonacci
Gamma
Levenshtein
Dictionary type
Byte pair encoding
LempelâZiv
842
Brotli
Deflate
LZ4
LZFSE
LZJB
LZMA
LZO
LZRW
LZS
LZSS
LZW
LZWL
LZX
Snappy
Zstandard
Other types
BWT
CTW
Delta
DMC
DPCM
LDCT
MTF
PAQ
PPM
RLE
LossyTransform type
Discrete cosine transform
DCT
MDCT
DST
FFT
Wavelet
Daubechies
DWT
SPIHT
Predictive type
DPCM
ADPCM
LPC
ACELP
CELP
LAR
LSP
WLPC
Motion
Compensation
Estimation
Vector
Psychoacoustic
AudioConcepts
Bit rate
ABR
CBR
VBR
Companding
Convolution
Dynamic range
Latency
NyquistâShannon theorem
Sampling
Sound quality
Speech coding
Sub-band coding
Codec parts
A-law
Î¼-law
DPCM
ADPCM
DM
FT
FFT
LPC
ACELP
CELP
LAR
LSP
WLPC
MDCT
Psychoacoustic model
ImageConcepts
Chroma subsampling
Coding tree unit
Color space
Compression artifact
Image resolution
Macroblock
Pixel
PSNR
Quantization
Standard test image
Methods
Chain code
DCT
Deflate
Fractal
KLT
LP
RLE
Wavelet
Daubechies
DWT
EZW
SPIHT
VideoConcepts
Bit rate
ABR
CBR
VBR
Display resolution
Frame
Frame rate
Frame types
Interlace
Video characteristics
Video quality
Codec parts
DCT
DPCM
Deblocking filter
Lapped transform
Motion
Compensation
Estimation
Vector
Wavelet
Daubechies
DWT
Theory
Entropy
Grammar
Information theory
Timeline
Kolmogorov complexity
Quantization
Rateâdistortion
Redundancy

 Compression formats
 Compression software (codecs)





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Lossy_compression&oldid=1062484788"
		Categories: Data compressionLossy compression algorithmsHidden categories: Articles with short descriptionShort description matches WikidataAll articles with unsourced statementsArticles with unsourced statements from November 2019
	
