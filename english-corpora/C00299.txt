
Title:
Markov chain Monte Carlo
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Class of dependent sampling algorithms
.mw-parser-output .sidebar{width:22em;float:right;clear:right;margin:0.5em 0 1em 1em;background:#f8f9fa;border:1px solid #aaa;padding:0.2em;text-align:center;line-height:1.4em;font-size:88%;border-collapse:collapse;display:table}body.skin-minerva .mw-parser-output .sidebar{display:table!important;float:right!important;margin:0.5em 0 1em 1em!important}.mw-parser-output .sidebar-subgroup{width:100%;margin:0;border-spacing:0}.mw-parser-output .sidebar-left{float:left;clear:left;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-none{float:none;clear:both;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-outer-title{padding:0 0.4em 0.2em;font-size:125%;line-height:1.2em;font-weight:bold}.mw-parser-output .sidebar-top-image{padding:0.4em}.mw-parser-output .sidebar-top-caption,.mw-parser-output .sidebar-pretitle-with-top-image,.mw-parser-output .sidebar-caption{padding:0.2em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-pretitle{padding:0.4em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-title,.mw-parser-output .sidebar-title-with-pretitle{padding:0.2em 0.8em;font-size:145%;line-height:1.2em}.mw-parser-output .sidebar-title-with-pretitle{padding:0.1em 0.4em}.mw-parser-output .sidebar-image{padding:0.2em 0.4em 0.4em}.mw-parser-output .sidebar-heading{padding:0.1em 0.4em}.mw-parser-output .sidebar-content{padding:0 0.5em 0.4em}.mw-parser-output .sidebar-content-with-subgroup{padding:0.1em 0.4em 0.2em}.mw-parser-output .sidebar-above,.mw-parser-output .sidebar-below{padding:0.3em 0.8em;font-weight:bold}.mw-parser-output .sidebar-collapse .sidebar-above,.mw-parser-output .sidebar-collapse .sidebar-below{border-top:1px solid #aaa;border-bottom:1px solid #aaa}.mw-parser-output .sidebar-navbar{text-align:right;font-size:115%;padding:0 0.4em 0.4em}.mw-parser-output .sidebar-list-title{padding:0 0.4em;text-align:left;font-weight:bold;line-height:1.6em;font-size:105%}.mw-parser-output .sidebar-list-title-c{padding:0 0.4em;text-align:center;margin:0 3.3em}@media(max-width:720px){body.mediawiki .mw-parser-output .sidebar{width:100%!important;clear:both;float:none!important;margin-left:0!important;margin-right:0!important}}Part of a series onBayesian statistics
Theory
Admissible decision rule
Bayesian efficiency
Bayesian epistemology
Bayesian probability
Probability interpretations
Bayes' theorem
Bayes factor
Bayesian inference
Bayesian network
Prior
Posterior
Likelihood
Conjugate prior
Posterior predictive
Hyperparameter
Hyperprior
Principle of indifference
Principle of maximum entropy
Empirical Bayes method
Cromwell's rule
Bernsteinâvon Mises theorem
Schwarz criterion
Credible interval
Maximum a posteriori estimation
Radical probabilism

Techniques
Bayesian linear regression
Bayesian estimator
Approximate Bayesian computation
Markov chain Monte Carlo

Â Mathematics portal.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vte
In statistics, Markov chain Monte Carlo (MCMC) methods comprise a class of algorithms for sampling from a probability distribution. By constructing a Markov chain that has the desired distribution as its equilibrium distribution, one can obtain a sample of the desired distribution by recording states from the chain. The more steps are included, the more closely the distribution of the sample matches the actual desired distribution. Various algorithms exist for constructing chains, including the MetropolisâHastings algorithm.

Contents

1 Application domains
2 General explanation
3 Reducing correlation
4 Examples

4.1 Random walk
4.2 Interacting particle methods
4.3 Markov Chain quasiâMonte Carlo (MCQMC).[15][16]


5 Convergence
6 Software
7 See also
8 References

8.1 Citations
8.2 Sources


9 Further reading



Application domains[edit]
MCMC methods are primarily used for calculating numerical approximations of multi-dimensional integrals, for example in Bayesian statistics, computational physics,[1] computational biology[2] and computational linguistics.[3][4]
In Bayesian statistics, the recent development of MCMC methods has made it possible to compute large hierarchical models that require integrations over hundreds to thousands of unknown parameters.[5]
In rare event sampling, they are also used for generating samples that gradually populate the rare failure region.[citation needed]

General explanation[edit]
  Convergence of the MetropolisâHastings algorithm. Markov chain Monte Carlo attempts to approximate the blue distribution with the orange distribution.
Markov chain Monte Carlo methods create samples from a continuous random variable, with probability density proportional to a known function. These samples can be used to evaluate an integral over that variable, as its expected value or variance.
Practically, an ensemble of chains is generally developed, starting from a set of points arbitrarily chosen and sufficiently distant from each other. These chains are stochastic processes of "walkers" which move around randomly according to an algorithm that looks for places with a reasonably high contribution to the integral to move into next, assigning them higher probabilities.
Random walk Monte Carlo methods are a kind of random simulation or Monte Carlo method. However, whereas the random samples of the integrand used in a conventional Monte Carlo integration are statistically independent, those used in MCMC are autocorrelated. Correlations of samples introduces the need to use the Markov chain central limit theorem when estimating the error of mean values.
These algorithms create Markov chains such that they have an equilibrium distribution which is proportional to the function given.

Reducing correlation[edit]
While MCMC methods were created to address multi-dimensional problems better than generic Monte Carlo algorithms, when the number of dimensions rises they too tend to suffer the curse of dimensionality: regions of higher probability tend to stretch and get lost in an increasing volume of space that contributes little to the integral. One way to address this problem could be shortening the steps of the walker, so that it doesn't continuously try to exit the highest probability region, though this way the process would be highly autocorrelated and expensive (i.e. many steps would be required for an accurate result). More sophisticated methods such as Hamiltonian Monte Carlo and the Wang and Landau algorithm use various ways of reducing this autocorrelation, while managing to keep the process in the regions that give a higher contribution to the integral. These algorithms usually rely on a more complicated theory and are harder to implement, but they usually converge faster.

Examples[edit]
Random walk[edit]
MetropolisâHastings algorithm: This method generates a Markov chain using a proposal density for new steps and a method for rejecting some of the proposed moves. It is actually a general framework which includes as special cases the very first and simpler MCMC (Metropolis algorithm) and many more recent alternatives listed below.
Gibbs sampling: This method requires all the conditional distributions of the target distribution to be sampled exactly. When drawing from the full-conditional distributions is not straightforward other samplers-within-Gibbs are used (e.g., see [6][7]). Gibbs sampling is popular partly because it does not require any 'tuning'. Algorithm structure of the Gibbs sampling highly resembles that of the coordinate ascent variational inference in that both algorithms utilize the full-conditional distributions in the updating procedure.[8]
Metropolis-adjusted Langevin algorithm and other methods that rely on the gradient (and possibly second derivative) of the log target density to propose steps that are more likely to be in the direction of higher probability density.[9]
Pseudo-marginal MetropolisâHastings: This method replaces the evaluation of the density of the target distribution with an unbiased estimate and is useful when the target density is not available analytically, e.g. latent variable models.
Slice sampling: This method depends on the principle that one can sample from a distribution by sampling uniformly from the region under the plot of its density function.  It alternates uniform sampling in the vertical direction with uniform sampling from the horizontal 'slice' defined by the current vertical position.
Multiple-try Metropolis: This method is a variation of the MetropolisâHastings algorithm that allows multiple trials at each point. By making it possible to take larger steps at each iteration, it helps address the curse of dimensionality.
Reversible-jump: This method is a variant of the MetropolisâHastings algorithm that allows proposals that change the dimensionality of the space.[10]  Markov chain Monte Carlo methods that change dimensionality have long been used in statistical physics applications, where for some problems a distribution that is a grand canonical ensemble is used (e.g., when the number of molecules in a box is variable).  But the reversible-jump variant is useful when doing Markov chain Monte Carlo or Gibbs sampling over nonparametric Bayesian models such as those involving the Dirichlet process or Chinese restaurant process, where the number of mixing components/clusters/etc. is automatically inferred from the data.
Hamiltonian (or Hybrid) Monte Carlo (HMC): Tries to avoid random walk behaviour by introducing an auxiliary momentum vector and implementing Hamiltonian dynamics, so the potential energy function is the target density. The momentum samples are discarded after sampling. The end result of Hybrid Monte Carlo is that proposals move across the sample space in larger steps; they are therefore less correlated and converge to the target distribution more rapidly.
Interacting particle methods[edit]
Interacting MCMC methodologies are a class of mean-field particle methods for obtaining random samples from a sequence of probability distributions with an increasing level of sampling complexity.[11] These probabilistic models include path space state models with increasing time horizon, posterior distributions w.r.t. sequence of partial observations, increasing constraint level sets for conditional distributions, decreasing temperature schedules associated with some Boltzmann-Gibbs distributions, and many others. In principle, any Markov chain Monte Carlo sampler can be turned into an interacting Markov chain Monte Carlo sampler. These interacting Markov chain Monte Carlo samplers can be interpreted as a way to run in parallel a sequence of Markov chain Monte Carlo samplers. For instance, interacting simulated annealing algorithms are based on independent Metropolis-Hastings moves interacting sequentially with a selection-resampling type mechanism. In contrast to traditional Markov chain Monte Carlo methods, the precision parameter of this class of interacting Markov chain Monte Carlo samplers is only related to the number of interacting Markov chain Monte Carlo samplers. These advanced particle methodologies belong to the class of Feynman-Kac particle models,[12][13]  also called Sequential Monte Carlo or particle filter methods in Bayesian inference and signal processing communities.[14] Interacting Markov chain Monte Carlo methods can also be interpreted as a mutation-selection genetic particle algorithm with Markov chain Monte Carlo mutations.

Markov Chain quasiâMonte Carlo (MCQMC).[15][16][edit]
The advantage of low-discrepancy sequences in lieu of random numbers for simple independent Monte Carlo sampling is well known.[17] This procedure, known as Quasi-Monte Carlo method (QMC),[18] yields an integration error that decays at a superior rate to that obtained by IID sampling, by the Koksma-Hlawka inequality. Empirically it allows the reduction of both estimation error and convergence time by an order of magnitude.[citation needed] The Array-RQMC method combines randomized quasiâMonte Carlo and Markov chain simulation by simulating 
  
    
      
        n
      
    
    {\displaystyle n}
  
 chains simultaneously in a way that the empirical distribution of the 
  
    
      
        n
      
    
    {\displaystyle n}
  
 states at any given step is a better approximation of the true distribution of the chain than with ordinary MCMC.[19] In empirical experiments, the variance of the average of a function of the state sometimes converges at rate 
  
    
      
        O
        (
        
          n
          
            â
            2
          
        
        )
      
    
    {\displaystyle O(n^{-2})}
  
 or even faster, instead of the 
  
    
      
        O
        (
        
          n
          
            â
            1
          
        
        )
      
    
    {\displaystyle O(n^{-1})}
  
 Monte Carlo rate.[20]

Convergence[edit]
Usually it is not hard to construct a Markov chain with the desired properties. The more difficult problem is to determine how many steps are needed to converge to the stationary distribution within an acceptable error.[21] A good chain will have rapid mixing: the stationary distribution is reached quickly starting from an arbitrary position. A standard empirical method to assess convergence is to run several independent simulated Markov chains and check that the ratio of inter-chain to intra-chain variances for all the parameters sampled is close to 1.[21][22]
Typically, Markov chain Monte Carlo sampling can only approximate the target distribution, as there is always some residual effect of the starting position. More sophisticated Markov chain Monte Carlo-based algorithms such as coupling from the past can produce exact samples, at the cost of additional computation and an unbounded (though finite in expectation) running time.
Many random walk Monte Carlo methods move around the equilibrium distribution in relatively small steps, with no tendency for the steps to proceed in the same direction. These methods are easy to implement and analyze, but unfortunately it can take a long time for the walker to explore all of the space. The walker will often double back and cover ground already covered.
Further consideration of convergence is at Markov chain central limit theorem. See [23] for a discussion of the theory related to convergence and stationarity of the Metropolis-Hastings algorithm.

Software[edit]
Several software programs provide MCMC sampling capabilities, for example:

Packages that use dialects of the BUGS model language:
WinBUGS / OpenBUGS/ MultiBUGS
JAGS
MCSim
Python (programming language) with the packages PyMC3, Paramonte, and vandal.
R (programming language) with the packages adaptMCMC, atmcmc, BRugs, mcmc, MCMCpack, ramcmc, rjags, rstan, etc.
Stan
TensorFlow Probability (probabilistic programming library built on TensorFlow)
See also[edit]
Coupling from the past
Metropolis-adjusted Langevin algorithm
Markov chain central limit theorem
Data Augmentation MCMC 
References[edit]
Citations[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Kasim, M.F.; Bott, A.F.A.; Tzeferacos, P.; Lamb, D.Q.; Gregori, G.; Vinko, S.M. (September 2019). "Retrieving fields from proton radiography without source profiles". Physical Review E. 100 (3): 033208. arXiv:1905.12934. Bibcode:2019PhRvE.100c3208K. doi:10.1103/PhysRevE.100.033208. PMIDÂ 31639953. S2CIDÂ 170078861.

^ Gupta, Ankur; Rawlings, James B. (April 2014). "Comparison of Parameter Estimation Methods in Stochastic Chemical Kinetic Models: Examples in Systems Biology". AIChE Journal. 60 (4): 1253â1268. doi:10.1002/aic.14409. PMCÂ 4946376. PMIDÂ 27429455.

^ See Gill 2008.

^ See Robert & Casella 2004.

^ Banerjee, Sudipto; Carlin, Bradley P.; Gelfand, Alan P. (2014-09-12). Hierarchical Modeling and Analysis for Spatial Data (SecondÂ ed.). CRC Press. p.Â xix. ISBNÂ 978-1-4398-1917-3.

^ Gilks, W. R.; Wild, P. (1992-01-01). "Adaptive Rejection Sampling for Gibbs Sampling". Journal of the Royal Statistical Society. Series C (Applied Statistics). 41 (2): 337â348. doi:10.2307/2347565. JSTORÂ 2347565.

^ Gilks, W. R.; Best, N. G.; Tan, K. K. C. (1995-01-01). "Adaptive Rejection Metropolis Sampling within Gibbs Sampling". Journal of the Royal Statistical Society. Series C (Applied Statistics). 44 (4): 455â472. doi:10.2307/2986138. JSTORÂ 2986138.

^ Lee, Se Yoon (2021). "Gibbs sampler and coordinate ascent variational inference: A set-theoretical review". Communications in Statistics - Theory and Methods: 1â21. arXiv:2008.01006. doi:10.1080/03610926.2021.1921214. S2CIDÂ 220935477.

^ See Stramer 1999.

^ See Green 1995.

^ Del Moral, Pierre (2013). Mean field simulation for Monte Carlo integration. Chapman & Hall/CRC Press. p.Â 626.

^ Del Moral, Pierre (2004). Feynman-Kac formulae. Genealogical and interacting particle approximations. Springer. p.Â 575.

^ Del Moral, Pierre; Miclo, Laurent (2000). "Branching and Interacting Particle Systems Approximations of Feynman-Kac Formulae with Applications to Non-Linear Filtering".  In Jacques AzÃ©ma; Michel Ledoux; Michel Ãmery; Marc Yor (eds.). SÃ©minaire de ProbabilitÃ©s XXXIV (PDF). Lecture Notes in Mathematics. Vol.Â 1729. pp.Â 1â145. doi:10.1007/bfb0103798. ISBNÂ 978-3-540-67314-9.

^ Del Moral, Pierre (2006). "Sequential Monte Carlo samplers". Journal of the Royal Statistical Society. Series B (Statistical Methodology). 68 (3): 411â436. arXiv:cond-mat/0212648. doi:10.1111/j.1467-9868.2006.00553.x. S2CIDÂ 12074789.

^ Chen, S.; Dick, Josef; Owen, Art B. (2011). "Consistency of Markov chain quasi-Monte Carlo on continuous state spaces". Annals of Statistics. 39 (2): 673â701. arXiv:1105.1896. doi:10.1214/10-AOS831.

^ Tribble, Seth D. (2007). Markov chain Monte Carlo algorithms using completely uniformly distributed driving sequences (Diss.). Stanford University. ProQuestÂ 304808879.

^ Papageorgiou, Anargyros; Traub, J. F. (1996). "Beating Monte Carlo". Risk. 9 (6): 63â65.

^ Sobol, Ilya M (1998). "On quasi-monte carlo integrations". Mathematics and Computers in Simulation. 47 (2): 103â112. doi:10.1016/s0378-4754(98)00096-2.

^ L'Ecuyer, P.; LÃ©cot, C.; Tuffin, B. (2008). "A Randomized Quasi-Monte Carlo Simulation Method for Markov Chains" (PDF). Operations Research. 56 (4): 958â975. doi:10.1287/opre.1080.0556.

^ L'Ecuyer, P.; Munger, D.; LÃ©cot, C.; Tuffin, B. (2018). "Sorting Methods and Convergence Rates for Array-RQMC: Some Empirical Comparisons". Mathematics and Computers in Simulation. 143: 191â201. doi:10.1016/j.matcom.2016.07.010.

^ Jump up to: a b Gelman, A.; Rubin, D.B. (1992). "Inference from iterative simulation using multiple sequences (with discussion)" (PDF). Statistical Science. 7 (4): 457â511. Bibcode:1992StaSc...7..457G. doi:10.1214/ss/1177011136.

^ Cowles, M.K.; Carlin, B.P. (1996). "Markov chain Monte Carlo convergence diagnostics: a comparative review". Journal of the American Statistical Association. 91 (434): 883â904. CiteSeerXÂ 10.1.1.53.3445. doi:10.1080/01621459.1996.10476956.

^ Hill, S. D.; Spall, J. C. (2019). "Stationarity and Convergence of the Metropolis-Hastings Algorithm: Insights into Theoretical Aspects". IEEE Control Systems Magazine. 39 (1): 56â67. doi:10.1109/MCS.2018.2876959. S2CIDÂ 58672766.


Sources[edit]
.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents>ul{margin-left:0}.mw-parser-output .refbegin-hanging-indents>ul>li{margin-left:0;padding-left:3.2em;text-indent:-3.2em}.mw-parser-output .refbegin-hanging-indents ul,.mw-parser-output .refbegin-hanging-indents ul li{list-style:none}@media(max-width:720px){.mw-parser-output .refbegin-hanging-indents>ul>li{padding-left:1.6em;text-indent:-1.6em}}.mw-parser-output .refbegin-columns{margin-top:0.3em}.mw-parser-output .refbegin-columns ul{margin-top:0}.mw-parser-output .refbegin-columns li{page-break-inside:avoid;break-inside:avoid-column}
Christophe Andrieu, Nando De Freitas, Arnaud Doucet and Michael I. Jordan An Introduction to MCMC for Machine Learning, 2003
Asmussen, SÃ¸ren; Glynn, Peter W. (2007). Stochastic Simulation: Algorithms and Analysis. Stochastic Modelling and Applied Probability. Vol.Â 57. Springer.
Atzberger, P. "An Introduction to Monte-Carlo Methods" (PDF).
Berg, Bernd A. (2004). Markov Chain Monte Carlo Simulations and Their Statistical Analysis. World Scientific.
Bolstad, William M. (2010). Understanding Computational Bayesian Statistics. Wiley. ISBNÂ 978-0-470-04609-8.
Casella, George; George, Edward I. (1992). "Explaining the Gibbs sampler". The American Statistician. 46 (3): 167â174. CiteSeerXÂ 10.1.1.554.3993. doi:10.2307/2685208. JSTORÂ 2685208.
Gelfand, A.E.; Smith, A.F.M. (1990). "Sampling-Based Approaches to Calculating Marginal Densities". Journal of the American Statistical Association. 85 (410): 398â409. CiteSeerXÂ 10.1.1.512.2330. doi:10.1080/01621459.1990.10476213.
Gelman, Andrew; Carlin, John B.; Stern, Hal S.; Rubin, Donald B. (1995). Bayesian Data Analysis (1stÂ ed.). Chapman and Hall. (See Chapter 11.)
Geman, S.; Geman, D. (1984). "Stochastic Relaxation, Gibbs Distributions, and the Bayesian Restoration of Images". IEEE Transactions on Pattern Analysis and Machine Intelligence. 6 (6): 721â741. doi:10.1109/TPAMI.1984.4767596. PMIDÂ 22499653. S2CIDÂ 5837272.
Gilks, W.R.; Richardson, S.; Spiegelhalter, D.J. (1996). Markov Chain Monte Carlo in Practice. Chapman and Hall/CRC.
Gill, Jeff (2008). Bayesian methods: a social and behavioral sciences approach (2ndÂ ed.). Chapman and Hall/CRC. ISBNÂ 978-1-58488-562-7.
Green, P.J. (1995). "Reversible-jump Markov chain Monte Carlo computation and Bayesian model determination". Biometrika. 82 (4): 711â732. CiteSeerXÂ 10.1.1.407.8942. doi:10.1093/biomet/82.4.711.
Neal, Radford M. (2003). "Slice Sampling". Annals of Statistics. 31 (3): 705â767. doi:10.1214/aos/1056562461. JSTORÂ 3448413.
Neal, Radford M. (1993). "Probabilistic Inference Using Markov Chain Monte Carlo Methods".
Robert, Christian P.; Casella, G. (2004). Monte Carlo Statistical Methods (2ndÂ ed.). Springer. ISBNÂ 978-0-387-21239-5.
Rubinstein, R.Y.; Kroese, D.P. (2007). Simulation and the Monte Carlo Method (2ndÂ ed.). Wiley. ISBNÂ 978-0-470-17794-5.
Smith, R.L. (1984). "Efficient Monte Carlo Procedures for Generating Points Uniformly Distributed Over Bounded Regions". Operations Research. 32 (6): 1296â1308. doi:10.1287/opre.32.6.1296. hdl:2027.42/7681.
Spall, J.C. (April 2003). "Estimation via Markov Chain Monte Carlo". IEEE Control Systems Magazine. 23 (2): 34â45. doi:10.1109/mcs.2003.1188770.
Stramer, O.; Tweedie, R. (1999). "Langevin-Type Models II: Self-Targeting Candidates for MCMC Algorithms". Methodology and Computing in Applied Probability. 1 (3): 307â328. doi:10.1023/A:1010090512027. S2CIDÂ 1512689.

Further reading[edit]

Diaconis, Persi (April 2009). "The Markov chain Monte Carlo revolution" (PDF). Bull. Amer. Math. Soc. 46 (2): 179â205. doi:10.1090/s0273-0979-08-01238-x. S 0273-0979(08)01238-X.
Press, W.H.; Teukolsky, S.A.; Vetterling, W.T.; Flannery, B.P. (2007), "Section 15.8. Markov Chain Monte Carlo", Numerical Recipes: The Art of Scientific Computing (3rdÂ ed.), Cambridge University Press, ISBNÂ 978-0-521-88068-8
Richey, Matthew (May 2010). "The Evolution of Markov Chain Monte Carlo Methods" (PDF). The American Mathematical Monthly. 117 (5): 383â413. CiteSeerXÂ 10.1.1.295.4478. doi:10.4169/000298910x485923. S2CIDÂ 13630404.





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Markov_chain_Monte_Carlo&oldid=1066364243"
		Categories: Markov chain Monte CarloMonte Carlo methodsComputational statisticsMarkov modelsBayesian estimationHidden categories: Articles with short descriptionShort description is different from WikidataAll articles with unsourced statementsArticles with unsourced statements from June 2021Articles with unsourced statements from April 2015
	
