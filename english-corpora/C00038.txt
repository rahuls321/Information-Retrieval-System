
Title:
Open-source software
Text:

		From Wikipedia, the free encyclopedia
		
This is the latest accepted revision, reviewed on 2 February 2022.



		
		
		
		Jump to navigation
		Jump to search
		Software licensed to ensure source code usage rights
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Open-source software shares similarities with free software and is part of the broader term free and open-source software.
For other uses, see OSS.



For broader coverage of this topic, see Open-source-software movement.
  A screenshot of Manjaro running the Cinnamon desktop environment, Firefox accessing Wikipedia which uses MediaWiki, LibreOffice Writer, Vim, GNOME Calculator, VLC and Nemo file manager, all of which are open-source software.
Open-source software (OSS) is computer software that is released under a license in which the copyright holder grants users the rights to use, study, change, and distribute the software and its source code to anyone and for any purpose.[1][2] Open-source software may be developed in a collaborative public manner. Open-source software is a prominent example of open collaboration, meaning any capable user is able to participate online in development, making the number of possible contributors indefinite. The ability to examine the code facilitates public trust in the software.[3]
Open-source software development can bring in diverse perspectives beyond those of a single company. A 2008 report by the Standish Group stated that adoption of open-source software models has resulted in savings of about $60Â billion per year for consumers.[4][5]
Open source code can be used for studying and allows capable end users to adapt software to their personal needs in a similar way user scripts and custom style sheets allow for web sites, and eventually publish the modification as a fork for users with similar preferences, and directly submit possible improvements as pull requests.

Contents

1 History

1.1 End of 1990s: Foundation of the Open Source Initiative


2 Definitions

2.1 Open-source software licensing
2.2 Certifications


3 Open-source software development

3.1 Development model
3.2 Advantages and disadvantages
3.3 Development tools
3.4 Organizations
3.5 Funding


4 Comparisons with other software licensing/development models

4.1 Closed source / proprietary software
4.2 Free software
4.3 Open-source versus source-available
4.4 Open-sourcing


5 Current applications and adoption

5.1 Widely used open-source software


6 Extensions for non-software use
7 See also
8 References
9 Further reading
10 External links



History[edit]
Further information: History of free and open-source software
End of 1990s: Foundation of the Open Source Initiative[edit]
In the early days of computing, programmers and developers shared software in order to learn from each other and evolve the field of computing. Eventually, the open-source notion moved to the wayside of commercialization of software in the years 1970â1980. However, academics still often developed software collaboratively. Examples are Donald Knuth in 1979 with the TeX typesetting system[6] and Richard Stallman in 1983 with the GNU operating system.[7] In 1997, Eric Raymond published The Cathedral and the Bazaar, a reflective analysis of the hacker community and free-software principles. The paper received significant attention in early 1998, and was one factor in motivating Netscape Communications Corporation to release their popular Netscape Communicator Internet suite as free software. This source code subsequently became the basis behind SeaMonkey, Mozilla Firefox, Thunderbird and KompoZer.
Netscape's act prompted Raymond and others to look into how to bring the Free Software Foundation's free software ideas and perceived benefits to the commercial software industry. They concluded that FSF's social activism was not appealing to companies like Netscape, and looked for a way to rebrand the free software movement to emphasize the business potential of sharing and collaborating on software source code.[8] The new term they chose was "open source", which was soon adopted by Bruce Perens, publisher Tim O'Reilly, Linus Torvalds, and others. The Open Source Initiative was founded in February 1998 to encourage use of the new term and evangelize open-source principles.[9]
While the Open Source Initiative sought to encourage the use of the new term and evangelize the principles it adhered to, commercial software vendors found themselves increasingly threatened by the concept of freely distributed software and universal access to an application's source code. Microsoft executive Jim Allchin publicly stated in 2001 that "open source is an intellectual property destroyer. I can't imagine something that could be worse than this for the software business and the intellectual-property business."[10] However, while Free and open-source software has historically played a role outside of the mainstream of private software development, companies as large as Microsoft have begun to develop official open-source presences on the Internet. IBM, Oracle, Google, and State Farm are just a few of the companies with a serious public stake in today's competitive open-source market. There has been a significant shift in the corporate philosophy concerning the development of FOSS.[11]
The free-software movement was launched in 1983. In 1998, a group of individuals advocated that the term free software should be replaced by open-source software (OSS) as an expression which is less ambiguous[12][13][14] and more comfortable for the corporate world.[15] Software developers may want to publish their software with an open-source license, so that anybody may also develop the same software or understand its internal functioning. With open-source software, generally, anyone is allowed to create modifications of it, port it to new operating systems and instruction set architectures, share it with others or, in some cases, market it. Scholars Casson and Ryan have pointed out several policy-based reasons for adoption of open source â in particular, the heightened value proposition from open source (when compared to most proprietary formats) in the following categories:

Security
Affordability
Transparency
Perpetuity
Interoperability
Flexibility
Localization â particularly in the context of local governments (who make software decisions). Casson and Ryan argue that "governments have an inherent responsibility and fiduciary duty to taxpayers" which includes the careful analysis of these factors when deciding to purchase proprietary software or implement an open-source option.[16]
The Open Source Definition presents an open-source philosophy and further defines the terms of use, modification and redistribution of open-source software. Software licenses grant rights to users which would otherwise be reserved by copyright law to the copyright holder. Several open-source software licenses have qualified within the boundaries of the Open Source Definition. The most prominent and popular example is the GNU General Public License (GPL), which "allows free distribution under the condition that further developments and applications are put under the same licence", thus also free.[17]
The open source label came out of a strategy session held on April 7, 1998, in Palo Alto in reaction to Netscape's January 1998 announcement of a source code release for Navigator (as Mozilla). A group of individuals at the session included Tim O'Reilly, Linus Torvalds, Tom Paquin, Jamie Zawinski, Larry Wall, Brian Behlendorf, Sameer Parekh, Eric Allman, Greg Olson, Paul Vixie, John Ousterhout, Guido van Rossum, Philip Zimmermann, John Gilmore and Eric S. Raymond.[18] They used the opportunity before the release of Navigator's source code to clarify a potential confusion caused by the ambiguity of the word "free" in English.
Many people claimed that the birth of the Internet, since 1969, started the open-source movement, while others do not distinguish between open-source and free software movements.[19]
The Free Software Foundation (FSF), started in 1985, intended the word "free" to mean freedom to distribute (or "free as in free speech") and not freedom from cost (or "free as in free beer"). Since a great deal of free software already was (and still is) free of charge, such free software became associated with zero cost, which seemed anti-commercial.[8]
The Open Source Initiative (OSI) was formed in February 1998 by Eric Raymond and Bruce Perens. With at least 20 years of evidence from case histories of closed software development versus open development already provided by the Internet developer community, the OSI presented the "open source" case to commercial businesses, like Netscape. The OSI hoped that the use of the label "open source", a term suggested by Christine Peterson[7][20] of the Foresight Institute at the strategy session, would eliminate ambiguity, particularly for individuals who perceive "free software" as anti-commercial. They sought to bring a higher profile to the practical benefits of freely available source code, and they wanted to bring major software businesses and other high-tech industries into open source. Perens attempted to register "open source" as a service mark for the OSI, but that attempt was impractical by trademark standards. Meanwhile, due to the presentation of Raymond's paper to the upper management at NetscapeâRaymond only discovered when he read the press release,[21] and was called by Netscape CEO Jim Barksdale's PA later in the dayâNetscape released its Navigator source code as open source, with favorable results.[22]

Definitions[edit]
  The logo of the Open Source Initiative
The Open Source Initiative's (OSI) definition is recognized by several governments internationally[23] as the standard or de facto definition. In addition, many of the world's largest open-source-software projects and contributors, including Debian, Drupal Association, FreeBSD Foundation, Linux Foundation, OpenSUSE Foundation, Mozilla Foundation, Wikimedia Foundation, Wordpress Foundation have committed[24] to upholding the OSI's mission and Open Source Definition through the OSI Affiliate Agreement.[25]
OSI uses The Open Source Definition to determine whether it considers a software license open source. The definition was based on the Debian Free Software Guidelines, written and adapted primarily by Perens.[26][27][28] Perens did not base his writing on the "four freedoms" from the Free Software Foundation (FSF), which were only widely available later.[29]
Under Perens' definition, open source is a broad software license that makes source code available to the general public with relaxed or non-existent restrictions on the use and modification of the code. It is an explicit "feature" of open source that it puts very few restrictions on the use or distribution by any organization or user, in order to enable the rapid evolution of the software.[30]
Despite initially accepting it,[31] Richard Stallman of the FSF now flatly opposes the term "Open Source" being applied to what they refer to as "free software". Although he agrees that the two terms describe "almost the same category of software", Stallman considers equating the terms incorrect and misleading.[32] Stallman also opposes the professed pragmatism of the Open Source Initiative, as he fears that the free software ideals of freedom and community are threatened by compromising on the FSF's idealistic standards for software freedom.[33] The FSF considers free software to be a subset of open-source software, and Richard Stallman explained that DRM software, for example, can be developed as open source, despite that it does not give its users freedom (it restricts them), and thus doesn't qualify as free software.[34]

Open-source software licensing[edit]
Main article: Open-source license
Further information: Free software license
See also: Free and open-source software Â§Â Licensing, and Software license
When an author contributes code to an open-source project (e.g., Apache.org) they do so under an explicit license (e.g., the Apache Contributor License Agreement) or an implicit license (e.g. the open-source license under which the project is already licensing code). Some open-source projects do not take contributed code under a license, but actually require joint assignment of the author's copyright in order to accept code contributions into the project.[35]
Examples of free software license / open-source licenses include Apache License, BSD license, GNU General Public License, GNU Lesser General Public License, MIT License, Eclipse Public License and Mozilla Public License.
The proliferation of open-source licenses is a negative aspect of the open-source movement because it is often difficult to understand the legal implications of the differences between licenses. With more than 180,000 open-source projects available and more than 1400 unique licenses, the complexity of deciding how to manage open-source use within "closed-source" commercial enterprises has dramatically increased. Some are home-grown, while others are modeled after mainstream FOSS licenses such as Berkeley Software Distribution ("BSD"), Apache, MIT-style (Massachusetts Institute of Technology), or GNU General Public License ("GPL"). In view of this, open-source practitioners are starting to use classification schemes in which FOSS licenses are grouped (typically based on the existence and obligations imposed by the copyleft provision; the strength of the copyleft provision).[36]
An important legal milestone for the open source / free software movement was passed in 2008, when the US federal appeals court ruled that free software licenses definitely do set legally binding conditions on the use of copyrighted work, and they are therefore enforceable under existing copyright law. As a result, if end-users violate the licensing conditions, their license disappears, meaning they are infringing copyright.[37]
Despite this licensing risk, most commercial software vendors are using open-source software in commercial products while fulfilling the license terms, e.g. leveraging the Apache license.[38]

Certifications[edit]
Certification can help to build user confidence. Certification could be applied to the simplest component, to a whole software system. The United Nations University International Institute for Software Technology,[39] initiated a project known as "The Global Desktop Project". This project aims to build a desktop interface that every end-user is able to understand and interact with, thus crossing the language and cultural barriers. The project would improve developing nations' access to information systems. UNU/IIST hopes to achieve this without any compromise in the quality of the software by introducing certifications.[40]

Open-source software development[edit]
Main article: Open-source software development model
Development model[edit]
In his 1997 essay The Cathedral and the Bazaar,[41] open-source evangelist Eric S. Raymond suggests a model for developing OSS known as the bazaar model. Raymond likens the development of software by traditional methodologies to building a cathedral, "carefully crafted by individual wizards or small bands of mages working in splendid isolation".[41] He suggests that all software should be developed using the bazaar style, which he described as "a great babbling bazaar of differing agendas and approaches."[41]
In the traditional model of development, which he called the cathedral model, development takes place in a centralized way. Roles are clearly defined. Roles include people dedicated to designing (the architects), people responsible for managing the project, and people responsible for implementation. Traditional software engineering follows the cathedral model.
The bazaar model, however, is different. In this model, roles are not clearly defined. Gregorio Robles[42] suggests that software developed using the bazaar model should exhibit the following patterns:

Users should be treated as co-developers
The users are treated like co-developers and so they should have access to the source code of the software. Furthermore, users are encouraged to submit additions to the software, code fixes for the software, bug reports, documentation, etc. Having more co-developers increases the rate at which the software evolves. Linus's law states, "Given enough eyeballs all bugs are shallow." This means that if many users view the source code, they will eventually find all bugs and suggest how to fix them. Note that some users have advanced programming skills, and furthermore, each user's machine provides an additional testing environment. This new testing environment offers the ability to find and fix a new bug.
Early releases
The first version of the software should be released as early as possible so as to increase one's chances of finding co-developers early.
Frequent integration
Code changes should be integrated (merged into a shared code base) as often as possible so as to avoid the overhead of fixing a large number of bugs at the end of the project life cycle. Some open-source projects have nightly builds where integration is done automatically on a daily basis.
Several versions
There should be at least two versions of the software. There should be a buggier version with more features and a more stable version with fewer features. The buggy version (also called the development version) is for users who want the immediate use of the latest features, and are willing to accept the risk of using code that is not yet thoroughly tested. The users can then act as co-developers, reporting bugs and providing bug fixes.
High modularization
The general structure of the software should be modular allowing for parallel development on independent components.
Dynamic decision-making structure
There is a need for a decision-making structure, whether formal or informal, that makes strategic decisions depending on changing user requirements and other factors. Compare with extreme programming.
Data suggests, however, that OSS is not quite as democratic as the bazaar model suggests. An analysis of five billion bytes of free/open-source code by 31,999 developers shows that 74% of the code was written by the most active 10% of authors. The average number of authors involved in a project was 5.1, with the median at 2.[43]

Advantages and disadvantages[edit]
Open-source software is usually easier to obtain than proprietary software, often resulting in increased use. Additionally, the availability of an open-source implementation of a standard can increase adoption of that standard.[44] It has also helped to build developer loyalty as developers feel empowered and have a sense of ownership of the end product.[45]
Moreover, lower costs of marketing and logistical services are needed for OSS. It is a good tool to promote a company's image, including its commercial products.[46] The OSS development approach has helped produce reliable, high quality software quickly and inexpensively.[47]
Open-source development offers the potential for a more flexible technology and quicker innovation. It is said to be more reliable since it typically has thousands of independent programmers testing and fixing bugs of the software. Open source is not dependent on the company or author that originally created it. Even if the company fails, the code continues to exist and be developed by its users. Also, it uses open standards accessible to everyone; thus, it does not have the problem of incompatible formats that may exist in proprietary software.
It is flexible because modular systems allow programmers to build custom interfaces, or add new abilities to it and it is innovative since open-source programs are the product of collaboration among a large number of different programmers. The mix of divergent perspectives, corporate objectives, and personal goals speeds up innovation.[48]
Moreover, free software can be developed in accordance with purely technical requirements. It does not require thinking about commercial pressure that often degrades the quality of the software. Commercial pressures make traditional software developers pay more attention to customers' requirements than to security requirements, since such features are somewhat invisible to the customer.[49]
It is sometimes said that the open-source development process may not be well defined and the stages in the development process, such as system testing and documentation may be ignored. However this is only true for small (mostly single programmer) projects. Larger, successful projects do define and enforce at least some rules as they need them to make the teamwork possible.[50][51] In the most complex projects these rules may be as strict as reviewing even minor change by two independent developers.[52]
Not all OSS initiatives have been successful; for example, SourceXchange and Eazel.[45] Software experts and researchers who are not convinced by open source's ability to produce quality systems identify the unclear process, the late defect discovery and the lack of any empirical evidence as the most important problems (collected data concerning productivity and quality).[53] It is also difficult to design a commercially sound business model around the open-source paradigm. Consequently, only technical requirements may be satisfied and not the ones of the market.[53] In terms of security, open source may allow hackers to know about the weaknesses or loopholes of the software more easily than closed-source software. It depends on control mechanisms in order to create effective performance of autonomous agents who participate in virtual organizations.[54]

Development tools[edit]
In OSS development, tools are used to support the development of the product and the development process itself.[55]
Revision control systems such as Concurrent Versions System (CVS) and later Subversion (SVN) and Git are examples of tools, often themselves open source, help manage the source code files and the changes to those files for a software project.[56] The projects are frequently stored in "repositories" that are hosted and published on source-code-hosting facilities such as Launchpad, GitHub, GitLab, and SourceForge.[57]
Open-source projects are often loosely organized with "little formalised process modelling or support", but utilities such as issue trackers are often used to organize open-source software development.[55] Commonly used bugtrackers include Bugzilla and Redmine.[58]
Tools such as mailing lists and IRC provide means of coordination among developers.[55] Centralized code hosting sites also have social features that allow developers to communicate.[57]

Organizations[edit]
Some of the "more prominent organizations" involved in OSS development include the Apache Software Foundation, creators of the Apache web server; the Linux Foundation, a nonprofit which as of 2012[update] employed Linus Torvalds, the creator of the Linux operating system kernel; the Eclipse Foundation, home of the Eclipse software development platform; the Debian Project, creators of the influential Debian GNU/Linux distribution; the Mozilla Foundation, home of the Firefox web browser; and OW2, European-born community developing open-source middleware. New organizations tend to have a more sophisticated governance model and their membership is often formed by legal entity members.[59]
Open Source Software Institute is a membership-based, non-profit (501 (c)(6)) organization established in 2001 that promotes the development and implementation of open source software solutions within US Federal, state and local government agencies. OSSI's efforts have focused on promoting adoption of open-source software programs and policies within Federal Government and Defense and Homeland Security communities.[60]
Open Source for America is a group created to raise awareness in the United States Federal Government about the benefits of open-source software. Their stated goals are to encourage the government's use of open source software, participation in open-source software projects, and incorporation of open-source community dynamics to increase government transparency.[61]
Mil-OSS is a group dedicated to the advancement of OSS use and creation in the military.[62]

Funding[edit]
Main article: Business models for open-source software
Companies whose business centers on the development of open-source software employ a variety of business models to solve the challenge of how to make money providing software that is by definition licensed free of charge. Each of these business strategies rests on the premise that users of open-source technologies are willing to purchase additional software features under proprietary licenses, or purchase other services or elements of value that complement the open-source software that is core to the business. This additional value can be, but not limited to, enterprise-grade features and up-time guarantees (often via a service-level agreement) to satisfy business or compliance requirements, performance and efficiency gains by features not yet available in the open source version, legal protection (e.g., indemnification from copyright or patent infringement), or professional support/training/consulting that are typical of proprietary software applications.

Comparisons with other software licensing/development models[edit]
Closed source / proprietary software[edit]
Main article: Comparison of open-source and closed-source software
The debate over open source vs. closed source (alternatively called proprietary software) is sometimes heated.
The top four reasons (as provided by Open Source Business Conference survey[63]) individuals or organizations choose open-source software are:

lower cost
security
no vendor 'lock in'
better quality
Since innovative companies no longer rely heavily on software sales, proprietary software has become less of a necessity.[64] As such, things like open-source content management systemâor CMSâdeployments are becoming more commonplace. In 2009,[65] the US White House switched its CMS system from a proprietary system to Drupal open source CMS. Further, companies like Novell (who traditionally sold software the old-fashioned way) continually debate the benefits of switching to open-source availability, having already switched part of the product offering to open source code.[66] In this way, open-source software provides solutions to unique or specific problems. As such, it is reported[67] that 98% of enterprise-level companies use open-source software offerings in some capacity.
With this market shift, more critical systems are beginning to rely on open-source offerings,[68] allowing greater funding (such as US Department of Homeland Security grants[68]) to help "hunt for security bugs." According to a pilot study of organizations adopting (or not adopting) OSS, the following factors of statistical significance were observed in the manager's beliefs: (a) attitudes toward outcomes, (b) the influences and behaviors of others, and (c) their ability to act.[69]
Proprietary source distributors have started to develop and contribute to the open-source community due to the market share shift, doing so by the need to reinvent their models in order to remain competitive.[70]
Many advocates argue that open-source software is inherently safer because any person can view, edit, and change code.[71] A study of the Linux source code has 0.17 bugs per 1000 lines of code while proprietary software generally scores 20â30 bugs per 1000 lines.[72]

Free software[edit]
Main article: Alternative terms for free software
See also: Comparison of free and open-source software licenses
According to the Free software movement's leader, Richard Stallman, the main difference is that by choosing one term over the other (i.e. either "open source" or "free software") one lets others know about what one's goals are: "Open source is a development methodology; free software is a social movement."[33] Nevertheless, there is significant overlap between open source software and free software.[34]
The FSF[73] said that the term "open source" fosters an ambiguity of a different kind such that it confuses the mere availability of the source with the freedom to use, modify, and redistribute it. On the other hand, the "free software" term was criticized for the ambiguity of the word "free" as "available at no cost", which was seen as discouraging for business adoption,[74] and for the historical ambiguous usage of the term.[8][75][76]
Developers have used the alternative terms Free and Open Source Software (FOSS), or Free/Libre and Open Source Software (FLOSS), consequently, to describe open-source software that is also free software.[77] While the definition of open source software is very similar to the FSF's free software definition[78] it was based on the Debian Free Software Guidelines, written and adapted primarily by Bruce Perens with input from Eric S. Raymond and others.[79]
The term "open source" was originally intended to be trademarkable; however, the term was deemed too descriptive, so no trademark exists.[80] The OSI would prefer that people treat open source as if it were a trademark, and use it only to describe software licensed under an OSI approved license.[81]
OSI Certified is a trademark licensed only to people who are distributing software licensed under a license listed on the Open Source Initiative's list.[82]

Open-source versus source-available[edit]
Main article: Source-available software
Although the OSI definition of "open-source software" is widely accepted, a small number of people and organizations use the term to refer to software where the source is available for viewing, but which may not legally be modified or redistributed. Such software is more often referred to as source-available, or as shared source, a term coined by Microsoft in 2001.[83] While in 2007 two of Microsoft's Shared Source Initiative licenses were certified by the OSI, most licenses from the SSI program are still source-available only.[84]

Open-sourcing[edit]
Open-sourcing is the act of propagating the open source movement, most often referring to releasing previously proprietary software under an open source/free software license,[85] but it may also refer programming Open Source software or installing Open Source software.
Notable software packages, previously proprietary, which have been open sourced include:

Netscape Navigator, the code of which became the basis of the Mozilla and Mozilla Firefox web browsers
StarOffice, which became the base of the OpenOffice.org office suite and LibreOffice
Global File System, was originally GPL'd, then made proprietary in 2001(?), but in 2004 was re-GPL'd.
SAP DB, which has become MaxDB, and is now distributed (and owned) by MySQL AB
InterBase database, which was open sourced by Borland in 2000 and presently exists as a commercial product and an open-source fork (Firebird)
Before changing the license of software, distributors usually audit the source code for third party licensed code which they would have to remove or obtain permission for its relicense. Backdoors and other malware should also be removed as they may easily be discovered after release of the code.

Current applications and adoption[edit]
Main article: Free and open-source software Â§Â Adoption
See also: Linux adoption and Free software Â§Â Adoption
.mw-parser-output .quotebox{background-color:#F9F9F9;border:1px solid #aaa;box-sizing:border-box;padding:10px;font-size:88%;max-width:100%}.mw-parser-output .quotebox.floatleft{margin:.5em 1.4em .8em 0}.mw-parser-output .quotebox.floatright{margin:.5em 0 .8em 1.4em}.mw-parser-output .quotebox.centered{overflow:hidden;position:relative;margin:.5em auto .8em auto}.mw-parser-output .quotebox.floatleft span,.mw-parser-output .quotebox.floatright span{font-style:inherit}.mw-parser-output .quotebox>blockquote{margin:0;padding:0;border-left:0;font-family:inherit;font-size:inherit}.mw-parser-output .quotebox-title{background-color:#F9F9F9;text-align:center;font-size:110%;font-weight:bold}.mw-parser-output .quotebox-quote>:first-child{margin-top:0}.mw-parser-output .quotebox-quote:last-child>:last-child{margin-bottom:0}.mw-parser-output .quotebox-quote.quoted:before{font-family:"Times New Roman",serif;font-weight:bold;font-size:large;color:gray;content:" â ";vertical-align:-45%;line-height:0}.mw-parser-output .quotebox-quote.quoted:after{font-family:"Times New Roman",serif;font-weight:bold;font-size:large;color:gray;content:" â ";line-height:0}.mw-parser-output .quotebox .left-aligned{text-align:left}.mw-parser-output .quotebox .right-aligned{text-align:right}.mw-parser-output .quotebox .center-aligned{text-align:center}.mw-parser-output .quotebox .quote-title,.mw-parser-output .quotebox .quotebox-quote{display:block}.mw-parser-output .quotebox cite{display:block;font-style:normal}@media screen and (max-width:640px){.mw-parser-output .quotebox{width:100%!important;margin:0 0 .8em!important;float:none!important}}

"We migrated key functions from Windows to Linux because we needed an operating system that was stable and reliable â one that would give us in-house control. So if we needed to patch, adjust, or adapt, we could."


Official statement of the United Space Alliance, which manages the computer systems for the International Space Station (ISS), regarding why they chose to switch from Windows to Debian GNU/Linux on the ISS[86][87]


Widely used open-source software[edit]
Main article: List of free and open-source software packages
Open-source software projects are built and maintained by a network of volunteer programmers and are widely used in free as well as commercial products.[38] Prime examples of open-source products are the Apache HTTP Server, the e-commerce platform osCommerce, internet browsers Mozilla Firefox and Chromium (the project where the vast majority of development of the freeware Google Chrome is done) and the full office suite LibreOffice. One of the most successful open-source products is the GNU/Linux operating system, an open-source Unix-like operating system, and its derivative Android, an operating system for mobile devices.[88][89] In some industries, open-source software is the norm.[90]

Extensions for non-software use[edit]
Main article: Open source model
See also: Open content and Open collaboration
While the term "open source" applied originally only to the source code of software,[91] it is now being applied to many other areas[92] such as Open source ecology,[93] a movement to decentralize technologies so that any human can use them. However, it is often misapplied to other areas that have different and competing principles, which overlap only partially. 
The same principles that underlie open-source software can be found in many other ventures, such as open-source hardware, Wikipedia, and open-access publishing. Collectively, these principles are known as open source, open content, and open collaboration:[94] "any system of innovation or production that relies on goal-oriented yet loosely coordinated participants, who interact to create a product (or service) of economic value, which they make available to contributors and non-contributors alike."[3]
This "culture" or ideology takes the view that the principles apply more generally to facilitate concurrent input of different agendas, approaches, and priorities, in contrast with more centralized models of development such as those typically used in commercial companies.[95]

See also[edit]
.mw-parser-output .portalbox{float:right;border:solid #aaa 1px;padding:0}.mw-parser-output .portalbox.tleft{margin:0.5em 1em 0.5em 0}.mw-parser-output .portalbox.tright{margin:0.5em 0 0.5em 1em}.mw-parser-output .portalbox>ul{display:table;box-sizing:border-box;padding:0.1em;max-width:175px;background:#f9f9f9;font-size:85%;line-height:110%;font-style:italic;font-weight:bold}.mw-parser-output .portalbox>ul>li{display:table-row}.mw-parser-output .portalbox>ul>li>span:first-child{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox>ul>li>span:last-child{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}

Free and open-source software portal
.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}
Comparison of free and open-source software licenses
Free software
Free software community
Free software license
Free software movement
List of free and open-source software packages
Open content
Open-source hardware
Open Source Initiative
Open-source license
Open-source software advocacy
Open Source Software Institute
Open-source software security
Open-source video game
All articles with titles containing "Open source"
Proprietary software
Shared source
Timeline of free and open-source software
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}St. Laurent, Andrew M. (2008). Understanding Open Source and Free Software Licensing. O'Reilly Media. p.Â 4. ISBNÂ 9780596553951.

^ Corbly, James Edward (25 September 2014). "The Free Software Alternative: Freeware, Open Source Software, and Libraries". Information Technology and Libraries. 33 (3): 65. doi:10.6017/ital.v33i3.5105. ISSNÂ 2163-5226.

^ a b Levine, Sheen S.; Prietula, Michael J. (30 December 2013). "Open Collaboration for Innovation: Principles and Performance". Organization Science. 25 (5): 1414â1433. arXiv:1406.7541. doi:10.1287/orsc.2013.0872. ISSNÂ 1047-7039. S2CIDÂ 6583883.

^ Rothwell, Richard (5 August 2008). "Creating wealth with free software". Free Software Magazine. Archived from the original on 8 September 2008. Retrieved 8 September 2008.

^ "Standish NewsroomÂ â Open Source" (Press release). Boston. 16 April 2008. Archived from the original on 18 January 2012. Retrieved 8 September 2008.

^ Gaudeul, Alexia (2007). "Do Open Source Developers Respond to Competition? The LaTeX Case Study". Review of Network Economics. 6 (2). doi:10.2202/1446-9022.1119. ISSNÂ 1446-9022. S2CIDÂ 201097782.

^ a b VM Brasseur (2018). Forge your Future with Open Source. Pragmatic Programmers. ISBNÂ 978-1-68050-301-2.

^ a b c Karl Fogel (2016). "Producing Open Source Software â How to Run a Successful Free Software Project". O'Reilly Media. Retrieved 11 April 2016. But the problem went deeper than that. The word "free" carried with it an inescapable moral connotation: if freedom was an end in itself, it didn't matter whether free software also happened to be better, or more profitable for certain businesses in certain circumstances. Those were merely pleasant side effects of a motive that was, at its root, neither technical nor mercantile, but moral. Furthermore, the "free as in freedom" position forced a glaring inconsistency on corporations who wanted to support particular free programs in one aspect of their business, but continue marketing proprietary software in others.

^ "History of the OSI". Opensource.org.

^ B. Charny (3 May 2001). "Microsoft Raps Open-Source Approach". CNET.

^ Jeffrey Voas, Keith W. Miller & Tom Costello. Free and Open Source Software. IT Professional 12(6) (November 2010), pg. 14â16.

^ Eric S. Raymond. "Goodbye, "free software"; hello, "open source"". catb.org. The problem with it is twofold. First, ... the term "free" is very ambiguous ... Second, the term makes a lot of corporate types nervous.

^ Kelty, Christpher M. (2008). "The Cultural Significance of free Software â Two Bits" (PDF). Duke University press â durham and london. p.Â 99. Prior to 1998, Free Software referred either to the Free Software Foundation (and the watchful, micromanaging eye of Stallman) or to one of thousands of different commercial, avocational, or university-research projects, processes, licenses, and ideologies that had a variety of names: sourceware, freeware, shareware, open software, public domain software, and so on. The term Open Source, by contrast, sought to encompass them all in one movement.

^ Shea, Tom (23 June 1983). "Free software â Free software is a junkyard of software spare parts". InfoWorld. Retrieved 10 February 2016. "In contrast to commercial software is a large and growing body of free software that exists in the public domain. Public-domain software is written by microcomputer hobbyists (also known as "hackers") many of whom are professional programmers in their work life. [...] Since everybody has access to source code, many routines have not only been used but dramatically improved by other programmers."

^ Raymond, Eric S. (8 February 1998). "Goodbye, "free software"; hello, "open source"". Retrieved 13 August 2008. After the Netscape announcement broke in January I did a lot of thinking about the next phase â the serious push to get "free software" accepted in the mainstream corporate world. And I realized we have a serious problem with "free software" itself. Specifically, we have a problem with the term "free software", itself, not the concept. I've become convinced that the term has to go.

^ Ryan, Patrick S.; Casson, Tony (May 2006). "Open Standards, Open Source Adoption in the Public Sector, and Their Relationship to Microsoft's Market Dominance by Tony Casson, Patrick S. RyanÂ :: SSRN". Papers.ssrn.com. SSRNÂ 1656616. {{cite journal}}: Cite journal requires |journal= (help)

^ Holtgrewe, Ursula (2004). "Articulating the Speed(s) of the Internet: The Case of Open Source/Free Software". Time & Society (Submitted manuscript). 13: 129â146. doi:10.1177/0961463X04040750. S2CIDÂ 61327593.

^ "Open Source Pioneers Meet in Historic Summit". 14 April 1998. Retrieved 20 September 2014.

^ Muffatto, Moreno (2006). Open Source: A Multidisciplinary Approach. Imperial College Press. ISBNÂ 978-1-86094-665-3.

^ "How I coined the term 'open source'".

^ "NETSCAPE ANNOUNCES PLANS TO MAKE NEXT-GENERATION COMMUNICATOR SOURCE CODE AVAILABLE FREE ON THE NET". Netscape Communications Corporation. 22 January 1998. Archived from the original on 1 April 2007. Retrieved 8 August 2013. BOLD MOVE TO HARNESS CREATIVE POWER OF THOUSANDS OF INTERNET DEVELOPERS; COMPANY MAKES NETSCAPE NAVIGATOR AND COMMUNICATOR 4.0 IMMEDIATELY FREE FOR ALL USERS, SEEDING MARKET FOR ENTERPRISE AND NETCENTER BUSINESSES

^ "MOUNTAIN VIEW, Calif., April 1 /PRNewswire/ -- Netscape Communications and open source developers are celebrating the first anniversary, March 31, 1999, of the release of Netscape's browser source code to mozilla.org". Netscape Communications. 31 March 1999. Retrieved 10 January 2013. [...]The organization that manages open source developers working on the next generation of Netscape's browser and communication software. This event marked a historical milestone for the Internet as Netscape became the first major commercial software company to open its source code, a trend that has since been followed by several other corporations. Since the code was first published on the Internet, thousands of individuals and organizations have downloaded it and made hundreds of contributions to the software. Mozilla.org is now celebrating this one-year anniversary with a party Thursday night in San Francisco.

^ "International Authority & Recognition". Opensource.org.

^ "List of OSI Affiliates". Opensource.org.

^ "OSI Affiliate Agreement". Opensource.org.

^ Perens, Bruce. Open Sources: Voices from the Open Source Revolution. O'Reilly Media. 1999.

^ Dibona, Chris; Ockman, Sam (January 1999). The Open Source Definition by Bruce Perens. ISBNÂ 978-1-56592-582-3.

^ "The Open Source Definition"., The Open Source Definition according to the Open Source Initiative

^ "How Many Open Source Licenses Do You Need? â Slashdot". News.slashdot.org. 16 February 2009. Retrieved 25 March 2012.

^ Open Source Initiative. "The Open Source Definition (Annotated)". opensource.org. Retrieved 22 July 2016.

^ Tiemann, Michael. "History of the OSI". Open Source Initiative. Archived from the original on 24 September 2006. Retrieved 13 May 2014.

^ Stallman, Richard (16 June 2007). "Why "Open Source" misses the point of Free Software". Philosophy of the GNU Project. Free Software Foundation. Retrieved 23 July 2007. As the advocates of open source draw new users into our community, we free software activists have to work even more to bring the issue of freedom to those new users' attention. We have to say, 'It's free software and it gives you freedom!'âmore and louder than ever. Every time you say 'free software' rather than 'open source,' you help our campaign.

^ a b Stallman, Richard (19 June 2007). "Why "Free Software" is better than "Open Source"". Philosophy of the GNU Project. Free Software Foundation. Retrieved 23 July 2007. Sooner or later these users will be invited to switch back to proprietary software for some practical advantage Countless companies seek to offer such temptation, and why would users decline? Only if they have learned to value the freedom free software gives them, for its own sake. It is up to us to spread this ideaâand in order to do that, we have to talk about freedom. A certain amount of the 'keep quiet' approach to business can be useful for the community, but we must have plenty of freedom talk too.

^ a b Stallman, Richard (16 June 2007). "Why "Open Source" misses the point of Free Software". Philosophy of the GNU Project. Free Software Foundation. Retrieved 23 July 2007. Under the pressure of the movie and record companies, software for individuals to use is increasingly designed specifically to restrict them. This malicious feature is known as DRM or Digital Restrictions Management (see DefectiveByDesign.org), and it is the antithesis in spirit of the freedom that free software aims to provide. [...] Yet some open source supporters have proposed 'open source DRM' software. Their idea is that by publishing the source code of programs designed to restrict your access to encrypted media, and allowing others to change it, they will produce more powerful and reliable software for restricting users like you. Then it will be delivered to you in devices that do not allow you to change it. This software might be 'open source,' and use the open source development model; but it won't be free software since it won't respect the freedom of the users that actually run it. If the open source development model succeeds in making this software more powerful and reliable for restricting you, that will make it even worse.

^ Rosen, Lawrence. "Joint Works â Open Source Licensing: Software Freedom and Intellectual Property Law". flylib.com. Retrieved 22 July 2016.

^ Andrew T. Pham, Verint Systems Inc., and Matthew B. Weinstein and Jamie L. Ryerson. "Easy as ABC: Categorizing Open Source Licenses Archived 8 November 2012 at the Wayback Machine"; www.IPO.org. June 2010.

^ Shiels, Maggie (14 August 2008). "Legal milestone for open source". BBC News. Retrieved 15 August 2008.

^ a b Popp, Dr. Karl Michael (2015). Best Practices for commercial use of open source software. Norderstedt, Germany: Books on Demand. ISBNÂ 978-3738619096.

^ [1]  Archived 15 November 2007 at the Wayback Machine

^ [2]  Archived 7 December 2007 at the Wayback Machine

^ a b c Raymond, Eric S. (11 September 2000). "The Cathedral and the Bazaar". Retrieved 19 September 2004.

^ Robles, Gregorio (2004). "A Software Engineering Approach to Libre Software" (PDF).  In Robert A. Gehring, Bernd Lutterbeck (ed.). Open Source Jahrbuch 2004 (PDF). Berlin: Technical University of Berlin. Retrieved 11 February 2020.

^ Ghosh, R.A.; Robles, G.; Glott, R. (2002). "Free/Libre and Open Source Software: Survey and Study Part V". Maastricht: International Institute of Infonomics.

^ US Department of Defense. "Open Source Software FAQ". Chief Information Officer. Retrieved 22 July 2016.

^ a b Sharma, Srinarayan; Vijayan Sugumaran; Balaji Rajagopalan (2002). "A framework for creating hybrid-open source software communities" (PDF). Information Systems Journal. 12: 7â25. doi:10.1046/j.1365-2575.2002.00116.x. S2CIDÂ 5815589.

^ Landry, John; Rajiv Gupta (September 2000). "Profiting from Open Source". Harvard Business Review. doi:10.1225/F00503.

^ Reynolds, Carl; Jeremy Wyatt (February 2011). "Open Source, Open Standards, and Health Care Information Systems". Journal of Medical Internet Research. 13 (1): e24. doi:10.2196/jmir.1521. PMCÂ 3221346. PMIDÂ 21447469.

^ Plotkin, Hal (December 1998). "What (and Why) you should know about open-source software". Harvard Management Update: 8â9.

^ Payne, Christian (February 2002). "On the Security of Open Source Software". Information Systems Journal. 12 (1): 61â78. doi:10.1046/j.1365-2575.2002.00118.x. S2CIDÂ 8123076.

^ "GNU Classpath Hacker's Guide: GNU Classpath Hacker's Guide". Gnu.org. 11 August 2003. Retrieved 25 March 2012.

^ Meffert, Klaus; Neil Rotstan (2007). "Brief summary of coding style and practice used in JGAP". Java Genetic Algorithms Package. Archived from the original on 25 December 2012. Retrieved 8 September 2008.

^ Tripp, Andy (16 July 2007). "Classpath hackers frustrated with slow OpenJDK process". Javalobby. Archived from the original on 12 March 2012. Retrieved 2 May 2008.

^ a b Stamelos, Ioannis; Lefteris Angelis; Apostolos Oikonomou; Georgios L. Bleris (2002). "Code Quality Analysis in Open Source Software Development". Info System Journal. 12: 43â60. doi:10.1109/MS.2007.2. S2CIDÂ 18538582.

^ Gallivan, Michael J. (2001). "Striking a Balance Between Trust and Control in a Virtual Organization: A Content Analysis of Open Source Software Case Studies". Information Systems Journal. 11 (4): 277â304. doi:10.1046/j.1365-2575.2001.00108.x. S2CIDÂ 11868077.

^ a b c Boldyreff, Cornelia; Lavery, Janet; Nutter, David; Rank, Stephen. "Open Source Development Processes and Tools" (PDF). Flosshub. Retrieved 22 July 2016.

^ Stansberry, Glen (18 September 2008). "7 Version Control Systems Reviewed â Smashing Magazine". Smashing Magazine. Retrieved 22 July 2016.

^ a b Frantzell, Lennart (18 July 2016). "GitHub, Launchpad and BitBucket, how today's distributed version control systems are fueling the unprecendented global open source revolution". IBM developerworks. Retrieved 22 July 2016.

^ Baker, Jason. "Top 4 open source issue tracking tools". opensource.com. Retrieved 22 July 2016.

^ FranÃ§ois Letellier (2008), Open Source Software: the Role of Nonprofits in Federating Business and Innovation Ecosystems, AFME 2008.

^ Open Source Software Institute. "Home". Open Source Software Institute. Retrieved 22 July 2016.

^ Hellekson, Gunnar. "Home". Open Source for America. Archived from the original on 1 December 2015. Retrieved 25 March 2012.

^ from EntandoSrl (Entando ). "Mil-OSS". Retrieved 25 March 2012.

^ Irina Guseva (@irina_guseva) (26 March 2009). "Bad Economy Is Good for Open Source". Cmswire.com. Retrieved 25 March 2012.

^ "Open Source vs. Proprietary Software". PCWorld Business Center. Pcworld.com. 3 November 2011. Retrieved 25 March 2012.

^ Geoff Spick (@Goffee71) (26 October 2009). "Open Source Movement Finds Friends at the White House". Cmswire.com. Retrieved 25 March 2012.

^ "Pandora's box for open source". CNET. 12 February 2004. Retrieved 25 March 2012.

^ Murphy, David (15 August 2010). "Survey: 98 Percent of Companies Use Open-Source, 29 Percent Contribute Back". PCMag.com. Retrieved 25 March 2012.

^ a b "Homeland Security helps secure open-source code". CNET. Retrieved 25 March 2012.

^ Greenley, Neil. "Open Source Software Survey". Archived from the original on 22 June 2013. Retrieved 9 October 2012.

^ Boulanger, A. (2005). Open-source versus proprietary software: Is one more reliable and secure than the other? IBM Systems Journal, 44(2), 239â248.

^ Seltzer, Larry (4 May 2004). "Is Open-Source Really Safer?". PCMag.com. Retrieved 25 March 2012.

^ Michelle Delio (14 December 2004). "Linux: Fewer Bugs Than Rivals". Wired. Retrieved 23 May 2016.

^ "Why Open Source Misses the Point of Free Software â GNU Project â Free Software Foundation". Gnu.org. Retrieved 30 March 2015.

^ "Goodbye, "free software"; hello, "open source"". The problem with it is twofold. First, ... the term "free" is very ambiguous ... Second, the term makes a lot of corporate types nervous.

^ Kelty, Christpher M. (2008). "The Cultural Significance of free Software â Two Bits" (PDF). Duke University press â Durham and London. p.Â 99. Prior to 1998, Free Software referred either to the Free Software Foundation (and the watchful, micromanaging eye of Stallman) or to one of thousands of different commercial, avocational, or university-research projects, processes, licenses, and ideologies that had a variety of names: sourceware, freeware, shareware, open software, public domain software, and so on. The term Open Source, by contrast, sought to encompass them all in one movement.

^ OSI. "History of OSI". conferees decided it was time to dump the moralizing and confrontational attitude that had been associated with "free software" in the past and sell the idea strictly on the same pragmatic, business-case grounds

^ Stallman, Richard. "FLOSS and FOSS". Free Software Foundation. Retrieved 22 July 2016.

^ Stallman, Richard (16 June 2007). "Why "Open Source" misses the point of Free Software". Philosophy of the GNU Project. GNU Project. Retrieved 23 July 2007.

^ Tiemann, Michael (19 September 2006). "History of the OSI". Open Source Initiative. Retrieved 23 August 2008.

^ Nelson, Russell (26 March 2007). "Certification Mark". Open Source Initiative. Archived from the original on 6 February 2008. Retrieved 22 July 2007.

^ Raymond, Eric S. (22 November 1998). "OSI Launch Announcement". Open Source Initiative. Retrieved 22 July 2007.

^ Nelson, Russell (19 September 2006). "Open Source Licenses by Category". Open Source Initiative. Retrieved 22 July 2007.

^ "Microsoft announces expansion of Shared Source Initiative". Geekzone.co.nz. 21 March 2005. Retrieved 30 March 2015.

^ "OSI Approves Microsoft License Submissions". opensource.org. 17 October 2007. Retrieved 8 August 2013. Acting on the advice of the License Approval Chair, the OSI Board today approved the Microsoft Public License (Ms-PL) and the Microsoft Reciprocal License (Ms-RL). The decision to approve was informed by the overwhelming (though not unanimous) consensus from the open source community that these licenses satisfied the 10 criteria of the Open Source definition, and should, therefore, be approved.

^ Agerfalk, Par and Fitzgerald, Brian (2008), Outsourcing to an Unknown Workforce: Exploring Opensourcing as a Global Sourcing Strategy, MIS Quarterly, Vol 32, No 2, pp.385â410

^ Gunter, Joel (10 May 2013). "International Space Station to boldly go with Linux over Windows". The Telegraph. Archived from the original on 11 January 2022.

^ Bridgewater, Adrian (13 May 2013). "International Space Station adopts Debian Linux, drops Windows & Red Hat into airlock". Computer Weekly.

^ Michael J. Gallivan, "Striking a Balance Between Trust and Control in a Virtual Organization: A Content Analysis of Open Source Software Case Studies", Info Systems Journal 11 (2001): 277â304

^ Hal Plotkin, "What (and Why) you should know about open source software" Harvard Management Update 12 (1998): 8â9

^ Noyes, Katherine (18 May 2011). "Open Source Software Is Now a Norm in Businesses". PCWorld. Retrieved 22 July 2016.

^ Stallman, Richard (24 September 2007). "Why "Open Source" misses the point of Free Software". Philosophy of the GNU Project. Free Software Foundation. Retrieved 6 December 2007. However, not all of the users and developers of free software agreed with the goals of the free software movement. In 1998, a part of the free software community splintered off and began campaigning in the name of 'open source.' The term was originally proposed to avoid a possible misunderstanding of the term 'free software,' but it soon became associated with philosophical views quite different from those of the free software movement.

^ "What is open source?". Retrieved 29 July 2013.

^ "Open Source Ecology". ...building the world's first replicable open source self-sufficient decentralized high-appropriate-tech permaculture ecovillage...

^ "Open Collaboration Bitcoin". Informs.org. 2 January 2014. Retrieved 30 March 2015.

^ Raymond, Eric S. The Cathedral and the Bazaar. ed 3.0. 2000.


Further reading[edit]
Androutsellis-Theotokis, Stephanos; Spinellis, Diomidis; Kechagia, Maria; Gousios, Georgios (2010). Open source software: A survey from 10,000 feet (PDF). Foundations and Trends in Technology, Information and Operations Management. Vol.Â 4. pp.Â 187â347. doi:10.1561/0200000026. ISBNÂ 978-1-60198-484-5.
Coleman, E. Gabriella. Coding Freedom: The Ethics and Aesthetics of Hacking (Princeton UP, 2012)
Fadi P. Deek; James A. M. McHugh (2008). Open Source: Technology and Policy. Cambridge: Cambridge University Press. ISBNÂ 978-0-511-36775-5.
Chris DiBona and Sam Ockman and Mark Stone, ed. (1999). Open Sources: Voices from the Open Source Revolution. O'Reilly. ISBNÂ 978-1-56592-582-3.
Joshua Gay, ed. (2002). Free Software, Free Society: Selected Essays of Richard M. Stallman. Boston: GNU Press, Free Software Foundation. ISBNÂ 978-1-882114-98-6.
Understanding FOSS | editor  = Sampathkumar Coimbatore India
Benkler, Yochai (2002), "Coase's Penguin, or, Linux and The Nature of the Firm." Yale Law Journal 112.3 (Dec 2002): p367(78) (in Adobe pdf format)
v. Engelhardt, Sebastian (2008). "The Economic Properties of Software", Jena Economic Research Papers, Volume 2 (2008), Number 2008-045 (PDF).
Lerner, J. & Tirole, J. (2002): 'Some simple economics on open source', Journal of Industrial Economics 50(2), p 197â234
VÃ¤limÃ¤ki, Mikko (2005). The Rise of Open Source Licensing: A Challenge to the Use of Intellectual Property in the Software Industry (PDF). Turre Publishing. Archived from the original (PDF) on 4 March 2009.
Polley, Barry (11 December 2007). "Open Source Discussion Paper â version 1.0" (PDF). New Zealand Ministry of Justice. Archived from the original (PDF) on 23 February 2018. Retrieved 12 December 2007. {{cite journal}}: Cite journal requires |journal= (help)
Rossi, M. A. (2006): Decoding the free/open-source software puzzle: A survey of theoretical and empirical contributions, in J. Bitzer P. SchrÃ¶der, eds, 'The Economics of Open Source Software Development', p 15â55.
Open Sources: Voices from the Open Source Revolution â an online book containing essays from prominent members of the open-source community
Berry, D M (2004). The Contestation of Code: A Preliminary Investigation into the Discourse of the Free Software and Open Software Movement, Critical Discourse Studies, Volume 1(1).
Schrape, Jan-Felix (2017). "Open Source Projects as Incubators of Innovation. From Niche Phenomenon to Integral Part of the Software Industry" (PDF). Stuttgart: Research Contributions to Organizational Sociology and Innovation Studies 2017-03.
Sustainable Open Source, a Confluence article providing guidelines for fair participation in the open source ecosystem, by Radovan Semancik
External links[edit]



Wikimedia Commons has media related to Free software.




Wikibooks has a book on the topic of: Open Source




Wikibooks has a book on the topic of: Use the Source




Scholia has a topic profile for Open-source software.

The Open Source Initiative's definition of open source
Free / Open Source Research Community â Many online research papers about Open Source
Open-source software at Curlie
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteSoftware distributionLicenses
Beerware
Floating licensing
Free and open-source
Free
Open source
Freely redistributable
Proprietary
Public domain
Source-available
Compensation models
Adware
Commercial software
Retail software
Crippleware
Crowdfunding
Freemium
Freeware
Pay what you want
Careware
Donationware
Open-core model
Postcardware
Shareware
Nagware
Delivery methods
Digital distribution
File sharing
On-premises
Pre-installed
Product bundling
Retail software
Sneakernet
Software as a service
Deceptive and/or illicit
Unwanted software bundling
Malware
Spyware
Trojan horse
Worm
Ransomware
Scareware
Shovelware
Vaporware
list
Software release life cycle
Abandonware
End-of-life
Long-term support
Software maintenance
Software maintainer
Software publisher
Copy protection
Digital rights management
Software protection dongle
Hardware restrictions
License manager
Product activation
Product key
Software copyright
Software patent
Torrent poisoning

vteFree and open-source softwareGeneral
Alternative terms for free software
Comparison of open-source and closed-source software
Comparison of source-code-hosting facilities
Free software
Free software project directories
Gratis versus libre
Long-term support
Open-source software
Open-source software development
Outline
Timeline
Softwarepackages
Audio
Bioinformatics
Codecs
Configuration management
Drivers
Graphics
Wireless
Geophysics
Health
Mathematics
Office Suites
Operating systems
Programming languages
Routing
Television
Video games
Web applications
E-commerce
Android apps
iOS apps
Commercial
Trademarked
Formerly proprietary
Formerly open-source
Community
Free software movement
History
Open-source-software movement
Events
Organisations
Free Software Movement of India
Free Software Foundation
Licenses
AFL
Apache
APSL
Artistic
Beerware
BSD
Creative Commons
CDDL
EPL
Free Software Foundation
GNU GPL
GNU LGPL
ISC
MIT
MPL
Python
Python Software Foundation License
Shared Source Initiative
Sleepycat
Unlicense
WTFPL
zlib
Types and standards
Comparison of licenses
Contributor License Agreement
Copyleft
Debian Free Software Guidelines
Definition of Free Cultural Works
Free license
The Free Software Definition
The Open Source Definition
Open-source license
Permissive software license
Public domain
Viral license

Challenges
Digital rights management
Hardware restrictions
License proliferation
Mozilla software rebranding
Proprietary device drivers
Proprietary firmware
Proprietary software
SCO/Linux controversies
Software patents
Software security
Trusted Computing
Related topics
Forking
GNU Manifesto
Microsoft Open Specification Promise
Open-core model
Open-source hardware
Shared Source Initiative
Source-available software
The Cathedral and the Bazaar
Revolution OS

 Portal
 Category

vteIntellectual property activismIssues
Artificial scarcity
Copyright infringement
Copyright troll
Digital rights management
Gripe site
Legal aspects of file sharing
Mashup
digital
music
novel
videos
Monopolies of knowledge
Music piracy
Orphan works
Patents
biological
software
software patent debate
trolling
Public domain
Concepts
All rights reversed
Alternative compensation system
Anti-copyright notice
Business models for open-source software
Copyleft
Commercial use of copyleft works
Commons-based peer production
Electronic sell-through
Free content
Free-software license
Libertarian positions
Open content
Open-design movement
Open music model
Open patent
Open source
hardware
software
Prizes instead of patents
contests
Share-alike
Video on demand
Movements
Access to Knowledge movement
Anti-copyright
Cultural environmentalism
Free-culture movement
Free software movement
OrganizationsPro-copyright
Copyright Alliance
Pro-copyleft
Creative Commons
Electronic Frontier Foundation
Free Software Foundation
Open Rights Group
Organization for Transformative Works
The Pirate Bay
PiratbyrÃ¥n
Pirate Party
Public Knowledge
Sci-Hub
Students for Free Culture
People
Cory Doctorow
Alexandra Elbakyan
Rick Falkvinge
Lawrence Lessig
Richard Stallman
Peter Suber
Peter Sunde
Aaron Swartz
Documentaries
Steal This Film (2006, 2007)
Good Copy Bad Copy (2007)
RiP!: A Remix Manifesto (2008)
TPB AFK: The Pirate Bay Away From Keyboard (2013)
The Internet's Own Boy (2014)

vteFree-culture and open-source movementsConcepts andpracticesKey concepts
Commons-based peer production
Crowdsourcing
Gratis versus libre
Open collaboration
Open source
Openness
Participatory culture
Sharism
Social peer-to-peer processes
Peer-to-peer banking
Peer-to-peer carsharing
Peer-to-peer lending
Peer-to-peer ridesharing

Research and science
Citizen science
Open science
Access
Notebook science
Research
Science data
Plan S
Data, information,and knowledge
Free content
Knowledge commons
Open communication
Open knowledge
Content
Data
Communicationand  learningMedia
Collaborative writing
Democratic media
Open publishing
Participatory media
Peer review
Education
Open education
Educational resources
University
Admissions
Open-door academic policy
Journalism
Citizen media
Citizen journalism and Wiki journalism
Open-source journalism
Economy, production,and developmentProducts
Free and open-source software (FOSS)
Free/libre software
Open-source software
Open-design movement
Robotics
Open gaming
Open-source architecture
Open-source hardware
Economic principles
Gift economy
Open innovation
Open patent
Open standard
Sharing economy
Politics and governance
Open government
Open-source governance
Organizations
Creative Commons
Free Software Foundation
Open Architecture Network
Openmod Initiative
Open Knowledge International
Open Rights Group
Open Source Initiative
Open Web Foundation
Pirate Party
PLOS
SPARC
Activists
Tim Berners-Lee
Alexandra Elbakyan
Cody Wilson
Lawrence Lessig
Peter Murray-Rust
Douglas Rushkoff
Richard Stallman
Peter Suber
Peter Sunde
Aaron Swartz
John Wilbanks
Projects andmovements
DIYbio
Free-culture movement
Free software movement
Open science movement
Open Source Ecology
Open-source software movement
OpenCores
OpenWetWare
Sci-Hub
Tools
Licenses
Creative Commons
GPL
Definition docs
Free Cultural Works
Free Software
Open
Open Source
Open Data Indices
Open educational resources
Open music model
Open Web movement


vteIndependent productionReading
Alternative comics
Alternative manga
Fanzine
Webcomic
business
Webtoon
Minicomic
Co-ops
Doujinshi
conventions
printers
shops
Self-publishing
Small press
Amateur press association
Audio
Independent music
Record label
Netlabel
Open-source label
Radio
Station
Pirate radio
Cassette culture
Doujin music
Lo-fi music
Tracker (MOD) music
Podsafe
Underground music
Musical instruments
Circuit bending
Experimental musical instrument
VideoAmateur
Home movies
Amateur film
Amateur pornography
Fan film
Machinima
Professional
Independent animation
Cinema of Transgression
Independent film
Exploitation film
Guerrilla filmmaking
B movie
Golden Age
50s
60sâ70s
80sâpresent
Z movie
Midnight movie
Low-budget film
No-budget film
No Wave Cinema
Double feature
Software
Cowboy coding
Demoscene
Free software
Open-source software
Software cracking
Unofficial patch
Warez scene
Video games
Indie games
development
developers
Homebrew
Fangame
Doujin soft
Mod
Open-source video game
ROM hack
FoodDrinks
Independent soft drink
Homebrewing
Microbrewery
Other
Indie art
Amateur photography
Mail art
NaÃ¯ve art
Outsider art
Visionary environment
Indie RPG
Independent circuit (wrestling)
Independent TV station
General
Indie design
Do it yourself (DIY ethic)
Doujin
Make (magazine)
Maker Faire
Social peer-to-peer processes

Authority control: National libraries  
Japan
<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Open-source_software&oldid=1069473652"
		Categories: Free softwareSoftware licensesHidden categories: CS1 errors: missing periodicalWebarchive template wayback linksArticles with short descriptionShort description is different from WikidataWikipedia pending changes protected pagesUse dmy dates from August 2016Articles containing potentially dated statements from 2012All articles containing potentially dated statementsCommons category link is locally definedArticles with Curlie linksArticles with NDL identifiers
	
