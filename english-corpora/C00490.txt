
Title:
Independent set (graph theory)
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Unrelated vertices in graphs
  The nine blue vertices form a maximum independent set for the Generalized Petersen graph GP(12,4).
In graph theory, an independent set, stable set, coclique or anticlique is a set of vertices in a graph, no two of which are adjacent. That is, it is a set 
  
    
      
        S
      
    
    {\displaystyle S}
  
 of vertices such that for every two vertices in 
  
    
      
        S
      
    
    {\displaystyle S}
  
, there is no edge connecting the two. Equivalently, each edge in the graph has at most one endpoint in 
  
    
      
        S
      
    
    {\displaystyle S}
  
. A set is independent if and only if it is a clique in the graph's complement. The size of an independent set is the number of vertices it contains. Independent sets have also been called "internally stable sets", of which "stable set" is a shortening.[1]
A maximal independent set is an independent set that is not a proper subset of any other independent set.
A maximum independent set is an independent set of largest possible size for a given graph 
  
    
      
        G
      
    
    {\displaystyle G}
  
. This size is called the independence number of 
  
    
      
        G
      
    
    {\displaystyle G}
  
 and is usually denoted by 
  
    
      
        Î±
        (
        G
        )
      
    
    {\displaystyle \alpha (G)}
  
.[2] The optimization problem of finding such a set is called the maximum independent set problem. It is a strongly NP-hard problem.[3] As such, it is unlikely that there exists an efficient algorithm for finding a maximum independent set of a graph.
Every maximum independent set also is maximal, but the converse implication does not necessarily hold.

Contents

1 Properties

1.1 Relationship to other graph parameters
1.2 Maximal independent set


2 Finding independent sets

2.1 Maximum independent sets and maximum cliques
2.2 Finding maximum independent sets

2.2.1 Exact algorithms
2.2.2 Approximation algorithms
2.2.3 Independent sets in interval intersection graphs
2.2.4 Independent sets in geometric intersection graphs


2.3 Finding maximal independent sets


3 Applications
4 See also
5 Notes
6 References
7 External links



Properties[edit]
.mw-parser-output .sidebar{width:22em;float:right;clear:right;margin:0.5em 0 1em 1em;background:#f8f9fa;border:1px solid #aaa;padding:0.2em;text-align:center;line-height:1.4em;font-size:88%;border-collapse:collapse;display:table}body.skin-minerva .mw-parser-output .sidebar{display:table!important;float:right!important;margin:0.5em 0 1em 1em!important}.mw-parser-output .sidebar-subgroup{width:100%;margin:0;border-spacing:0}.mw-parser-output .sidebar-left{float:left;clear:left;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-none{float:none;clear:both;margin:0.5em 1em 1em 0}.mw-parser-output .sidebar-outer-title{padding:0 0.4em 0.2em;font-size:125%;line-height:1.2em;font-weight:bold}.mw-parser-output .sidebar-top-image{padding:0.4em}.mw-parser-output .sidebar-top-caption,.mw-parser-output .sidebar-pretitle-with-top-image,.mw-parser-output .sidebar-caption{padding:0.2em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-pretitle{padding:0.4em 0.4em 0;line-height:1.2em}.mw-parser-output .sidebar-title,.mw-parser-output .sidebar-title-with-pretitle{padding:0.2em 0.8em;font-size:145%;line-height:1.2em}.mw-parser-output .sidebar-title-with-pretitle{padding:0.1em 0.4em}.mw-parser-output .sidebar-image{padding:0.2em 0.4em 0.4em}.mw-parser-output .sidebar-heading{padding:0.1em 0.4em}.mw-parser-output .sidebar-content{padding:0 0.5em 0.4em}.mw-parser-output .sidebar-content-with-subgroup{padding:0.1em 0.4em 0.2em}.mw-parser-output .sidebar-above,.mw-parser-output .sidebar-below{padding:0.3em 0.8em;font-weight:bold}.mw-parser-output .sidebar-collapse .sidebar-above,.mw-parser-output .sidebar-collapse .sidebar-below{border-top:1px solid #aaa;border-bottom:1px solid #aaa}.mw-parser-output .sidebar-navbar{text-align:right;font-size:115%;padding:0 0.4em 0.4em}.mw-parser-output .sidebar-list-title{padding:0 0.4em;text-align:left;font-weight:bold;line-height:1.6em;font-size:105%}.mw-parser-output .sidebar-list-title-c{padding:0 0.4em;text-align:center;margin:0 3.3em}@media(max-width:720px){body.mediawiki .mw-parser-output .sidebar{width:100%!important;clear:both;float:none!important;margin-left:0!important;margin-right:0!important}}Covering/packing-problem pairs
 Covering problems Packing problems Minimum set cover Maximum set packing Minimum edge cover Maximum matching Minimum vertex cover Maximum independent set Bin covering Bin packing Polygon covering Rectangle packing
.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vte
Relationship to other graph parameters[edit]
A set is independent if and only if it is a clique in the graphâs complement, so the two concepts are complementary. In fact, sufficiently large graphs with no large cliques have large independent sets, a theme that is explored in Ramsey theory.
A set is independent if and only if its complement is a vertex cover.[4] Therefore, the sum of the size of the largest independent set 
  
    
      
        Î±
        (
        G
        )
      
    
    {\displaystyle \alpha (G)}
  
 and the size of a minimum vertex cover 
  
    
      
        Î²
        (
        G
        )
      
    
    {\displaystyle \beta (G)}
  
 is equal to the number of vertices in the graph.
A vertex coloring of a graph 
  
    
      
        G
      
    
    {\displaystyle G}
  
 corresponds to a partition of its vertex set into independent subsets. Hence the minimal number of colors needed in a vertex coloring, the chromatic number  
  
    
      
        Ï
        (
        G
        )
      
    
    {\displaystyle \chi (G)}
  
, is at least the quotient of the number of vertices in 
  
    
      
        G
      
    
    {\displaystyle G}
  
 and the independent number 
  
    
      
        Î±
        (
        G
        )
      
    
    {\displaystyle \alpha (G)}
  
.
In a bipartite graph with no isolated vertices, the number of vertices in a maximum independent set equals the number of edges in a minimum edge covering; this is KÅnig's theorem.

Maximal independent set[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Main article: Maximal independent set
An independent set that is not a proper subset of another independent set is called maximal. Such sets are dominating sets. Every graph contains at most 3n/3 maximal independent sets,[5] but many graphs have far fewer.
The number of maximal independent sets in n-vertex cycle graphs is given by the Perrin numbers, and the number of maximal independent sets in n-vertex path graphs is given by the Padovan sequence.[6] Therefore, both numbers are proportional to powers of 1.324718..., the plastic number.

Finding independent sets[edit]
Further information: Clique problem
In computer science, several computational problems related to independent sets have been studied.

In the maximum independent set problem, the input is an undirected graph, and the output is a maximum independent set in the graph. If there are multiple maximum independent sets, only one need be output. This problem is sometimes referred to as "vertex packing".
In the maximum-weight independent set problem, the input is an undirected graph with weights on its vertices and the output is an independent set with maximum total weight. The maximum independent set problem is the special case in which all weights are one.
In the maximal independent set listing problem, the input is an undirected graph, and the output is a list of all its maximal independent sets. The maximum independent set problem may be solved using as a subroutine an algorithm for the maximal independent set listing problem, because the maximum independent set must be included among all the maximal independent sets.
In the independent set decision problem, the input is an undirected graph and a number k, and the output is a Boolean value: true if the graph contains an independent set of size k, and false otherwise.
The first three of these problems are all important in practical applications; the independent set decision problem is not, but is necessary in order to apply the theory of NP-completeness to problems related to independent sets.

Maximum independent sets and maximum cliques[edit]
The independent set problem and the clique problem are complementary: a clique in G is an independent set in the complement graph of G and vice versa. Therefore, many computational results may be applied equally well to either problem. For example, the results related to the clique problem have the following corollaries:

The independent set decision problem is NP-complete, and hence it is not believed that there is an efficient algorithm for solving it.
The maximum independent set problem is NP-hard and it is also hard to approximate.
Despite the close relationship between maximum cliques and maximum independent sets in arbitrary graphs, the independent set and clique problems may be very different when restricted to special classes of graphs. For instance, for sparse graphs (graphs in which the number of edges is at most a constant times the number of vertices in any subgraph), the maximum clique has bounded size and may be found exactly in linear time;[7] however, for the same classes of graphs, or even for the more restricted class of bounded degree graphs, finding the maximum independent set is MAXSNP-complete, implying that, for some constant c (depending on the degree) it is NP-hard to find an approximate solution that comes within a factor of c of the optimum.[8]

Finding maximum independent sets[edit]
Further information: Clique problem Â§Â Finding maximum cliques in arbitrary graphs
Exact algorithms[edit]
The maximum independent set problem is NP-hard. However, it can be solved more efficiently than the O(n2Â 2n) time that would be given by a naive brute force algorithm that examines every vertex subset and checks whether it is an independent set.
As of 2017 it can be solved in time O(1.1996n) using polynomial space.[9] When restricted to graphs with maximum degree 3, it can be solved in time O(1.0836n).[10]
For many classes of graphs, a maximum weight independent set may be found in polynomial time.
Famous examples are claw-free graphs,[11]
P5-free graphs[12]
and perfect graphs.[13]
For chordal graphs, a maximum weight independent set can be found in linear time.[14]
Modular decomposition is a good tool for solving the maximum weight independent set problem; the linear time algorithm on cographs is the basic example for that. Another important tool are clique separators as described by Tarjan.[15]
KÅnig's theorem implies that in a bipartite graph the maximum independent set can be found in polynomial time using a bipartite matching algorithm.

Approximation algorithms[edit]
In general, the maximum independent set problem cannot be approximated to a constant factor in polynomial time (unless P = NP).  In fact, Max Independent Set in general is Poly-APX-complete, meaning it is as hard as any problem that can be approximated to a polynomial factor.[16]  However, there are efficient approximation algorithms for restricted classes of graphs.
In planar graphs, the maximum independent set may be approximated to within any approximation ratio cÂ <Â 1 in polynomial time; similar polynomial-time approximation schemes exist in any family of graphs closed under taking minors.[17]
In bounded degree graphs, effective approximation algorithms are known with approximation ratios that are constant for a fixed value of the maximum degree; for instance, a greedy algorithm that forms a maximal independent set by, at each step, choosing the minimum degree vertex in the graph and removing its neighbors, achieves an approximation ratio of (Î+2)/3 on graphs with maximum degreeÂ Î.[18] Approximation hardness bounds for such instances were proven in Berman & Karpinski (1999). Indeed, even Max Independent Set on 3-regular 3-edge-colorable graphs is APX-complete.[19]

Independent sets in interval intersection graphs[edit]
Main article: Interval scheduling
An interval graph is a graph in which the nodes are 1-dimensional intervals (e.g. time intervals) and there is an edge between two intervals if and only if they intersect. An independent set in an interval graph is just a set of non-overlapping intervals. The problem of finding maximum independent sets in interval graphs has been studied, for example, in the context of job scheduling: given a set of jobs that has to be executed on a computer, find a maximum set of jobs that can be executed without interfering with each other. This problem can be solved exactly in polynomial time using earliest deadline first scheduling.

Independent sets in geometric intersection graphs[edit]
Main article: Maximum disjoint set
A geometric intersection graph is a graph in which the nodes are geometric shapes and there is an edge between two shapes if and only if they intersect. An independent set in a geometric intersection graph is just a set of disjoint (non-overlapping) shapes. The problem of finding maximum independent sets in geometric intersection graphs has been studied, for example, in the context of Automatic label placement: given a set of locations in a map, find a maximum set of disjoint rectangular labels near these locations.
Finding a maximum independent set in intersection graphs is still NP-complete, but it is easier to approximate than the general maximum independent set problem. A recent survey can be found in the introduction of Chan & Har-Peled (2012).

Finding maximal independent sets[edit]
Main article: Maximal independent set
The problem of finding a maximal independent set can be solved in polynomial time by a trivial greedy algorithm.[20] All maximal independent sets can be found in time O(3n/3) = O(1.4423n).

Applications[edit]
The maximum independent set and its dual, the minimum vertex cover problem, is involved in proving the computational complexity of many theoretical problems.[21] They also serve as useful models for real world optimization problems, for example maximum independent set is a useful model for discovering stable genetic components for designing engineered genetic systems.[22]

See also[edit]
An independent set of edges is a set of edges of which no two have a vertex in common.  It is usually called a matching.
A vertex coloring is a partition of the vertex set into independent sets.
Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ Korshunov (1974)

^ Godsil & Royle (2001), p. 3.

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Garey, M. R.; Johnson, D. S. (1978-07-01). ""Strong NP-Completeness Results: Motivation, Examples, and Implications". Journal of the ACM. 25 (3): 499â508. doi:10.1145/322077.322090. ISSNÂ 0004-5411. S2CIDÂ 18371269.

^ Proof: A set V of vertices is an independent set. if and only if every edge in the graph is adjacent to at most one member of V, if and only if every edge in the graph is adjacent to at least one member not in V, if and only if the complement of V is a vertex cover.

^ Moon & Moser (1965).

^ FÃ¼redi (1987).

^ Chiba & Nishizeki (1985).

^ Berman & Fujito (1995).

^ Xiao & Nagamochi (2017)

^ Xiao & Nagamochi (2013)

^ Minty (1980),Sbihi (1980),Nakamura & Tamura (2001),Faenza, Oriolo & Stauffer (2014),Nobili & Sassano (2015)

^ Lokshtanov, Vatshelle & Villanger (2014)

^ GrÃ¶tschel, LovÃ¡sz & Schrijver (1988)

^ Frank (1976)

^ Tarjan (1985)

^ Bazgan, Cristina; Escoffier, Bruno; Paschos, Vangelis Th. (2005). "Completeness in standard and differential approximation classes: Poly-(D)APX- and (D)PTAS-completeness". Theoretical Computer Science. 339 (2â3): 272â292. doi:10.1016/j.tcs.2005.03.007.

^ Baker (1994); Grohe (2003).

^ HalldÃ³rsson & Radhakrishnan (1997).

^ ChlebÃ­k, Miroslav; ChlebÃ­kovÃ¡, Janka (2003). "Approximation Hardness for Small Occurrence Instances of NP-Hard Problems". Proceedings of the 5th International Conference on Algorithms and Complexity. Lecture Notes in Computer Science. 2653: 152â164. doi:10.1007/3-540-44849-7_21. ISBNÂ 978-3-540-40176-6.

^ Luby (1986).

^ Skiena, Steven S. (2012). The algorithm design manual. Springer. ISBNÂ 978-1-84800-069-8. OCLCÂ 820425142.

^ Hossain, Ayaan; Lopez, Eriberto; Halper, Sean M.; Cetnar, Daniel P.; Reis, Alexander C.; Strickland, Devin; Klavins, Eric; Salis, Howard M. (2020-07-13). "Automated design of thousands of nonrepetitive parts for engineering stable genetic systems". Nature Biotechnology. 38 (12): 1466â1475. doi:10.1038/s41587-020-0584-2. ISSNÂ 1546-1696. PMIDÂ 32661437. S2CIDÂ 220506228.


References[edit]
.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents>ul{margin-left:0}.mw-parser-output .refbegin-hanging-indents>ul>li{margin-left:0;padding-left:3.2em;text-indent:-3.2em}.mw-parser-output .refbegin-hanging-indents ul,.mw-parser-output .refbegin-hanging-indents ul li{list-style:none}@media(max-width:720px){.mw-parser-output .refbegin-hanging-indents>ul>li{padding-left:1.6em;text-indent:-1.6em}}.mw-parser-output .refbegin-columns{margin-top:0.3em}.mw-parser-output .refbegin-columns ul{margin-top:0}.mw-parser-output .refbegin-columns li{page-break-inside:avoid;break-inside:avoid-column}
Baker, Brenda S. (1994), "Approximation algorithms for NP-complete problems on planar graphs", Journal of the ACM, 41 (1): 153â180, doi:10.1145/174644.174650, S2CIDÂ 9706753.
Berman, Piotr; Fujito, Toshihiro (1995), "On approximation properties of the Independent set problem for degree 3 graphs", Workshop on Algorithms and Data Structures, Lecture Notes in Computer Science, vol.Â 955, Springer-Verlag, pp.Â 449â460, doi:10.1007/3-540-60220-8_84, ISBNÂ 978-3-540-60220-0.
Berman, Piotr; Karpinski, Marek (1999), "On some tighter inapproximability results", Automata, Languages and Programming, 26th International Colloquium, ICALP'99 Prague, Lecture Notes in Computer Science, vol.Â 1644, Prague: Springer-Verlag, pp.Â 200â209, doi:10.1007/3-540-48523-6, ISBNÂ 978-3-540-66224-2, S2CIDÂ 23288736
Bourgeois, Nicolas; Escoffier, Bruno; Paschos, Vangelis Th.; van Rooij, Johan M. M. (2010), "A bottom-up method and fast algorithms for MAX INDEPENDENT SET", Algorithm theoryâSWAT 2010, Lecture Notes in Computer Science, vol.Â 6139, Berlin: Springer, pp.Â 62â73, Bibcode:2010LNCS.6139...62B, doi:10.1007/978-3-642-13731-0_7, ISBNÂ 978-3-642-13730-3, MRÂ 2678485.
Chan, T. M. (2003), "Polynomial-time approximation schemes for packing and piercing fat objects", Journal of Algorithms, 46 (2): 178â189, CiteSeerXÂ 10.1.1.21.5344, doi:10.1016/s0196-6774(02)00294-8.
Chan, T. M.; Har-Peled, S. (2012), "Approximation algorithms for maximum independent set of pseudo-disks", Discrete & Computational Geometry, 48 (2): 373, arXiv:1103.1431, CiteSeerXÂ 10.1.1.219.2131, doi:10.1007/s00454-012-9417-5, S2CIDÂ 38183751.
Chiba, N.; Nishizeki, T. (1985), "Arboricity and subgraph listing algorithms", SIAM Journal on Computing, 14 (1): 210â223, doi:10.1137/0214017.
Erlebach, T.; Jansen, K.; Seidel, E. (2005), "Polynomial-Time Approximation Schemes for Geometric Intersection Graphs", SIAM Journal on Computing, 34 (6): 1302, doi:10.1137/s0097539702402676.
Faenza, Yuri; Oriolo, Gianpaolo; Stauffer, Gautier (2014), "Solving the Weighted Stable Set Problem in Claw-Free Graphs", Journal of the ACM, 61 (4): 1â41, doi:10.1145/2629600, S2CIDÂ 1995056.
Fomin, Fedor V.; Grandoni, Fabrizio; Kratsch, Dieter (2009), "A measure & conquer approach for the analysis of exact algorithms", Journal of the ACM, 56 (5): 1â32, doi:10.1145/1552285.1552286, S2CIDÂ 1186651, articleÂ no.Â 25{{citation}}:  CS1 maint: postscript (link).
Frank, AndrÃ¡s (1976), "Some polynomial algorithms for certain graphs and hypergraphs", Congressus Numerantium, XV: 211â226.
FÃ¼redi, ZoltÃ¡n (1987), "The number of maximal independent sets in connected graphs", Journal of Graph Theory, 11 (4): 463â470, doi:10.1002/jgt.3190110403.
Godsil, Chris; Royle, Gordon (2001), Algebraic Graph Theory, New York: Springer, ISBNÂ 978-0-387-95220-8.
Grohe, Martin (2003), "Local tree-width, excluded minors, and approximation algorithms", Combinatorica, 23 (4): 613â632, arXiv:math/0001128, doi:10.1007/s00493-003-0037-9, S2CIDÂ 11751235.
GrÃ¶tschel, M.; LovÃ¡sz, L.; Schrijver, A. (1988), "9.4 Coloring Perfect Graphs", Geometric Algorithms and Combinatorial Optimization, Algorithms and Combinatorics, vol.Â 2, Springer-Verlag, pp.Â 296â298, ISBNÂ 978-0-387-13624-0.
HalldÃ³rsson, M. M.; Radhakrishnan, J. (1997), "Greed is good: Approximating independent sets in sparse and bounded-degree graphs", Algorithmica, 18 (1): 145â163, CiteSeerXÂ 10.1.1.145.4523, doi:10.1007/BF02523693, S2CIDÂ 4661668.
Korshunov, A.D. (1974), "Coefficient of Internal Stability", Kibernetika (in Ukrainian), 10 (1): 17â28, doi:10.1007/BF01069014, S2CIDÂ 120343511.
Lokshtanov, D.; Vatshelle, M.; Villanger, Y. (2014), "Independent sets in P5-free graphs in polynomial time", SODA (Symposium on Discrete Algorithms): 570â581.
Luby, Michael (1986), "A simple parallel algorithm for the maximal independent set problem", SIAM Journal on Computing, 15 (4): 1036â1053, CiteSeerXÂ 10.1.1.225.5475, doi:10.1137/0215074, MRÂ 0861369.
Minty, G.J. (1980), "On maximal independent sets of vertices in claw-free graphs", Journal of Combinatorial Theory, Series B, 28 (3): 284â304, doi:10.1016/0095-8956(80)90074-x.
Moon, J.W.; Moser, Leo (1965), "On cliques in graphs", Israel Journal of Mathematics, 3 (1): 23â28, doi:10.1007/BF02760024, MRÂ 0182577, S2CIDÂ 9855414.
Nakamura, D.; Tamura, A. (2001), "A revision of Minty's algorithm for finding a maximum weight stable set in a claw-free graph", Journal of Operations Research Society Japan, 44 (2): 194â204, doi:10.15807/jorsj.44.194.
Nobili, P.; Sassano, A. (2015), An O(n^2 log n) algorithm for the weighted stable set problem in claw-free graphs, arXiv:1501.05775, Bibcode:2015arXiv150105775N
Robson, J. M. (1986), "Algorithms for maximum independent sets", Journal of Algorithms, 7 (3): 425â440, doi:10.1016/0196-6774(86)90032-5.
Sbihi, Najiba (1980), "Algorithme de recherche d'un stable de cardinalitÃ© maximum dans un graphe sans Ã©toile", Discrete Mathematics (in French), 29 (1): 53â76, doi:10.1016/0012-365X(90)90287-R, MRÂ 0553650.
Xiao, Mingyu; Nagamochi, Hiroshi (2017), "Exact algorithms for maximum independent set", Information and Computation, 255: 126â146, arXiv:1312.6260, doi:10.1016/j.ic.2017.06.001, S2CIDÂ 1714739.
Xiao, Mingyu; Nagamochi, Hiroshi (2013), "Confining sets and avoiding bottleneck cases: A simple maximum independent set algorithm in degree-3 graphs", Theoretical Computer Science, 469: 92â104, doi:10.1016/j.tcs.2012.09.022.
Tarjan, R.E. (1985), "Decomposition by clique separators", Discrete Mathematics, 55 (2): 221â232, doi:10.1016/0012-365x(85)90051-2.

External links[edit]
Weisstein, Eric W. "Maximal Independent Vertex Set". MathWorld.
Challenging Benchmarks for Maximum Clique, Maximum Independent Set, Minimum Vertex Cover and Vertex Coloring
Independent Set and Vertex Cover, Hanan Ayad.




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Independent_set_(graph_theory)&oldid=1057013829"
		Categories: Graph theory objectsNP-complete problemsComputational problems in graph theoryHidden categories: Articles with short descriptionShort description is different from WikidataCS1 maint: postscriptCS1 Ukrainian-language sources (uk)CS1 French-language sources (fr)
	
