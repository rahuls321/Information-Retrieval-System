
Title:
Treemapping
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Visualisation method for hierchical data
  Treemap of Singapore's exports by product category, 2012. The Product Exports Treemaps are one of the most recent applications of these kind of visualizations, developed by the Harvard-MIT Observatory of Economic Complexity.
In information visualization and computing, treemapping is a method for displaying hierarchical data using nested figures, usually rectangles.
Treemaps display hierarchical (tree-structured) data as a set of nested rectangles. Each branch of the tree is given a rectangle, which is then tiled with smaller rectangles representing sub-branches. A leaf node's rectangle has an area proportional to a specified dimension of the data.[1] Often the leaf nodes are colored to show a separate dimension of the data.
When the color and size dimensions are correlated in some way with the tree structure, one can often easily see patterns that would be difficult to spot in other ways, such as whether a certain color is particularly relevant. A second advantage of treemaps is that, by construction, they make efficient use of space. As a result, they can legibly display thousands of items on the screen simultaneously.

Contents

1 Tiling algorithms

1.1 Rectangular treemaps
1.2 Convex treemaps

1.2.1 Orthoconvex treemaps


1.3 Other treemaps


2 History
3 See also
4 References
5 External links



Tiling algorithms[edit]
To create a treemap, one must define a tiling algorithm, that is, a way to divide a region into sub-regions of specified areas. Ideally, a treemap algorithm would create regions that satisfy the following criteria:

A small aspect ratioâideally close to one. Regions with a small aspect ratio (i.e, fat objects) are easier to perceive.[2]
Preserve some sense of the ordering in the input data (ordered).
Change to reflect changes in the underlying data (high stability).
Unfortunately, these properties have an inverse relationship. As the aspect ratio is optimized, the order of placement becomes less predictable. As the order becomes more stable, the aspect ratio is degraded.[example  needed]

Rectangular treemaps[edit]
To date, fifteen primary rectangular treemap algorithms have been developed:


Treemap algorithms[3]


Algorithm

Order

Aspect ratios

Stability


BinaryTree

partially ordered

high

stable


Slice And Dice[4]

ordered

very high

stable


Strip[5]

ordered

medium

medium stability


Pivot by middle[6]

ordered

medium

medium stability


Pivot by split[7]

ordered

medium

low stability


Pivot by size[8]

ordered

medium

medium stability


Split[9]

ordered

medium

medium stability


Spiral[10]

ordered

medium

medium stability


Hilbert[11]

ordered

medium

medium stability


Moore[12]

ordered

medium

medium stability


Squarified[13]

unordered

low

low stability


Mixed Treemaps[14]

unordered

low

medium stability


Approximation[15]

unordered

low

medium stability


Git[16]

unordered

medium

stable


Local moves[17]

unordered

medium

stable


Convex treemaps[edit]
Rectangular treemaps have the disadvantage that their aspect ratio might be arbitrarily high in the worst case. As a simple example, if the tree root has only two children, one with weight 
  
    
      
        1
        
          /
        
        n
      
    
    {\displaystyle 1/n}
  
 and one with weight 
  
    
      
        1
        â
        1
        
          /
        
        n
      
    
    {\displaystyle 1-1/n}
  
, then the aspect ratio of the smaller child will be 
  
    
      
        n
      
    
    {\displaystyle n}
  
, which can be arbitrarily high. 
To cope with this problem, several algorithms have been proposed that use regions that are general convex polygons, not necessarily rectangular.
Convex treemaps were developed in several steps, each step improved the upper bound on the aspect ratio. The bounds are given as a function of 
  
    
      
        n
      
    
    {\displaystyle n}
  
 - the total number of nodes in the tree, and 
  
    
      
        d
      
    
    {\displaystyle d}
  
 - the total depth of the tree.

Onak and Sidiropoulos[18] proved an upper bound of 
  
    
      
        O
        (
        (
        d
        log
        â¡
        
          n
        
        
          )
          
            17
          
        
        )
      
    
    {\displaystyle O((d\log {n})^{17})}
  
.
De-Berg and Onak and Sidiropoulos[19] improve the upper bound to 
  
    
      
        O
        (
        d
        +
        log
        â¡
        
          n
        
        )
      
    
    {\displaystyle O(d+\log {n})}
  
, and prove a lower bound of 
  
    
      
        O
        (
        d
        )
      
    
    {\displaystyle O(d)}
  
.
De-Berg and Speckmann and van-der-Weele[20] improve the upper bound to 
  
    
      
        O
        (
        d
        )
      
    
    {\displaystyle O(d)}
  
, matching the theoretical lower bound. (For the special case where the depth is 1, they present an algorithm that uses only four classes of 45-degree-polygons (rectangles, right-angled triangles, right-angled trapezoids and 45-degree pentagons), and guarantees an aspect ratio of at most 34/7.)
The latter two algorithms operate in two steps (greatly simplified for clarity):

The original tree is converted to a binary tree: each node with more than two children is replaced by a sub-tree in which each node has exactly two children.
Each region representing a node (starting from the root) is divided to two, using a line that keeps the angles between edges as large as possible. It is possible to prove that, if all edges of a convex polygon are separated by an angle of at least 
  
    
      
        Ï
      
    
    {\displaystyle \phi }
  
, then its aspect ratio is 
  
    
      
        O
        (
        1
        
          /
        
        Ï
        )
      
    
    {\displaystyle O(1/\phi )}
  
. It is possible to ensure that, in a tree of depth 
  
    
      
        d
      
    
    {\displaystyle d}
  
, the angle is divided by a factor of at most 
  
    
      
        d
      
    
    {\displaystyle d}
  
, hence the aspect ratio guarantee.
Orthoconvex treemaps[edit]
In convex treemaps, the aspect ratio cannot be constant - it grows with the depth of the tree. 
To attain a constant aspect-ratio,  Orthoconvex treemaps[20] can be used. There, all regions are orthoconvex rectilinear polygons with aspect ratio at most 64; and the leaves are either rectangles with aspect ratio at most 8, or L-shapes or S-shapes with aspect ratio at most 32.
For the special case where the depth is 1, they present an algorithm that uses only rectangles and L-shapes, and the aspect ratio is at most 
  
    
      
        2
        +
        2
        
          /
        
        
          
            3
          
        
        â
        3.15
      
    
    {\displaystyle 2+2/{\sqrt {3}}\approx 3.15}
  
; the internal nodes use only rectangles with aspect ratio at most 
  
    
      
        1
        +
        
          
            3
          
        
        â
        2.73
      
    
    {\displaystyle 1+{\sqrt {3}}\approx 2.73}
  
.

Other treemaps[edit]
Voronoi Treemaps
[21] based on Voronoi diagram calculations. The algorithm is iterative and does not give any upper bound on the aspect ratio.
Jigsaw Treemaps[22]
based on the geometry of space-filling curves. They assume that the weights are integers and that their sum is a square number. The regions of the map are rectilinear polygons and highly non-ortho-convex. Their aspect ratio is guaranteed to be at most 4.
GosperMaps
[23] based on the geometry of Gosper curves. It is ordered and stable, but has a very high aspect ratio.
History[edit]
  Hard disk space usage visualized in TreeSize, software first released in 1996
Area-based visualizations have existed for decades. For example, mosaic plots (also known as Marimekko diagrams) use rectangular tilings to show joint distributions (i.e., most commonly they are essentially stacked column plots where the columns are of different widths). The main distinguishing feature of a treemap, however, is the recursive construction that allows it to be extended to hierarchical data with any number of levels. This idea was invented by professor Ben Shneiderman at the University of Maryland Human â Computer Interaction Lab in the early 1990s.
[24][25] Shneiderman and his collaborators then deepened the idea by introducing a variety of interactive techniques for filtering and adjusting treemaps.
These early treemaps all used the simple "slice-and-dice" tiling algorithm. Despite many desirable properties (it is stable, preserves ordering, and is easy to implement), the slice-and-dice method often produces tilings with many long, skinny rectangles. In 1994 Mountaz Hascoet and Michel Beaudouin-Lafon invented a "squarifying" algorithm, later popularized by Jarke van Wijk, that created tilings whose rectangles were closer to square. In 1999 Martin Wattenberg used a variation of the "squarifying" algorithm that he called "pivot and slice" to create the first Web-based treemap, the SmartMoney Map of the Market, which displayed data on hundreds of companies in the U.S. stock market. Following its launch, treemaps enjoyed a surge of interest, especially in financial contexts.[citation needed]
A third wave of treemap innovation came around 2004, after Marcos Weskamp created the Newsmap, a treemap that displayed news headlines. This example of a non-analytical treemap inspired many imitators, and introduced treemaps to a new, broad audience.[citation needed] In recent years, treemaps have made their way into the mainstream media, including usage by the New York Times.[26][27] 
The Treemap Art Project produced 12 framed images for the National Academies (United States), shown the Every AlgoRiThm has ART in It exhibit in Washington, DC and another set for the collection of Museum of Modern Art in New York.


See also[edit]
Disk space analyzer
Information visualization
List of countries by economic complexity, which includes a list of Products Exports Treemaps.
Marimekko Chart, a similar concept with one level of explicit hierarchy.
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Li, Rita Yi Man; Chau, Kwong Wing; Zeng, Frankie Fanjie (2019). "Ranking of Risks for Existing and New Building Works". Sustainability. 11 (10): 2863. doi:10.3390/su11102863.

^ Kong, N; Heer, J; Agrawala, M (2010). "Perceptual Guidelines for Creating Rectangular Treemaps". IEEE Transactions on Visualization and Computer Graphics. 16 (6): 990â8. CiteSeerXÂ 10.1.1.688.4140. doi:10.1109/TVCG.2010.186. PMIDÂ 20975136. S2CIDÂ 11597084.

^ Vernier, E.; Sondag, M.; Comba, J.; Speckmann, B.; Telea, A.; Verbeek, K. (2020). "Quantitative Comparison of TimeâDependent Treemaps". Computer Graphics Forum. 39 (3): 393â404.

^ Shneiderman, Ben (2001). "Ordered treemap layouts" (PDF). Infovis: 73.

^ Benjamin, Bederson; Shneiderman, Ben; Wattenberg, Martin (2002). "Ordered and quantum treemaps: Making effective use of 2D space to display hierarchies" (PDF). ACM Transactions on Graphics. 21 (4): 833â854. CiteSeerXÂ 10.1.1.145.2634. doi:10.1145/571647.571649. S2CIDÂ 7253456.

^ Shneiderman, Ben; Wattenberg, Martin (2001). "Ordered treemap layouts". IEEE symposium on Information Visualization: 73â78.

^ Shneiderman, Ben; Wattenberg, Martin (2001). "Ordered treemap layouts". IEEE symposium on Information Visualization: 73â78.

^ Shneiderman, Ben; Wattenberg, Martin (2001). "Ordered treemap layouts". IEEE symposium on Information Visualization: 73â78.

^ Engdahl, BjÃ¶rn. "Ordered and quantum treemaps: Making effective use of 2D space to display hierarchies". {{cite journal}}: Cite journal requires |journal= (help)

^ Tu, Y.; Shen, H. (2007). "Visualizing changes of hierarchical data using treemaps". 13 (6): 1286â1293. {{cite journal}}: Cite journal requires |journal= (help)

^ Tak, S.; Cockburn, A. (2013). "Enhanced spatial stability with Hilbert and Moore treemaps". Transactions on Visualization and Computer Graphics. 19 (1): 141â148.

^ Tak, S.; Cockburn, A. (2013). "Enhanced spatial stability with Hilbert and Moore treemaps". Transactions on Visualization and Computer Graphics. 19 (1): 141â148.

^ Bruls, Mark; Huizing, Kees; van Wijk, Jarke J. (2000). "Squarified treemaps".  In de Leeuw, W.; van Liere, R. (eds.). Data Visualization 2000: Proc. Joint Eurographics and IEEE TCVG Symp. on Visualization (PDF). Springer-Verlag. pp.Â 33â42{{inconsistent citations}}{{cite book}}:  CS1 maint: postscript (link).

^ Roel Vliegen; Erik-Jan van der Linden; Jarke J. van Wijk. "Visualizing Business Data with Generalized Treemaps" (PDF). Archived from the original (PDF) on July 24, 2011. Retrieved February 24, 2010.

^ Nagamochi, H.; Abe, Y.; Wattenberg, Martin (2007). "An approximation algorithm for dissect-ing a rectangle into rectangles with specified areas". Discrete Applied Mathematics. 155 (4): 523â537.

^ Vernier, E.; Comba, J.; Telea, A. (2018). "Quantitative comparison of dy-namic treemaps for software evolution visualization". Conferenceon Software Visualization: 99â106.

^ Sondag, M.; Speckmann, B.; Verbeek, K. (2018). "Stable treemaps via local moves". Transactions on Visualization and Computer Graphics. 24 (1): 729â738.

^ Krzysztof Onak; Anastasios Sidiropoulos. "Circular Partitions with Applications to Visualization and Embeddings". Retrieved June 26, 2011.

^ Mark de Berg; Onak, Krzysztof; Sidiropoulos, Anastasios (2013). "Fat Polygonal Partitions with Applications to Visualization and Embeddings". Journal of Computational Geometry. 4 (1): 212â239. arXiv:1009.1866.

^ a b De Berg, Mark; Speckmann, Bettina; Van Der Weele, Vincent (2014). "Treemaps with bounded aspect ratio". Computational Geometry. 47 (6): 683. arXiv:1012.1749. doi:10.1016/j.comgeo.2013.12.008. S2CIDÂ 12973376.. Conference version: Convex Treemaps with Bounded Aspect Ratio (PDF). EuroCG. 2011.

^ Balzer, Michael; Deussen, Oliver (2005). "Voronoi Treemaps".  In Stasko, John T.; Ward, Matthew O. (eds.). IEEE Symposium on Information Visualization (InfoVis 2005), 23-25 October 2005, Minneapolis, MN, USA (PDF). IEEE Computer Society. p.Â 7..

^ Wattenberg, Martin (2005). "A Note on Space-Filling Visualizations and Space-Filling Curves".  In Stasko, John T.; Ward, Matthew O. (eds.). IEEE Symposium on Information Visualization (InfoVis 2005), 23-25 October 2005, Minneapolis, MN, USA (PDF). IEEE Computer Society. p.Â 24..

^ Auber, David; Huet, Charles; Lambert, Antoine; Renoust, Benjamin; Sallaberry, Arnaud; Saulnier, Agnes (2013). "Gosper Map: Using a Gosper Curve for laying out hierarchical data". IEEE Transactions on Visualization and Computer Graphics. 19 (11): 1820â1832. doi:10.1109/TVCG.2013.91. PMIDÂ 24029903. S2CIDÂ 15050386..

^ Shneiderman, Ben (1992). "Tree visualization with tree-maps: 2-d space-filling approach". ACM Transactions on Graphics. 11: 92â99. doi:10.1145/102377.115768. hdl:1903/367. S2CIDÂ 1369287.

^ Ben Shneiderman; Catherine Plaisant (June 25, 2009). "Treemaps for space-constrained visualization of hierarchies ~ Including the History of Treemap Research at the University of Maryland". Retrieved February 23, 2010.

^ Cox, Amanda; Fairfield, Hannah (February 25, 2007). "The health of the car, van, SUV, and truck market". The New York Times. Retrieved March 12, 2010.

^ Carter, Shan; Cox, Amanda (February 14, 2011). "Obama's 2012 Budget Proposal: How $3.7 Trillion is Spent". The New York Times. Retrieved February 15, 2011.


External links[edit]



Wikimedia Commons has media related to Treemaps.

Treemap Art Project produced exhibit for the National Academies in Washington, DC
An article by Ben Shneiderman on the use of treemaps (as a guest on www.perceptualedge.com [1])
Comprehensive survey and bibliography of Tree Visualization techniques
Generalized treemaps
History of Treemaps by Ben Shneiderman.
Hypermedia exploration with interactive dynamic maps Paper by Zizi and Beaudouin-Lafon introducing the squarified treemap layout algorithm (named "improved treemap layout" at the time).
Indiana University description
Live interactive treemap based on crowd-sourced discounted deals from Flytail Group
Treemap sample in English from The Hive Group
Several treemap examples made with Macrofocus TreeMap
Visualizations using dynamic treemaps and treemapping software by drasticdata
Product Exports Treemaps developed by the Harvard-MIT Observartory of Economic Complexity
newsmap.jp is a treemap of Google news stories
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteVisualization of technical informationFields
Biological data visualization
Chemical imaging
Crime mapping
Data visualization
Educational visualization
Flow visualization
Geovisualization
Information visualization
Mathematical visualization
Medical imaging
Molecular graphics
Product visualization
Scientific visualization
Software visualization
Technical drawing
User interface design
Visual culture
Volume visualization
Image types
Chart
Diagram
Engineering drawing
Graph of a function
Ideogram
Map
Photograph
Pictogram
Plot
Sankey diagram
Schematic
Skeletal formula
Statistical graphics
Table
Technical drawings
Technical illustration
People
Jacques Bertin
Cynthia Brewer
Stuart Card
Sheelagh Carpendale
Thomas A. DeFanti
Borden Dent
Michael Friendly
George Furnas
Pat Hanrahan
Nigel Holmes
Christopher R. Johnson
Gordon Kindlmann
August KekulÃ©
Manuel Lima
Alan MacEachren
Jock D. Mackinlay
Michael Maltz
Bruce H. McCormick
Miriah Meyer
Charles Joseph Minard
Rudolf Modley
Gaspard Monge
Tamara Munzner
Otto Neurath
Florence Nightingale
Hanspeter Pfister
Clifford A. Pickover
Catherine Plaisant
William Playfair
Karl Wilhelm Pohlke
Adolphe Quetelet
George G. Robertson
Arthur H. Robinson
Lawrence J. Rosenblum
Ben Shneiderman
Claudio Silva
Fraser Stoddart
Edward Tufte
Fernanda ViÃ©gas
Ade Olufeko
Howard Wainer
Martin Wattenberg
Bang Wong
Mauro Martino
Moritz Stefaner
Related topics
Cartography
Chartjunk
Computer graphics
in computer science
CPK coloring
Graph drawing
Graphic design
Graphic organizer
Imaging science
Information graphics
Information science
Misleading graph
Neuroimaging
Patent drawing
Scientific modelling
Spatial analysis
Visual analytics
Visual perception
Volume cartography
Volume rendering
Information art





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Treemapping&oldid=1057048668"
		Categories: User interface techniquesInfographicsStatistical charts and diagramsTrees (data structures)Visualization (graphic)Hidden categories: CS1 errors: missing periodicalCS1 maint: postscriptArticles with short descriptionShort description is different from WikidataAll articles needing examplesArticles needing examples from December 2018All articles with unsourced statementsArticles with unsourced statements from August 2008Articles with unsourced statements from March 2010Commons category link is on Wikidata
	
