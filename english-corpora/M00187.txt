In logic, negation, also called the logical complement, is an operation that takes a proposition                     P              {\displaystyle P}   to another proposition "not                     P              {\displaystyle P}  ", written                     ¬        P              {\displaystyle \neg P}  ,                                           ∼                          P              {\displaystyle {\mathord {\sim }}P}   or                                           P            ¯                                {\displaystyle {\overline {P}}}  . It is interpreted intuitively as being true when                     P              {\displaystyle P}   is false, and false when                     P              {\displaystyle P}   is true. Negation is thus a unary logical connective. It may be applied as an operation on notions, propositions, truth values, or semantic values more generally. In classical logic, negation is normally identified with the truth function that takes truth to falsity (and vice versa). In intuitionistic logic, according to the Brouwer–Heyting–Kolmogorov interpretation, the negation of a proposition                     P              {\displaystyle P}   is the proposition whose proofs are the refutations of                     P              {\displaystyle P}  . Definition No agreement exists as to the possibility of defining negation, as to its logical status, function and meaning, as to its field of applicability, and as to the interpretation of the negative judgment (F.H. Heinemann 1944).Classical negation is an operation on one logical value, typically the value of a proposition, that produces a value of true when its operand is false, and a value of false when its operand is true. Thus if statement P is true, then                     ¬        P              {\displaystyle \neg P}   (pronounced "not P") would then be false; and conversely, if                     ¬        P              {\displaystyle \neg P}   is false, then P would be true.The truth table of                     ¬        P              {\displaystyle \neg P}   is as follows:Negation can be defined in terms of other logical operations. For example,                     ¬        P              {\displaystyle \neg P}   can be defined as                     P        →        ⊥              {\displaystyle P\rightarrow \bot }   (where                     →              {\displaystyle \rightarrow }   is logical consequence and                     ⊥              {\displaystyle \bot }   is absolute falsehood). Conversely, one can define                     ⊥              {\displaystyle \bot }   as                     Q        ∧        ¬        Q              {\displaystyle Q\land \neg Q}   for any proposition Q (where                     ∧              {\displaystyle \land }   is logical conjunction). The idea here is that any contradiction is false, and while these ideas work in both classical and intuitionistic logic, they do not work in paraconsistent logic, where contradictions are not necessarily false. In classical logic, we also get a further identity,                     P        →        Q              {\displaystyle P\rightarrow Q}   can be defined as                     ¬        P        ∨        Q              {\displaystyle \neg P\lor Q}  , where                     ∨              {\displaystyle \lor }   is logical disjunction.Algebraically, classical negation corresponds to complementation in a Boolean algebra, and intuitionistic negation to pseudocomplementation in a Heyting algebra. These algebras provide a semantics for classical and intuitionistic logic, respectively. Notation The negation of a proposition p is notated in different ways, in various contexts of discussion and fields of application. The following table documents some of these variants:The notation Np is Łukasiewicz notation.In set theory,                     ∖              {\displaystyle \setminus }   is also used to indicate 'not in the set of':                     U        ∖        A              {\displaystyle U\setminus A}   is the set of all members of U that are not members of A.Regardless how it is notated or symbolized, the negation                     ¬        P              {\displaystyle \neg P}   can be read as "it is not the case that P", "not that P", or usually more simply as "not P". Properties = Double negation =Within a system of classical logic, double negation, that is, the negation of the negation of a proposition                     P              {\displaystyle P}  , is logically equivalent to                     P              {\displaystyle P}  .  Expressed in symbolic terms,                     ¬        ¬        P        ≡        P              {\displaystyle \neg \neg P\equiv P}  . In intuitionistic logic, a proposition implies its double negation, but not conversely. This marks one important difference between classical and intuitionistic negation. Algebraically, classical negation is called an involution of period two.However, in intuitionistic logic, the weaker equivalence                     ¬        ¬        ¬        P        ≡        ¬        P              {\displaystyle \neg \neg \neg P\equiv \neg P}   does hold. This is because in intuitionistic logic,                     ¬        P              {\displaystyle \neg P}   is just a shorthand for                      P        →        ⊥              {\displaystyle P\rightarrow \bot }  , and we also have                     P        →        ¬        ¬        P              {\displaystyle P\rightarrow \neg \neg P}  . Composing that last implication with triple negation                     ¬        ¬        P        →        ⊥              {\displaystyle \neg \neg P\rightarrow \bot }   implies that                     P        →        ⊥              {\displaystyle P\rightarrow \bot }   .As a result, in the propositional case, a sentence is classically provable if its double negation is intuitionistically provable. This result is known as Glivenko's theorem.= Distributivity =De Morgan's laws provide a way of distributing negation over disjunction and conjunction:                    ¬        (        P        ∨        Q        )        ≡        (        ¬        P        ∧        ¬        Q        )              {\displaystyle \neg (P\lor Q)\equiv (\neg P\land \neg Q)}  ,  and                    ¬        (        P        ∧        Q        )        ≡        (        ¬        P        ∨        ¬        Q        )              {\displaystyle \neg (P\land Q)\equiv (\neg P\lor \neg Q)}  .= Linearity =Let                     ⊕              {\displaystyle \oplus }   denote the logical xor operation. In Boolean algebra, a linear function is one such that:If there exists                               a                      0                          ,                  a                      1                          ,        …        ,                  a                      n                          ∈        {        0        ,        1        }              {\displaystyle a_{0},a_{1},\dots ,a_{n}\in \{0,1\}}  ,                    f        (                  b                      1                          ,                  b                      2                          ,        …        ,                  b                      n                          )        =                  a                      0                          ⊕        (                  a                      1                          ∧                  b                      1                          )        ⊕        ⋯        ⊕        (                  a                      n                          ∧                  b                      n                          )              {\displaystyle f(b_{1},b_{2},\dots ,b_{n})=a_{0}\oplus (a_{1}\land b_{1})\oplus \dots \oplus (a_{n}\land b_{n})}  ,for all                               b                      1                          ,                  b                      2                          ,        …        ,                  b                      n                          ∈        {        0        ,        1        }              {\displaystyle b_{1},b_{2},\dots ,b_{n}\in \{0,1\}}  .Another way to express this is that each variable always makes a difference in the truth-value of the operation, or it never makes a difference. Negation is a linear logical operator.= Self dual =In Boolean algebra, a self dual function is a function such that:                    f        (                  a                      1                          ,        …        ,                  a                      n                          )        =        ¬        f        (        ¬                  a                      1                          ,        …        ,        ¬                  a                      n                          )              {\displaystyle f(a_{1},\dots ,a_{n})=\neg f(\neg a_{1},\dots ,\neg a_{n})}   for all                              a                      1                          ,        …        ,                  a                      n                          ∈        {        0        ,        1        }              {\displaystyle a_{1},\dots ,a_{n}\in \{0,1\}}  .Negation is a self dual logical operator.= Negations of quantifiers =In first-order logic, there are two quantifiers, one is the universal quantifier                     ∀              {\displaystyle \forall }   (means "for all") and the other is the existential quantifier                     ∃              {\displaystyle \exists }   (means "there exists"). The negation of one quantifier is the other quantifier (                    ¬        ∀        x        P        (        x        )        ≡        ∃        x        ¬        P        (        x        )              {\displaystyle \neg \forall xP(x)\equiv \exists x\neg P(x)}   and                     ¬        ∃        x        P        (        x        )        ≡        ∀        x        ¬        P        (        x        )              {\displaystyle \neg \exists xP(x)\equiv \forall x\neg P(x)}  ). For example, with the predicate P as "x is mortal" and the domain of x as the collection of all humans,                     ∀        x        P        (        x        )              {\displaystyle \forall xP(x)}   means "a person x in all humans is mortal" or "all humans are mortal". The negation of it is                     ¬        ∀        x        P        (        x        )        ≡        ∃        x        ¬        P        (        x        )              {\displaystyle \neg \forall xP(x)\equiv \exists x\neg P(x)}  , meaning "there exists a person x in all humans who is not mortal", or "there exists someone who lives forever". Rules of inference There are a number of equivalent ways to formulate rules for negation. One usual way to formulate classical negation in a natural deduction setting is to take as primitive rules of inference negation introduction (from a derivation of                     P              {\displaystyle P}   to both                     Q              {\displaystyle Q}   and                     ¬        Q              {\displaystyle \neg Q}  , infer                     ¬        P              {\displaystyle \neg P}  ; this rule also being called reductio ad absurdum), negation elimination (from                     P              {\displaystyle P}   and                     ¬        P              {\displaystyle \neg P}   infer                     Q              {\displaystyle Q}  ; this rule also being called ex falso quodlibet), and double negation elimination (from                     ¬        ¬        P              {\displaystyle \neg \neg P}   infer                     P              {\displaystyle P}  ). One obtains the rules for intuitionistic negation the same way but by excluding double negation elimination.Negation introduction states that if an absurdity can be drawn as conclusion from                     P              {\displaystyle P}   then                     P              {\displaystyle P}   must not be the case (i.e.                     P              {\displaystyle P}   is false (classically) or refutable (intuitionistically) or etc.). Negation elimination states that anything follows from an absurdity. Sometimes negation elimination is formulated using a primitive absurdity sign                     ⊥              {\displaystyle \bot }  . In this case the rule says that from                     P              {\displaystyle P}   and                     ¬        P              {\displaystyle \neg P}   follows an absurdity. Together with double negation elimination one may infer our originally formulated rule, namely that anything follows from an absurdity.Typically the intuitionistic negation                     ¬        P              {\displaystyle \neg P}   of                     P              {\displaystyle P}   is defined as                     P        →        ⊥              {\displaystyle P\rightarrow \bot }  . Then negation introduction and elimination are just special cases of implication introduction (conditional proof) and elimination (modus ponens). In this case one must also add as a primitive rule ex falso quodlibet. Programming language and ordinary language As in mathematics, negation is used in computer science to construct logical statements.The exclamation mark "!" signifies logical NOT in B, C, and languages with a C-inspired syntax such as C++, Java, JavaScript, Perl, and PHP. "NOT" is the operator used in ALGOL 60, BASIC, and languages with an ALGOL- or BASIC-inspired syntax such as Pascal, Ada, Eiffel and Seed7. Some languages (C++, Perl, etc.) provide more than one operator for negation. A few languages like PL/I and Ratfor use ¬ for negation. Some modern computers and operating systems will display ¬ as ! on files encoded in ASCII. Most modern languages allow the above statement to be shortened from if (!(r  t)) to if (r != t), which allows sometimes, when the compiler/interpreter is not able to optimize it, faster programs.In computer science there is also bitwise negation. This takes the value given and switches all the binary 1s to 0s and 0s to 1s.  See bitwise operation.  This is often used to create ones' complement or "~" in C or C++ and two's complement (just simplified to "-" or the negative sign since this is equivalent to taking the arithmetic negative value of the number) as it basically creates the opposite (negative value equivalent) or mathematical complement of the value (where both values are added together they create a whole).To get the absolute (positive equivalent) value of a given integer the following would work as the "-" changes it from negative to positive (it is negative because "x < 0" yields true)To demonstrate logical negation:Inverting the condition and reversing the outcomes produces code that is logically equivalent to the original code, i.e. will have identical results for any input (note that depending on the compiler used, the actual instructions performed by the computer may differ).This convention occasionally surfaces in ordinary written speech, as computer-related slang for not.  For example, the phrase !voting means "not voting".  Another example is the phrase !clue which is used as a synonym for "no-clue" or "clueless". Kripke semantics In Kripke semantics where the semantic values of formulae are sets of possible worlds, negation can be taken to mean set-theoretic complementation (see also possible world semantics for more). See also  References  Further reading Gabbay, Dov, and Wansing, Heinrich, eds., 1999. What is Negation?, Kluwer.Horn, L., 2001. A Natural History of Negation, University of Chicago Press.G. H. von Wright, 1953–59, "On the Logic of Negation", Commentationes Physico-Mathematicae 22.Wansing, Heinrich, 2001, "Negation", in Goble, Lou, ed., The Blackwell Guide to Philosophical Logic, Blackwell.Tettamanti, Marco; Manenti, Rosa; Della Rosa, Pasquale A.; Falini, Andrea; Perani, Daniela; Cappa, Stefano F.; Moro, Andrea (2008). "Negation in the brain: Modulating action representation". NeuroImage. 43 (2): 358–367. doi:10.1016/j.neuroimage.2008.08.004. PMID 18771737. S2CID 17658822. External links Horn, Laurence R.; Wansing, Heinrich. "Negation".  In Zalta, Edward N. (ed.). Stanford Encyclopedia of Philosophy."Negation", Encyclopedia of Mathematics, EMS Press, 2001 [1994]NOT, on MathWorldTables of Truth of composite clauses"Table of truth for a NOT clause applied to an END sentence". Archived from the original on 1 March 2000."NOT clause of an END sentence". Archived from the original on 1 March 2000."NOT clause of an OR sentence". Archived from the original on 17 January 2000."NOT clause of an IF...THEN period". Archived from the original on 1 March 2000.