
Title:
Time formatting and storage bugs
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Software errors affecting times and dates
In computer science, time formatting and storage bugs are a class of software bugs that may cause time and date calculation or display to be improperly handled. These are most commonly manifestations of arithmetic overflow, but can also be the result of other issues. The most well-known consequence of bugs of this type is the Y2K problem, but many other milestone dates or times exist that have caused or will cause problems depending on various programming deficiencies.

Contents

1 Year 1975
2 Year 1978
3 Year 1989
4 Year 1997
5 Year 1999

5.1 First GPS rollover
5.2 9/9/99


6 Year 2000

6.1 Two-digit year representations


7 Year 2010
8 Year 2011
9 Year 2013
10 Year 2015
11 Year 2019

11.1 Second GPS rollover
11.2 Japanese calendar transition


12 Year 2020

12.1 Classic Mac OS


13 Year 2021
14 Year 2022
15 Year 2025
16 Year 2028
17 Year 2031
18 Year 2032
19 Year 2036
20 Year 2038

20.1 Unix time rollover
20.2 DVB rollover
20.3 Third GPS rollover


21 Year 2040
22 Year 2042
23 Year 2048
24 Year 2051
25 Year 2061
26 Year 2079

26.1 Days 32,768 and 65,536


27 Year 2080
28 Year 2100
29 Year 2106
30 Year 2108
31 Year 2137
32 Year 2262
33 Years 4000 and 8000
34 Year 4501
35 Year 10,000
36 Year 30,828
37 Years 32,768 and 65,536
38 Year 292,277,026,596 problem
39 Relative time overflow

39.1 Microsoft
39.2 Boeing
39.3 Arduino


40 See also
41 References
42 Notes



Year 1975[edit]
On 4 January 1975, the 12-bit field that had been used for dates in the DECsystem-10 operating systems overflowed. There were numerous problems and crashes related to this bug while an alternative format was developed.[1]

Year 1978[edit]
The Digital Equipment Corporation OS/8 operating system for the PDP-8 computer used only three bits for the year, representing the years 1970 to 1977.[2]
This was recognized when the later COS-310 operating system was developed, and dates were recorded differently.[3]

Year 1989[edit]
This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed.  (December 2021) (Learn how and when to remove this template message)
Some mainframe programs were written to encode dates as the number of days since a 'zero date' of 1 January 1900, storing them as signed 16-bit binary integers. On 18 September 1989, these programs began to fail, the date being exactly 32,768 (215) days since the zero date. Values on and after this day do not fit into a signed 16-bit integer, but overflow and return negative values.

Year 1997[edit]
The Domain/OS clock, which is based on the number of 4-microsecond units that has occurred since 1 January 1980, rolled past 47 bits On 2 November 1997, rendering unpatched systems unusable.[4]

Year 1999[edit]
In the last few months before the year 2000, two other date-related milestones occurred that received less publicity than the then-impending Y2K problem.

First GPS rollover[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Main article: GPS week number rollover
See also: GPS Â§Â Timekeeping
GPS dates are expressed as a week number and a day-of-week number, with the week number transmitted as a ten-bit value. This means that every 1024 weeks (about 19.6 years) after Sunday 6 January 1980 (the GPS epoch), the date resets again to that date; this happened for the first time at 23:59:47 on Saturday 21 August 1999,[5] the second time at 23:59:42 UTC on 6 April 2019, and will happen again on 20 November 2038.[6] To address this concern, modernised GPS navigation messages use a 13-bit field, which only repeats every 8,192 weeks (157 years), and will not return to zero until near the year 2137.[citation needed]

9/9/99[edit]
See also: Magic number (programming) and Magic string
In many programs or data sets, "9/9/99" was used as a rogue value to indicate either an unresolved date or as a terminator to indicate no further data was in the set. This raised issues upon the arrival of the actual date this represents, 9 September 1999.[5]

Year 2000[edit]
Two-digit year representations[edit]
Main article: Year 2000 problem
See also: Year 1900 problem
Follow-on problems caused by certain temporary fixes to the Y2K problem will crop up at various points in the 21st century. Some programs were made Y2K-compliant by continuing to use two digit years, but picking an arbitrary year prior to which those years are interpreted as 20xx, and after which are interpreted as 19xx.[7]
For example, a program may have been changed so that it treats two-digit year values 00â68 as referring to 2000 through 2068, and values 69â99 as referring to 1969 through 1999.[8] Such a program will not be able to correctly deal with years beyond 2068.
For applications required to calculate the birth year (or another past year), such an algorithm has long been used to overcome the Year 1900 problem, but it has failed to recognise people over 100 years old.

Year 2010[edit]
Some systems had problems once the year rolled over to 2010. This was dubbed by some in the media as the "Y2K+10" or "Y2.01k" problem.[9]
The main source of problems was confusion between hexadecimal number encoding and BCD encodings of numbers. The numbers 0 through 9 are encoded in both hexadecimal and BCD as 0016 through 0916. But the decimal number 10 is encoded in hexadecimal as 0A16 and in BCD as 1016. Thus a BCD 1016 interpreted as a hexadecimal encoding erroneously represents the decimal number 16.
For example, the SMS protocol uses BCD encoding for dates, so some mobile phone software incorrectly reported dates of messages as 2016 instead of 2010. Windows Mobile was the first software reported to have been affected by this glitch; in some cases WM6 changed the date of any incoming SMS message sent after 1 January 2010 from the year 2010 to 2016.[10][11]
Other systems affected include EFTPOS terminals,[12] and the PlayStation 3 (except the Slim model).[13]
The most important such glitch occurred in Germany, where upwards of 20 million bank cards became unusable, and with Citibank Belgium, whose digipass customer identification chips stopped working.[14]

Year 2011[edit]
Main article: Year 2011 problem
Taiwan officially uses the Minguo calendar, which considers the Gregorian year 1912 to be its year 1. Thus, the Gregorian year 2011 is the ROC year 100, its first 3-digit year.[15]

Year 2013[edit]
The uncrewed Deep Impact spaceprobe lost communication with Earth on 11 August 2013, after a clock counted 232 deciseconds (tenths of seconds) since 1 January 2000.[16]

Year 2015[edit]
Older Samsung mobile phones with Agere chipsets, such as Samsung SGH-C170, were unable to change dates beyond 31 December 2014[citation needed] and before 1 January 1998.

Year 2019[edit]
Second GPS rollover[edit]
The second GPS week number rollover occurred. 

Japanese calendar transition[edit]
Main article: Japanese calendar era bug
On 30 April 2019, Emperor Akihito of Japan abdicated in favor of his son Naruhito. As years in Japan are traditionally referred to by era names that correspond to the reign of each emperor, this resulted in a new era name, Reiwa (ä»¤å), following Naruhito's accession to the throne the following day. Because the previous emperor, Hirohito, died 7 January 1989 and Akihito's reign mostly corresponded with the rise in the use of computers, most software had not been tested to ensure correct behavior on an era change, while testing was further complicated by the fact that the new era name was not revealed until 1 April 2019.
Therefore, errors were expected from software that did not anticipate a new era.

Year 2020[edit]
The video games WWE 2K20 and Star Wars Jedi: Fallen Order would both crash on 1 January 2020, when the year rolled over. The glitches could only be circumvented by resetting the year back to 2019 until a patch was released.[17][18] Additionally, Crystal Reports 8.5 would fail to generate specific reports starting in 2020.[19]
Parkeon parking meters in New York City and other locations were unable to accept credit cards as a form of payment starting in 2020. A workaround was implemented, but required each meter to be individually updated. In New York, the meters were not expected to be fixed until 9 January.[20][21]
In Poland, 5,000 cash registers stopped printing the date out properly.[22]
Suunto sport smart watches showed out an error in computing week days, that was presented with a +2 step (aka: FRI rather WED, SAT rather than THU). For Suunto Spartan model watches, the bug was fixed with firmware release 2.8.32.[23]

Classic Mac OS[edit]
The control panel in Classic Mac OS versions 6, 7, and 8 only allows the date to be set as high as 31 December 2019, although the system is able to continue to advance time beyond that date.[24][25]

Year 2021[edit]
Samsung users reported that phones running on the latest One UI 3.0 update or Android 11 lost access to the battery and charging statistics starting in 2021.  Affected devices would not report usage statistics, thus leaving those sections blank.[26][27] Older Sony Bravia models now report invalid data when trying to set EPG reminders.[citation needed]

Year 2022[edit]
Dates that are stored in the format yymmddHHMM converted to a signed 32-bit integer overflowed on 1 January 2022, as 231=2147483648. Notably affected was the malware-scanning component update numbers of Microsoft Exchange, which appear to be used for a mathematical check to determine the latest update.[28][29]
Honda and Acura cars manufactured between 2004 and 2012 containing GPS navigation systems incorrectly displayed the year as 2002. This problem was due to an overflow on the GPS epoch. Honda confirmed that the issue will resolve itself in August 2022. [30][31] 

Year 2025[edit]
In Japan, some older computer systems using the Japanese calendar that have not been updated still count years according to the ShÅwa era. The year 2025 corresponds in those systems to ShÅwa 100, which can cause problems if the software assumes two digits for the year.[32]

Year 2028[edit]
Some systems store their year as a single-byte offset from 1900, which gives a range of 255 (8 bits) and allows dates up to 2155 to be safely represented. Unfortunately, not all systems use an unsigned byte: some have been mistakenly coded with a signed byte which only allows a range of 127 years, meaning that the date field in the software will be incorrect after 2027 and can cause unpredictable behaviour. Several pieces of optical disc software that operates using the ISO 9660 format are affected by this.[33]
During the late 1970s, on Data General Nova and Eclipse systems, the World Computer Corporation (doing credit union applications) created a date format with a 16-bit date field for 128 years (7 bits - note 1900+128=2028), 12 months (4 bits) and 31 days (5 bits). This allowed dates to be directly comparable using unsigned functions. Some systems, including HP 3000, still use this format, although a patch has been developed by outside consultants.[34]

Year 2031[edit]
Some systems, like MediaTek's Nucleus OS, only go up to 31 December 2030.[citation needed]

Year 2032[edit]
Palm OS uses both signed integers with the 1970 epoch, as well as unsigned integers with the 1904 epoch, for different system functions,[35] such as for system clock, and file dates (see PDB format). While this should result in Palm OS being susceptible to the 2038 problem, Palm OS also uses a 7-bit field for storing the year value, with a different epoch counting from 1904, resulting in a maximum year of 2031 (1904+127).[36]

Year 2036[edit]
See also: Network Time Protocol Â§Â Timestamps
The Network Time Protocol has an overflow issue related to the Year 2038 problem, which manifests itself at 06:28:16 UTC on 7 February 2036, rather than 2038. The 64-bit timestamps used by NTP consist of a 32-bit part for seconds and a 32-bit part for fractional second, giving NTP a time scale that rolls over every 232 seconds (136 years) and a theoretical resolution of 2â32 second (233 picoseconds). NTP uses an epoch of 1 January 1900. The first rollover occurs in 2036, prior to the UNIX year 2038 problem.[37][38]

Year 2038[edit]
Unix time rollover[edit]
Main article: Year 2038 problem
The original implementation of the Unix operating system stored system time as a 32-bit signed integer representing the number of seconds past the Unix epoch: midnight UTC 00:00:00 on Thursday, 1 January 1970. This value will roll over after midnight UTC 03:14:07 on Tuesday, 19 January 2038. This problem has been addressed in most modern Unix and Unix-like operating systems by storing system time as a 64-bit signed integer, although individual applications, protocols, and file formats will still need to be changed as well.

DVB rollover[edit]
This section needs expansion. You can help by adding to it.  (September 2020)
The Digital Video Broadcast system has an issue on 22 April 2038, when the 16 bits used to transmit Modified Julian Days used for electronic guide scheduling will restart from zero. The ETSI EN 300 368 specification mentions in Annex C that the provided MJD formulas are valid until 28 February 2100, but makes no mention of the limits imposed by the 16 bits used to transmit the resulting value.[citation needed]

Third GPS rollover[edit]
The third GPS week number rollover will occur. 

Year 2040[edit]
Early Apple Macintosh computers store time in their real-time clocks (RTCs) and HFS filesystems as an unsigned 32-bit number of seconds since 00:00:00 on 1 January 1904. After 06:28:15 on 6 February 2040 (i.e. 232-1 seconds from the epoch), this will wrap around to 1904:[39] further to this, HFS+, the default format for all of Apple's recent Macintosh computers, is also affected. The replacement Apple File System resolves this issue.
ProDOS for the Apple II computers only supports two-digit year numbers. To avoid Y2K issues, Apple issued a technical note stating that the year number was to represent 1940-2039.[40] Software for the platform may incorrectly display dates beginning in 2040, though a third-party effort is underway to update ProDOS and application software to support years up to 4095.[41]

Year 2042[edit]
On 18 September 2042, the Time of Day Clock (TODC) on the S/370 IBM mainframe and its successors, including the current zSeries, will roll over.[42]
Older TODCs were implemented as a 64-bit count of 2â12 microsecond (0.244 ns) units, and the standard base was 1 January 1900 UT. In July 1999 the extended TODC clock was announced, which extended the clock to the right (that is, the extended bits are less significant than the original bits). The actual resolution depends on the model, but the format is consistent, and will, therefore, roll over after 252 microseconds.[42]
The TODC value is accessible to user mode programs and is often used for timing and for generating unique IDs for events.
While IBM has defined and implemented a longer (128-bit) hardware format on recent machines, which extends the timer on both ends by at least 8 additional bits, many programs continue to rely on the 64-bit format which remains as an accessible subset of the longer timer.

Year 2048[edit]
The ATSC system will have an issue similar to the DVB issue described above after 2048 due to its use of signed 32-bit GPS seconds that begin from 6 January 1980.
The capacity planning logic in the ERP system SAP S/4HANA supports only finish dates up to 19 January 2048 (24855 days from 1 January 1980). This concerns e.g. the production, maintenance and inspection planning.[43]

Year 2051[edit]
The Wii and Nintendo 3DS will roll over at the end of 31 December 2050, rolling back to 1 January 2000. Some games on those consoles that have their own calendar systems, will roll back to a different year determined by the game; such as Animal Crossing: New Leaf, which will roll back to 1 January 2012.[44]

Year 2061[edit]
The Nintendo Switch does not allow users to input any date past 2060-12-31. However, the system is still able to advance time beyond that date.[45]

Year 2079[edit]
Days 32,768 and 65,536[edit]
Programs that store dates as the number of days since an arbitrary date (or epoch) are vulnerable to roll-over or wrap-around effects if the values are not wide enough to allow the date values to span a large enough time range expected for the application. Signed 16-bit binary values roll over after 32,768 (215) days from the epoch date, producing negative values. Some mainframe systems experienced software failures because they had encoded dates as the number of days since 1 January 1900, which produced unexpected negative day numbers on the roll-over date of 18 September 1989. Similarly, unsigned 16-bit binary days counts overflow after 65,536 (216) days, which are truncated to zero values. For software using an epoch of 1 January 1900, this will occur on 6 June 2079.[46]

Year 2080[edit]
Some (if not all) Nokia phones that run Series 40 (such as the Nokia X2-00) only support dates up to 2079-12-31, and thus will be unable to display dates after this. One workaround is to use the year 1996, 2024 or 2052 in lieu of 2080 (as compatible leap years) to display the correct day of the week, date and month on the main screen.
Systems storing the year as a two-digit value 00..99 internally only, like many RTCs, may roll over from 2079-12-31 to the IBM PC and DOS epoch of 1980-01-01.

Year 2100[edit]
See also: Leap year bug
This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed.  (August 2021) (Learn how and when to remove this template message)
DOS and Windows file date API and conversion functions (such as INT 21h/AH=2Ah) officially support dates up to 2099-12-31 only (even though the underlying FAT filesystem would theoretically support dates up to 2107). Hence, DOS-based operating systems, as well as applications that convert other formats to the FAT/DOS format, may show unexpected behavior starting 2100-01-01.
Another problem will emerge at the end of 2100-02-28, since 2100 is not a leap year. As many common implementations of the leap year algorithm are incomplete or are simplified,  they will erroneously assume 2100 to be a leap year, causing the date to roll over from 2100-02-28 to 2100-02-29 instead of 2100-03-01.
The Nintendo DS and GameCube, as well as the Sony PlayStation 4 only allow users to set dates up to the year 2099. In the case of the Nintendo DS, the system will not advance time beyond 2099-12-31, where as the GameCube and PS4 will still roll over into 2100 and beyond, even in spite of the fact that users of those game consoles cannot manually input the date and time that far out.

Year 2106[edit]
Many existing file formats, communications protocols, and application interfaces employ a variant of the Unix time_t date format, storing the number of seconds since the Unix Epoch (midnight UTC, 1 January 1970) as an unsigned 32-bit binary integer. This value will roll over on 7 February 2106 at 06:28:15. That is, at this time the number of seconds since 1 January 1970 is FFFF FFFF in hex.
(This storage representation problem is independent of programs that internally store and operate on system times as 64-bit signed integer values.)

Year 2108[edit]
The date timestamps stored in FAT filesystems, originally introduced with 86-DOS 0.42 in 25 February 1981 and carried over into MS-DOS, PC DOS, DR-DOS etc., will overflow at the end of 2107-12-31. The last modification date stamp (and with DELWATCH 2.0+ also the file deletion date stamp, and since DOS 7.0+ optionally also the last access date stamp and creation date stamp), are stored in the directory entry with the year represented as an unsigned seven bit number (0â127), relative to 1980, and thereby unable to indicate any dates in the year 2108 and beyond. The API functions defined to retrieve these dates officially only support dates up to 2099-12-31.
This will also affect the ZIP archive file format, as it uses FAT file modification timestamps internally.

Year 2137[edit]
Main article: GPS Week Number Rollover
See also: GPS Â§Â Timekeeping
GPS dates are expressed as a week number and a day-of-week number, with the week number initially using a ten-bit value and modernised GPS navigation messages using a 13-bit field. Ten-bit systems would roll over every 1024 weeks (about 19.6 years) after Sunday 6 January 1980 (the GPS epoch), and 13-bit systems roll over every 8192 weeks. Thirteen-bit systems will roll over to zero in 2137.[5][6]

Year 2262[edit]
Some timekeeping systems count nanoseconds since 1970 using a 64-bit signed integer, which will overflow at 11 April 2262 23:47:16.  The Go programming language's UnixNano API is one example.[47] Other examples include the Timestamp object in Python pandas,[48] C++ chrono::system_clock[49][failed verification â see discussion], and the QEMU timers.[50]

Years 4000 and 8000[edit]
While most software (including Excel, JavaScript and R) correctly recognizes 4000 and 8000 as leap years (as they are divisible by 400), SAS does not due to an unofficial "4000 year rule".
Thus, date conversions between SAS and other software will go out of sync after February 28, 4000, unless the SAS software accounts for this discrepancy.[51][52]

Year 4501[edit]
Microsoft Outlook uses the date 1 January 4501 as a placeholder for "none" or "empty".[53][54]

Year 10,000[edit]
The year 10,000 will be the first Gregorian year with five digits. Although many people at first consider this year to be so far distant that a problem of this type will never actually occur, certain classes of calculations in disciplines such as astronomy and physics already need to work with years of this magnitude and greater. These applications also have to deal with the Year zero problem. All future years that are powers of 10 have the potential for similar problems.
"RFC 2550 - Y10K and Beyond"[55] discusses solutions for dealing with this problem. While this is one of the "April Fool" RFCs, it raises important points while dressed with a generous helping of humour.

Year 30,828[edit]
Beginning 14 September 30,828, Windows will not accept dates beyond this day and on startup, Windows will display an error regarding "invalid system time". This is because the FILETIME value in Windows, which is a 64-bit value corresponding to the number of 100-nanosecond intervals since 1 January 1601, 00:00:00.0000000 UTC, will overflow its maximum possible value on that day at 02:48:05.4775808 UTC.[56] This is because of integer overflow.

Years 32,768 and 65,536[edit]
Programs that process years as 16-bit values may encounter problems dealing with either the year 32,768 or 65,536, depending on whether the value is treated as a signed or unsigned integer.
For the year 32,768 problem, years after 32,767 may be interpreted as negative numbers, beginning with â32,768.[57] The year 65,536 problem is more likely to manifest itself by representing the year 65,536 as the year 0.[58]

Year 292,277,026,596 problem[edit]
Certain problematic years occur so far in the future (well beyond the likely lifespan of the Earth, the Sun, humanity, and even past some predictions of the lifetime of the universe) that they are mainly referenced as matters of theoretical interest, jokes, or indications that a related problem is not truly solved for any reasonable definition of âsolvedâ.
The year 292,277,026,596 problem (about 2.9Ã1011 years in the future) will occur when the 64-bit Unix time overflows after UTC 15:30:08 on Sunday, 4 December, 292,277,026,596 AD.[59][60]

Relative time overflow[edit]
Microsoft[edit]
In Microsoft Windows 7, Windows Server 2003, Windows Server 2008 and Windows Vista, TCP connection start information was stored in hundredths of a second, using a 32-bit unsigned integer, causing an overflow and TCP connections to fail after 497 days.[61]
Microsoft Windows 95 and Windows 98 had a problem with 2^32 millisecond rollover in a virtual device driver (VTDAPI.VXD), which caused systems to hang after 49.7 days.[62]

Boeing[edit]
The Boeing 787 aircraft has had at least two software issues related to time storage. In 2015, an error was reported where time was stored in hundredths of a second, using a signed 32-bit integer, and the systems would crash after 248 days.[63] In 2020, the FAA issued an airworthiness directive for a problem where, if the aircraft is not powered down completely before reaching 51 days of uptime, systems will begin to display misleading data.[64]

Arduino[edit]
The Arduino platform provides a relative time via the millis() function. This function returns an unsigned 32 bit value for "milliseconds since startup", which is designed to roll over every 49.71 days. By default, this is the only timing source available in the platform and programs need to take special care to handle rollovers.[65] Internally, millis() is based on counting timer interrupts. Certain powersave modes disable interrupts and therefore stop the counter from advancing during sleep.[66]

See also[edit]
Software bug
Heisenbug
Long Now Foundation
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Austein, Rob (2 February 1987). "DATE-86, or The Ghost of Tinkles Past". The RISKS Digest. ACM Committee on Computers and Public Policy. 4 (45). Retrieved 29 December 2014.

^ "Directory of linctape-images/os8l/ps-8-system-25.linc". OS/8 can only store dates for an 8 year period...

^ "The Digital Equipment Corporation PDP-8Â : Frequently Asked Questions". COS-310, DEC's commercial operating system for the PDP-8 ... file system is almost the same as OS/8, but dates are recorded differently

^ "Latest News on the Date Bug".

^ Jump up to: a b c Janis L. Gogan (9 August 1999). "Applications To The Nines". InformationWeek. Archived from the original on 3 October 2008. Retrieved 21 January 2008.

^ Jump up to: a b "GPS week roll over April 6th". www.cyber.gov.au. Retrieved 10 June 2019.

^ Roger Deschner (21 December 2001). "Identifying and Correcting Dates with Two-Digit Years". University of Illinois at Chicago. Retrieved 19 January 2010. See "Example 1: 100 Year Fixed Window, 1973 to 2072"

^ date â write the date and time, The Open Group Base Specifications Issue 6.  IEEE Std 1003.1, 2004 Edition

^ "Bank of Queensland hit by "Y2.01k" glitch". 4 January 2010.

^ "Windows Mobile glitch dates 2010 texts 2016". 5 January 2010.

^ "Windows Mobile phones suffer Y2K+10 bug". 4 January 2010. Archived from the original on 23 October 2013. Retrieved 3 July 2013.

^ "Bank of Queensland vs Y2K â an update". 4 January 2010. Archived from the original on 8 January 2010. Retrieved 3 July 2013.

^ Loftus, Jack (28 February 2010). "Error: 8001050F Takes Down PlayStation Network". Gizmodo.

^ "2010 Bug in Germany". 6 January 2010.

^ "Taiwan's Y1C problem". Pinyin News. 2 January 2006.

^ Wallace, Malcolm (23 September 2013). "Re: [tz] Deep Impact: wrong time zone?". Time Zone Database. Archived from the original on 2 October 2013.

^ Mansoor, Saqib (1 January 2020). "WWE 2K20 Refuses To Run In 2020". SegmentNext. Retrieved 1 January 2020.

^ "Star Wars Jedi: Fallen Order and WWE 2K20 are not launching due to a "2020" bug [UPDATE]". DSOGaming. 1 January 2020. Retrieved 19 November 2020.

^ "sql - ODBC Connection / Crystal Reports". Stack Overflow. Retrieved 19 November 2020.

^ "Parking Meters Across NYC Not Accepting Credit Cards, Were Never Programmed To Work In 2020". 2 January 2020. Retrieved 19 November 2020.

^ "Archived copy". Archived from the original on 4 January 2020. Retrieved 4 January 2020.{{cite web}}:  CS1 maint: archived copy as title (link)

^ Pallus, Patryk; Wczoraj 16:21; 30 452 (3 January 2020). "Wielka awaria drukarek fiskalnych. Producent naprawia urzÄdzenia, firmy liczÄ straty". Business Insider (in Polish). Retrieved 4 January 2020.{{cite web}}:  CS1 maint: numeric names: authors list (link)

^ "Suunto Spartan Software updates".

^ "Technical Note TN1049 Approaching the Millennium: The Mac and the Year 2000". Archived from the original on 13 November 2014. Retrieved 20 January 2020.

^ "Vintage Mac 2020 fixes". Retrieved 21 January 2020.

^ Y2K strikes back? Users report an interesting glitch in Samsung's One UI 3.0 PhoneArena

^ [Update: Jan. 02] Samsung One UI 3.0 (Android 11) update bugs & issues tracker PiunikaWeb

^ Born, GÃ¼nter (1 January 2022). "Exchange Year 2022 Problem: FIP-FS Scan Engine failed to load â Can't Convert "2201010001" to long (2022/01/01 00:00 UTC)". Born's Tech and Windows World. Retrieved 1 January 2022.

^ Martin, Alexander (2 January 2022). "Remember the Y2K bug? Microsoft confirms new Y2K22 issue". Sky News.

^ "Honda Clocks Are Stuck 20 Years In The Past And There Isn't A Fix". Jalopnik. Retrieved 8 January 2022.

^ "Shoddy coding has some Honda cars stuck in the year 2002". Engadget. Retrieved 8 January 2022.

^ "Big tech warns of 'Japan's millennium bug' ahead of Akihito's abdication". TheGuardian.com. 25 July 2018.

^ "Years since 1900 + seven bits = breakage in 2028". rachelbythebay.com.

^ "MPE/iX Release 7.5 Patch Revision 2028 â Beechglen Development Inc".

^ "Palm OSÂ® Protein C/C++ Compiler Language & Library Reference" (PDF). Retrieved 12 October 2019.

^ "subject:%22Re%5C%3A Date limited to 2031%22". www.mail-archive.com. Retrieved 12 October 2019.

^ David L. Mills (12 May 2012). "The NTP Era and Era Numbering". Retrieved 24 September 2016.

^ W. Richard Stevens; Bill Fenner; Andrew M. Rudoff (2004). UNIX Network Programming. Addison-Wesley Professional. pp.Â 582â. ISBNÂ 978-0-13-141155-5.

^ Apple Computer, Inc., Inside Macintosh, Volume II, Addison Wesley, 1985, p. 369

^ "ProDOS Dates -- 2000 and Beyond". Apple, Inc. Retrieved 6 December 2019.

^ "ProDOS 2.5". Retrieved 9 June 2021.

^ Jump up to: a b Lascu, Octavian; Eckam, Hans-Peter; Kozakos, George; Pereira, Paulo Vitor (June 2013), Server Time Protocol Planning Guide, IBM Redbooks (4thÂ ed.), IBM, p.Â 19, ISBNÂ 978-0738438108, retrieved 11 August 2019

^ "SAP note 2258792 (access to SAP Support Portal required)". 30 November 2018.

^ "What happens when you max out the year and set to Dec 31st 11:59 PM?". 29 June 2016. Retrieved 1 November 2020.

^ "Animal Crossing time travel". IGN. 12 April 2020. Retrieved 28 August 2021.

^ 
J. R. Stockton (12 April 2009). "Critical and Significant Dates". Archived from the original on 7 September 2015. Retrieved 20 August 2009.

^ "time package - time". pkg.go.dev.

^ "Time series / Date functionality â pandas 1.3.4 documentation".

^ "std::chrono::system_clock". en.cppreference.com.

^ "Archived copy". Archived from the original on 21 January 2021. Retrieved 19 June 2021.{{cite web}}:  CS1 maint: archived copy as title (link)

^ In the year 9999...., Chris Hemedinger

^ The Conversion of Date and Time Values between SAS Data Sets and Microsoft Access Database, SAS 9.4 documentation

^ "OlMarkInterval enumeration (Outlook)".

^ "Filtering Items Using Query Keywords".

^ Glassman, Steve; Manasse, Mark; Mogul, Jeffrey (April 1999). "rfc2550". datatracker.ietf.org. Retrieved 13 September 2021.

^ Thulin, Anders (6 April 2013). "Interpretation of NTFS Timestamps". Forensic Focus. Retrieved 23 July 2019.

^ Top 10 Fun Reasons why you Should Stop Using Delphi, now!

^ "Archived copy". Archived from the original on 9 February 2008. Retrieved 21 January 2008.{{cite web}}:  CS1 maint: archived copy as title (link)

^ William Porquet (15 August 2007). "Project 2038 FAQ". Retrieved 5 March 2010.

^ "Date/Time Conversion Contract Language" (PDF). Office of Information Technology Services, New York (state). 19 May 2019. Retrieved 16 October 2020.

^ "All the TCP/IP ports that are in a TIME_WAIT status are not closed after 497 days from system startup in Windows Vista, in Windows 7, in Windows Server 2008 and in Windows Server 2008 R2".

^ "Computer Hangs After 49.7 Days". 8 May 1999. Archived from the original on 8 May 1999.

^ Edgar Alvarez (1 May 2015). "To keep a Boeing Dreamliner flying, reboot once every 248 days". Engadget. Retrieved 2 April 2020.

^ Gareth Corfield (2 April 2020). "Boeing 787s must be turned off and on every 51 days to prevent 'misleading data' being shown to pilots". The Register. Retrieved 2 April 2020.

^ "The Answer to the Arduino millis() Overflow/Wraparound Question". EEWeb. 22 March 2018.

^ "Power - How to keep track of millis during sleep mode".


Notes[edit]


.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteYear-related problemsDecimal or BCD storage related
Year 1900 problem
Year 2000 problem
Year 2011 problem
Year 2042 problem
Year 2100 problem
Year 10,000 problem
Leap year problem
Binary storage related
2036 NTP wraparound
Year 2038 problem
Year 2108 problem
Years 32,768 and 65,536 problems
Hexadecimal storage related
Year 2010 problem

Time formatting and storage bugs
Time code ambiguity
Epoch







<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Time_formatting_and_storage_bugs&oldid=1068525367"
		Categories: Time formatting and storage bugsSoftware bugsCalendarsHidden categories: CS1 maint: archived copy as titleCS1 maint: numeric names: authors listCS1 Polish-language sources (pl)Articles with short descriptionShort description is different from WikidataArticles needing additional references from December 2021All articles needing additional referencesAll articles with unsourced statementsArticles with unsourced statements from January 2022Articles with unsourced statements from October 2021Articles with unsourced statements from November 2020Articles to be expanded from September 2020All articles to be expandedArticles using small message boxesArticles with unsourced statements from September 2015Articles needing additional references from August 2021All articles with failed verificationArticles with failed verification from March 2021Use dmy dates from November 2020
	
