
Title:
Dominating set
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}For Dominator in control flow graphs, see Dominator (graph theory).
  Dominating sets (redÂ vertices).
In graph theory, a dominating set for a graph GÂ =Â (V,Â E) is a subset D of V such that every vertex not in D is adjacent to at least one member of D. The domination number Î³(G) is the number of vertices in a smallest dominating set forÂ G.
The dominating set problem concerns testing whether Î³(G)Â â¤Â K for a given graph G and input K; it is a classical NP-complete decision problem in computational complexity theory.[1] Therefore it is believed that there may be no efficient algorithm that finds a smallest dominating set for all graphs, although there are efficient approximation algorithms, as well as both efficient and exact algorithms for certain graph classes.
Figures (a)â(c) on the right show three examples of dominating sets for a graph. In each example, each white vertex is adjacent to at least one red vertex, and it is said that the white vertex is dominated by the red vertex. The domination number of this graph is 2: the examples (b) and (c) show that there is a dominating set with 2 vertices, and it can be checked that there is no dominating set with only 1 vertex for this graph.

Contents

1 History
2 Dominating and independent sets

2.1 Domination by independent sets
2.2 Domination of independent sets


3 Algorithms and computational complexity

3.1 L-reductions

3.1.1 From dominating set to set covering
3.1.2 From set covering to dominating set


3.2 Special cases
3.3 Exact algorithms
3.4 Parameterized complexity


4 Variants
5 See also
6 Notes
7 References
8 Further reading



History[edit]
The domination problem was studied from the 1950s onwards, but the rate of research on domination significantly increased in the mid-1970s. In 1972, Richard Karp proved the set cover problem to be NP-complete. This had immediate implications for the dominating set problem, as there are straightforward vertex to set and edge to non-disjoint-intersection bijections between the two problems. This proved the dominating set problem to be NP-complete as well.[2]
Dominating sets are of practical interest in several areas. In wireless networking, dominating sets are used to find efficient routes within ad-hoc mobile networks. They have also been used in document summarization, and in designing secure systems for electrical grids.

Dominating and independent sets[edit]
Dominating sets are closely related to independent sets: an independent set is also a dominating set if and only if it is a maximal independent set, so any maximal independent set in a graph is necessarily also a minimal dominating set.

Domination by independent sets[edit]
A dominating set may or may not be an independent set. For example, figures (a) and (b) above show independent dominating sets, while figure (c) illustrates a dominating set that is not an independent set.
The independent domination number i(G) of a graph G is the size of the smallest dominating set that is an independent set. Equivalently, it is the size of the smallest maximal independent set. The minimum in i(G) is taken over less elements (only the independent sets are considered), so Î³(G) â¤ i(G) for all graphs G.
The inequality can be strict - there are graphs G for which Î³(G) < i(G).  For example, let G be the double star graph consisting of vertices x1, ..., xp, a, b, y1, ..., yq, where p, q > 1.  The edges of G are defined as follows: each xi is adjacent to a, a is adjacent to b, and b is adjacent to each yj.  Then Î³(G) = 2 since {a, b} is a smallest dominating set.  If p â¤ q, then i(G) = p + 1 since {x1, ..., xp, b} is a smallest dominating set that is also independent (it is a smallest maximal independent set).
There are graph families in which Î³(G) = i(G), that is, every minimum maximal independent set is a minimum dominating set. For example, Î³(G) = i(G) if G is a claw-free graph.[3]
A graph G is called a domination-perfect graph if Î³(H) = i(H) in every induced subgraph H of G. Since an induced subgraph of a claw-free graph is claw-free, it follows that every claw-free graphs is also domination-perfect.[4]
For any graph G, its line graph L(G) is claw-free, and hence a minimum maximal independent set in L(G) is also a minimum dominating set in L(G). An independent set in L(G) corresponds to a matching in G, and a dominating set in L(G) corresponds to an edge dominating set in G. Therefore a minimum maximal matching has the same size as a minimum edge dominating set.

Domination of independent sets[edit]
The independence domination number iÎ³(G) of a graph G is the maximum, over all independent sets A of G, of the smallest set dominating A.[5] Dominating subsets of vertices requires potentially less vertices than dominating all vertices, so iÎ³(G) â¤ Î³(G) for all graphs G.
The inequality can be strict - there are graphs G for which iÎ³(G) < Î³(G).  For example, for some integer n, let G be a graph in which the vertices are the rows and columns of an n-by-n board, and two such vertices are connected if and only if they intersect. The only independent sets are sets of only rows or sets of only columns, and each of them can be dominated by a single vertex (a column or a row), so iÎ³(G)=1. However, to dominate all vertices we need at least one row and one column, so Î³(G)=2.  Moreover, the ratio between Î³(G) /  iÎ³(G) can be arbitrarily large. For example, if the vertices of G are all the subsets of squares of an n-by-n board, then still iÎ³(G)=1, but Î³(G)=n.[5]
The bi-independent domination number iÎ³i(G) of a graph G is the maximum, over all independent sets A of G, of the smallest independent set dominating A. The following relations hold for any graph G:
  
    
      
        
          
            
              
                i
                (
                G
                )
              
              
                
                â¥
                Î³
                (
                G
                )
                â¥
                i
                Î³
                (
                G
                )
              
            
            
              
                i
                (
                G
                )
              
              
                
                â¥
                i
                Î³
                i
                (
                G
                )
                â¥
                i
                Î³
                (
                G
                )
              
            
          
        
      
    
    {\displaystyle {\begin{aligned}i(G)&\geq \gamma (G)\geq i\gamma (G)\\i(G)&\geq i\gamma i(G)\geq i\gamma (G)\end{aligned}}}
  


Algorithms and computational complexity[edit]
The set cover problem is a well-known NP-hard problem â the decision version of set covering was one of Karp's 21 NP-complete problems. There exist a pair of polynomial-time L-reductions between the minimum dominating set problem and the set cover problem.[6] These reductions (see below) show that an efficient algorithm for the minimum dominating set problem would provide an efficient algorithm for the set cover problem, and vice versa. Moreover, the reductions preserve the approximation ratio: for any Î±, a polynomial-time Î±-approximation algorithm for minimum dominating sets would provide a polynomial-time Î±-approximation algorithm for the set cover problem and vice versa. Both problems are in fact Log-APX-complete.[7]
The approximability of set covering is also well understood: a logarithmic approximation factor can be found by using a simple greedy algorithm, and finding a sublogarithmic approximation factor is NP-hard. More specifically, the greedy algorithm provides a factor 1â+Â logâ|V| approximation of a minimum dominating set, and no polynomial time algorithm can achieve an approximation factor better than cÂ logâ|Vââ| for some cÂ >Â 0 unless PÂ =Â NP.[8]

L-reductions[edit]
The following two reductions show that the minimum dominating set problem and the set cover problem are equivalent under L-reductions: given an instance of one problem, we can construct an equivalent instance of the other problem.[6]

From dominating set to set covering[edit]
Given a graph G = (V, E) with V = {1, 2, ..., n}, construct a set cover instance (U, S) as follows: the universe U is V, and the family of subsets is S = {S1, S2, ..., Sn} such that Sv consists of the vertex v and all vertices adjacent to v in G.
Now if D is a dominating set for G, then C = {SvÂ : v â D} is a feasible solution of the set cover problem, with |C| = |D|. Conversely, if C = {SvÂ : v â D} is a feasible solution of the set cover problem, then D is a dominating set for G, with |D| = |C|.
Hence the size of a minimum dominating set for G equals the size of a minimum set cover for (U, S). Furthermore, there is a simple algorithm that maps a dominating set to a set cover of the same size and vice versa. In particular, an efficient Î±-approximation algorithm for set covering provides an efficient Î±-approximation algorithm for minimum dominating sets.


For example, given the graph G shown on the right, we construct a set cover instance with the universe U = {1, 2, ..., 6} and the subsets S1 = {1, 2, 5}, S2 = {1, 2, 3, 5}, S3 = {2, 3, 4, 6}, S4 = {3, 4}, S5 = {1, 2, 5, 6}, and S6 = {3, 5, 6}. In this example, D = {3, 5} is a dominating set for G â this corresponds to the set cover C = {S3, S5}. For example, the vertex 4â V is dominated by the vertex 3Â â D, and the element 4Â â U is contained in the set S3 â C.
From set covering to dominating set[edit]
Let (S, U) be an instance of the set cover problem with the universe U and the family of subsets S = {SiÂ : i â I}; we assume that U and the index set I are disjoint. Construct a graph G = (V, E) as follows: the set of vertices is V = I âª U, there is an edge {i, j} â E between each pair i, j â I, and there is also an edge {i, u} for each i â I and u â Si. That is, G is a split graph: I is a clique and U is an independent set.
Now if C = {SiÂ : i â D} is a feasible solution of the set cover problem for some subset D â I, then D is a dominating set for G, with |D| = |C|: First, for each u â U there is an i â D such that u â Si, and by construction, u and i are adjacent in G; hence u is dominated by i. Second, since D must be nonempty, each i â I is adjacent to a vertex in D.
Conversely, let D be a dominating set for G. Then it is possible to construct another dominating set X such that |X| â¤ |D| and X â I: simply replace each u â D â© U by a neighbour i â I of u. Then C = {SiÂ : i â X} is a feasible solution of the set cover problem, with |C| = |X| â¤ |D|.


The illustration on the right show the construction for U = {a, b, c, d, e}, I = {1, 2, 3, 4}, S1 = {a, b, c}, S2 = {a, b}, S3 = {b, c, d}, and S4 = {c, d, e}.
In this example, C = {S1, S4} is a set cover; this corresponds to the dominating set D = {1, 4}.
D = {a, 3, 4} is another dominating set for the graph G. Given D, we can construct a dominating set X = {1, 3, 4} which is not larger than D and which is a subset of I. The dominating set X corresponds to the set cover C = {S1, S3, S4}.
Special cases[edit]
If the graph has maximum degree Î, then the greedy approximation algorithm finds an O(logâÎ)-approximation of a minimum dominating set. Also, let dg be the cardinality of dominating set obtained using greedy approximation then following relation holds, 
  
    
      
        
          d
          
            g
          
        
        â¤
        N
        +
        1
        â
        
          
            2
            M
            +
            1
          
        
      
    
    {\displaystyle d_{g}\leq N+1-{\sqrt {2M+1}}}
  
, where N is number of nodes and M is number of edges in given undirected graph.[9] For fixed Î, this qualifies as a dominating set for APX membership; in fact, it is APX-complete.[10]
The problem admits a polynomial-time approximation scheme (PTAS) for special cases such as unit disk graphs and planar graphs.[11] A minimum dominating set can be found in linear time in seriesâparallel graphs.[12]

Exact algorithms[edit]
A minimum dominating set of an n-vertex graph can be found in time O(2nân) by inspecting all vertex subsets. Fomin, Grandoni & Kratsch (2009) show how to find a minimum dominating set in time O(1.5137n) and exponential space, and in time O(1.5264n) and polynomial space. A faster algorithm, using O(1.5048n) time was found by van Rooij, Nederlof & van Dijk (2009), who also show that the number of minimum dominating sets can be computed in this time.  The number of minimal dominating sets is at most 1.7159n and all such sets can be listed in time  O(1.7159n).[13]

Parameterized complexity[edit]
Finding a dominating set of size k plays a central role in the theory of parameterized complexity. It is the most well-known problem complete for the class W[2] and used in many reductions to show intractability of other problems. In particular, the problem is not fixed-parameter tractable in the sense that no algorithm with running time f(k)nO(1) for any function f exists unless the W-hierarchy collapses to FPT=W[2].
On the other hand, if the input graph is planar, the problem remains NP-hard, but a fixed-parameter algorithm is known. In fact, the problem has a kernel of size linear in k,[14] and running times that are exponential in âk and cubic in n may be obtained by applying dynamic programming to a branch-decomposition of the kernel.[15] More generally, the dominating set problem and many variants of the problem are fixed-parameter tractable when parameterized by both the size of the dominating set and the size of the smallest forbidden complete bipartite subgraph; that is, the problem is FPT on biclique-free graphs, a very general class of sparse graphs that includes the planar graphs.[16]
The complementary set to a dominating set, a nonblocker, can be found by a fixed-parameter algorithm on any graph.[17]

Variants[edit]
An important subclass of the dominating sets is the class of connected dominating sets. If S is a connected dominating set, one can form a spanning tree of G in which S forms the set of non-leaf vertices of the tree; conversely, if T is any spanning tree in a graph with more than two vertices, the non-leaf vertices of T form a connected dominating set. Therefore, finding minimum connected dominating sets is equivalent to finding spanning trees with the maximum possible number of leaves.
A total dominating set is a set of vertices such that all vertices in the graph (including the vertices in the dominating set themselves) have a neighbor in the dominating set. Figure (c) above shows a dominating set that is a connected dominating set and a total dominating set; the examples in figures (a) and (b) are neither.
A k-tuple dominating set is a set of vertices such that each vertex in the graph has at least k neighbors in the set. An (1â+Â log n)-approximation of a minimum k-tuple dominating set can be found in polynomial time.[18] Similarly, a k-dominating set is a set of vertices such that each vertex not in the set has at least k neighbors in the set. While every graph admits a k-dominating set, only graphs with minimum degree k â 1 admit a k-tuple dominating set. However, even if the graph admits k-tuple dominating set, a minimum k-tuple dominating set can be nearly k times as large as a minimum k-dominating set for the same graph;[19] An (1.7 + log Î)-approximation of a minimum k-dominating set can be found in polynomial time as well.
A star-dominating set  is a subset D of V such that, for every vertex v in V, the star of v (the set of edges adjacent to v) intersects the star of some vertex in D. Clearly, if G has isolated vertices then it has no star-dominating sets (since the star of isolated vertices is empty). If G has no isolated vertices, then every dominating set is a star-dominating set and vice versa. The distinction between star-domination and usual domination is more substantial when their fractional variants are considered.[20]
A domatic partition is a partition of the vertices into disjoint dominating sets. The domatic number is the maximum size of a domatic partition.
An eternal dominating set is a dynamic version of domination in which a vertex v in dominating set D is chosen and replaced with a neighbor u (u is not in D) such that the modified D is also a dominating set and this process can be repeated over any infinite sequence of choices of verticesÂ v.

See also[edit]
Vizing's conjecture - relates the domination number of a cartesian product of graphs to the domination number of its factors.
Set cover problem
Bondage number
Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ Garey & Johnson (1979).

^ Hedetniemi & Laskar (1990).

^ Allan & Laskar (1978).

^ Faudree, Flandrin & RyjÃ¡Äek (1997).

^ Jump up to: a b .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Aharoni, Ron; Berger, Eli; Ziv, Ran (2007-05-01). "Independent systems of representatives in weighted graphs". Combinatorica. 27 (3): 253â267. doi:10.1007/s00493-007-2086-y. ISSNÂ 1439-6912. S2CIDÂ 43510417.

^ Jump up to: a b Kann (1992), pp.Â 108â109.

^ Escoffier & Paschos (2006).

^ Raz & Safra (1997).

^ Parekh (1991).

^ Papadimitriou & Yannakakis (1991).

^ Crescenzi et al. (2000).

^ Takamizawa, Nishizeki & Saito (1982).

^ Fomin et al. (2008).

^ Alber, Fellows & Niedermeier (2004).

^ Fomin & Thilikos (2006).

^ Telle & Villanger (2012).

^ Dehne et al. (2006).

^ Klasing & Laforest (2004).

^ FÃ¶rster (2013).

^ Meshulam, Roy (2003-05-01). "Domination numbers and homology". Journal of Combinatorial Theory, Series A. 102 (2): 321â330. doi:10.1016/S0097-3165(03)00045-1. ISSNÂ 0097-3165.


References[edit]
Alber, Jochen; Fellows, Michael R; Niedermeier, Rolf (2004), "Polynomial-time data reduction for dominating set", Journal of the ACM, 51 (3): 363â384, arXiv:cs/0207066, doi:10.1145/990308.990309, S2CIDÂ 488501.
Allan, Robert B.; Laskar, Renu (1978), "On domination and independent domination numbers of a graph", Discrete Mathematics, 23 (2): 73â76, doi:10.1016/0012-365X(78)90105-X.
Crescenzi, Pierluigi; Kann, Viggo; HalldÃ³rsson, MagnÃºs; Karpinski, Marek; Woeginger, Gerhard (2000), "Minimum dominating set", A Compendium of NP Optimization Problems.
Dehne, Frank; Fellows, Michael; Fernau, Henning; Prieto, Elena; Rosamond, Frances (2006), "Nonblocker: Parameterized algorithmics for minimum dominating set" (PDF), SOFSEM 2006: 32nd Conference on Current Trends in Theory and Practice of Computer Science, Merin, Czech Republic, January 21-27, 2006, Proceedings, Lecture Notes in Computer Science, vol.Â 3831, Springer, pp.Â 237â245, doi:10.1007/11611257_21.
Escoffier, Bruno; Paschos, Vangelis Th. (2006), "Completeness in approximation classes beyond APX", Theoretical Computer Science, 359 (1â3): 369â377, doi:10.1016/j.tcs.2006.05.023
Faudree, Ralph; Flandrin, Evelyne; RyjÃ¡Äek, ZdenÄk (1997), "Claw-free graphs â A survey", Discrete Mathematics, 164 (1â3): 87â147, doi:10.1016/S0012-365X(96)00045-3, MRÂ 1432221.
Fomin, Fedor V.; Grandoni, Fabrizio; Kratsch, Dieter (2009), "A measure & conquer approach for the analysis of exact algorithms", Journal of the ACM, 56 (5): 25:1â32, doi:10.1145/1552285.1552286, S2CIDÂ 1186651.
Fomin, Fedor V.; Grandoni, Fabrizio; Pyatkin, Artem; Stepanov, Alexey (2008), "Combinatorial bounds via measure and conquer: Bounding minimal dominating sets and applications", ACM Transactions on Algorithms, 5 (1): 9:1â17, doi:10.1145/1435375.1435384, S2CIDÂ 2489447.
Fomin, Fedor V.; Thilikos, Dimitrios M. (2006), "Dominating sets in planar graphs: branch-width and exponential speed-up", SIAM Journal on Computing, 36 (2): 281, doi:10.1137/S0097539702419649, S2CIDÂ 5232238.
FÃ¶rster, Klaus-Tycho. (2013), "Approximating Fault-Tolerant Domination in General Graphs", Proc. of the Tenth Workshop on Analytic Algorithmics and Combinatorics ANALCO, SIAM, pp.Â 25â32, doi:10.1137/1.9781611973037.4, ISBNÂ 978-1-61197-254-2.
Garey, Michael R.; Johnson, David S. (1979), Computers and Intractability: A Guide to the Theory of NP-Completeness, W.Â H.Â Freeman, ISBNÂ 0-7167-1045-5, p.Â 190, problem GT2.
Hedetniemi, S. T.; Laskar, R. C. (1990), "Bibliography on domination in graphs and some basic definitions of domination parameters", Discrete Mathematics, 86 (1â3): 257â277, doi:10.1016/0012-365X(90)90365-O.
Kann, Viggo (1992), On the Approximability of NP-complete Optimization Problems (PDF). PhD thesis, Department of Numerical Analysis and Computing Science, Royal Institute of Technology, Stockholm{{citation}}:  CS1 maint: postscript (link).
Klasing, Ralf; Laforest, Christian (2004), "Hardness results and approximation algorithms of k-tuple domination in graphs", Information Processing Letters, 89 (2): 75â83, doi:10.1016/j.ipl.2003.10.004.
Papadimitriou, Christos H.; Yannakakis, Mihailis (1991), "Optimization, Approximation, and Complexity Classes", Journal of Computer and System Sciences, 43 (3): 425â440, doi:10.1016/0022-0000(91)90023-X
Parekh, Abhay K. (1991), "Analysis of a greedy heuristic for finding small dominating sets in graphs", Information Processing Letters, 39 (5): 237â240, doi:10.1016/0020-0190(91)90021-9
Raz, R.; Safra, S. (1997), "A sub-constant error-probability low-degree test, and sub-constant error-probability PCP characterization of NP", Proc. 29th Annual ACM Symposium on Theory of Computing, ACM, pp.Â 475â484, doi:10.1145/258533.258641, ISBNÂ 0-89791-888-6, S2CIDÂ 15457604.
Takamizawa, K.; Nishizeki, T.; Saito, N. (1982), "Linear-time computability of combinatorial problems on seriesâparallel graphs", Journal of the ACM, 29 (3): 623â641, doi:10.1145/322326.322328, S2CIDÂ 16082154.
Telle, Jan Arne; Villanger, Yngve (2012), "FPT algorithms for domination in biclique-free graphs",  in Epstein, Leah; Ferragina, Paolo (eds.), Algorithms â ESA 2012: 20th Annual European Symposium, Ljubljana, Slovenia, September 10â12, 2012, Proceedings, Lecture Notes in Computer Science, vol.Â 7501, Springer, pp.Â 802â812, doi:10.1007/978-3-642-33090-2_69.
van Rooij, J. M. M.; Nederlof, J.; van Dijk, T. C. (2009), "Inclusion/Exclusion Meets Measure and Conquer: Exact Algorithms for Counting Dominating Sets", Proc. 17th Annual European Symposium on Algorithms, ESA 2009, Lecture Notes in Computer Science, vol.Â 5757, Springer, pp.Â 554â565, doi:10.1007/978-3-642-04128-0_50, ISBNÂ 978-3-642-04127-3.
Further reading[edit]
Grandoni, F. (2006), "A note on the complexity of minimum dominating set", Journal of Discrete Algorithms, 4 (2): 209â214, CiteSeerXÂ 10.1.1.108.3223, doi:10.1016/j.jda.2005.03.002.
Guha, S.; Khuller, S. (1998), "Approximation algorithms for connected dominating sets" (PDF), Algorithmica, 20 (4): 374â387, doi:10.1007/PL00009201, hdl:1903/830, S2CIDÂ 1249122.
Haynes, Teresa W.; Hedetniemi, Stephen; Slater, Peter (1998a), Fundamentals of Domination in Graphs, Marcel Dekker, ISBNÂ 0-8247-0033-3, OCLCÂ 37903553.
Haynes, Teresa W.; Hedetniemi, Stephen; Slater, Peter (1998b), Domination in Graphs: Advanced Topics, Marcel Dekker, ISBNÂ 0-8247-0034-1, OCLCÂ 38201061.
.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}Authority control: National libraries  
United States





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Dominating_set&oldid=1059496095"
		Categories: Graph theory objectsNP-complete problemsComputational problems in graph theoryHidden categories: CS1 maint: postscriptArticles with LCCN identifiers
	
