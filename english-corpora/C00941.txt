
Title:
Polynomial kernel
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}This article is about machine learning. For polynomial kernels in complexity theory, see Kernelization.
  Illustration of the mapping 
  
    
      
        Ï
      
    
    {\displaystyle \varphi }
  
. On the left a set of samples in the input space, on the right the same samples in the feature space where the polynomial kernel 
  
    
      
        K
        (
        x
        ,
        y
        )
      
    
    {\displaystyle K(x,y)}
  
 (for some values of the parameters 
  
    
      
        c
      
    
    {\displaystyle c}
  
 and 
  
    
      
        d
      
    
    {\displaystyle d}
  
) is the inner product. The hyperplane learned in feature space by an SVM is an ellipse in the input space.
In machine learning, the polynomial kernel is a kernel function commonly used with support vector machines (SVMs) and other kernelized models, that represents the similarity of vectors (training samples) in a feature space over polynomials of the original variables, allowing learning of non-linear models.
Intuitively, the polynomial kernel looks not only at the given features of input samples to determine their similarity, but also combinations of these. In the context of regression analysis, such combinations are known as interaction features. The (implicit) feature space of a polynomial kernel is equivalent to that of polynomial regression, but without the combinatorial blowup in the number of parameters to be learned. When the input features are binary-valued (booleans), then the features correspond to logical conjunctions of input features.[1]

Definition[edit]
For degree-d polynomials, the polynomial kernel is defined as[2]


  
    
      
        K
        (
        x
        ,
        y
        )
        =
        (
        
          x
          
            
              T
            
          
        
        y
        +
        c
        
          )
          
            d
          
        
      
    
    {\displaystyle K(x,y)=(x^{\mathsf {T}}y+c)^{d}}
  

where x and y are vectors in the input space, i.e. vectors of features computed from training or test samples and c â¥ 0 is a free parameter trading off the influence of higher-order versus lower-order terms in the polynomial. When c = 0, the kernel is called homogeneous.[3] (A further generalized polykernel divides xTy by a user-specified scalar parameter a.[4])
As a kernel, K corresponds to an inner product in a feature space based on some mapping Ï:


  
    
      
        K
        (
        x
        ,
        y
        )
        =
        â¨
        Ï
        (
        x
        )
        ,
        Ï
        (
        y
        )
        â©
      
    
    {\displaystyle K(x,y)=\langle \varphi (x),\varphi (y)\rangle }
  

The nature of Ï can be seen from an example. Let d = 2, so we get the special case of the quadratic kernel. After using the multinomial theorem (twiceâthe outermost application is the binomial theorem) and regrouping,


  
    
      
        K
        (
        x
        ,
        y
        )
        =
        
          
            (
            
              
                â
                
                  i
                  =
                  1
                
                
                  n
                
              
              
                x
                
                  i
                
              
              
                y
                
                  i
                
              
              +
              c
            
            )
          
          
            2
          
        
        =
        
          â
          
            i
            =
            1
          
          
            n
          
        
        
          (
          
            x
            
              i
            
            
              2
            
          
          )
        
        
          (
          
            y
            
              i
            
            
              2
            
          
          )
        
        +
        
          â
          
            i
            =
            2
          
          
            n
          
        
        
          â
          
            j
            =
            1
          
          
            i
            â
            1
          
        
        
          (
          
            
              
                2
              
            
            
              x
              
                i
              
            
            
              x
              
                j
              
            
          
          )
        
        
          (
          
            
              
                2
              
            
            
              y
              
                i
              
            
            
              y
              
                j
              
            
          
          )
        
        +
        
          â
          
            i
            =
            1
          
          
            n
          
        
        
          (
          
            
              
                2
                c
              
            
            
              x
              
                i
              
            
          
          )
        
        
          (
          
            
              
                2
                c
              
            
            
              y
              
                i
              
            
          
          )
        
        +
        
          c
          
            2
          
        
      
    
    {\displaystyle K(x,y)=\left(\sum _{i=1}^{n}x_{i}y_{i}+c\right)^{2}=\sum _{i=1}^{n}\left(x_{i}^{2}\right)\left(y_{i}^{2}\right)+\sum _{i=2}^{n}\sum _{j=1}^{i-1}\left({\sqrt {2}}x_{i}x_{j}\right)\left({\sqrt {2}}y_{i}y_{j}\right)+\sum _{i=1}^{n}\left({\sqrt {2c}}x_{i}\right)\left({\sqrt {2c}}y_{i}\right)+c^{2}}
  

From this it follows that the feature map is given by:


  
    
      
        Ï
        (
        x
        )
        =
        â¨
        
          x
          
            n
          
          
            2
          
        
        ,
        â¦
        ,
        
          x
          
            1
          
          
            2
          
        
        ,
        
          
            2
          
        
        
          x
          
            n
          
        
        
          x
          
            n
            â
            1
          
        
        ,
        â¦
        ,
        
          
            2
          
        
        
          x
          
            n
          
        
        
          x
          
            1
          
        
        ,
        
          
            2
          
        
        
          x
          
            n
            â
            1
          
        
        
          x
          
            n
            â
            2
          
        
        ,
        â¦
        ,
        
          
            2
          
        
        
          x
          
            n
            â
            1
          
        
        
          x
          
            1
          
        
        ,
        â¦
        ,
        
          
            2
          
        
        
          x
          
            2
          
        
        
          x
          
            1
          
        
        ,
        
          
            2
            c
          
        
        
          x
          
            n
          
        
        ,
        â¦
        ,
        
          
            2
            c
          
        
        
          x
          
            1
          
        
        ,
        c
        â©
      
    
    {\displaystyle \varphi (x)=\langle x_{n}^{2},\ldots ,x_{1}^{2},{\sqrt {2}}x_{n}x_{n-1},\ldots ,{\sqrt {2}}x_{n}x_{1},{\sqrt {2}}x_{n-1}x_{n-2},\ldots ,{\sqrt {2}}x_{n-1}x_{1},\ldots ,{\sqrt {2}}x_{2}x_{1},{\sqrt {2c}}x_{n},\ldots ,{\sqrt {2c}}x_{1},c\rangle }
  

Practical use[edit]
Although the RBF kernel is more popular in SVM classification than the polynomial kernel, the latter is quite popular in natural language processing (NLP).[1][5]
The most common degree is d = 2 (quadratic), since larger degrees tend to overfit on NLP problems.
Various ways of computing the polynomial kernel (both exact and approximate) have been devised as alternatives to the usual non-linear SVM training algorithms, including:

full expansion of the kernel prior to training/testing with a linear SVM,[5] i.e. full computation of the mapping Ï as in polynomial regression;
basket mining (using a variant of the apriori algorithm) for the most commonly occurring feature conjunctions in a training set to produce an approximate expansion;[6]
inverted indexing of support vectors.[6][1]
One problem with the polynomial kernel is that it may suffer from numerical instability: when xTy + c < 1, K(x, y) = (xTy + c)d tends to zero with increasing d, whereas when xTy + c > 1, K(x, y) tends to infinity.[4]

References[edit]

^ a b c Yoav Goldberg and Michael Elhadad (2008). splitSVM: Fast, Space-Efficient, non-Heuristic, Polynomial Kernel Computation for NLP Applications. Proc. ACL-08: HLT.

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"Archived copy" (PDF). Archived from the original (PDF) on 2013-04-15. Retrieved 2012-11-12.{{cite web}}:  CS1 maint: archived copy as title (link)

^ Shashua, Amnon (2009). "Introduction to Machine Learning: Class Notes 67577". arXiv:0904.3664v1 [cs.LG].

^ a b Lin, Chih-Jen (2012). Machine learning software: design and practical use (PDF). Machine Learning Summer School. Kyoto.

^ a b Chang, Yin-Wen; Hsieh, Cho-Jui; Chang, Kai-Wei; Ringgaard, Michael; Lin, Chih-Jen (2010). "Training and testing low-degree polynomial data mappings via linear SVM". Journal of Machine Learning Research. 11: 1471â1490.

^ a b Kudo, T.; Matsumoto, Y. (2003). Fast methods for kernel-based text analysis. Proc. ACL.






<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Polynomial_kernel&oldid=919155626"
		Categories: Kernel methods for machine learningHidden categories: CS1 maint: archived copy as title
	
