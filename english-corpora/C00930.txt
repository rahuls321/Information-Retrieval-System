
Title:
State space search
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Class of search algorithms
State space search is a process used in the field of computer science, including artificial intelligence (AI), in which successive configurations or states of an instance are considered, with the intention of finding a goal state with the desired property.
Problems are often modelled as a state space, a set of states that a problem can be in. The set of states forms a graph where two states are connected if there is an operation that can be performed to transform the first state into the second.
State space search often differs from traditional computer science search methods because the state space is implicit: the typical state space graph is much too large to generate and store in memory.  Instead, nodes are generated as they are explored, and typically discarded thereafter.  A solution to a combinatorial search instance may consist of the goal state itself, or of a path from some initial state to the goal state.

Contents

1 Representation
2 Examples of state-space search algorithms

2.1 Uninformed search
2.2 Heuristic search


3 See also
4 References



Representation[edit]
In state space search, a state space is formally represented as a tuple 
  
    
      
        S
        :
        â¨
        S
        ,
        A
        ,
        A
        c
        t
        i
        o
        n
        (
        s
        )
        ,
        R
        e
        s
        u
        l
        t
        (
        s
        ,
        a
        )
        ,
        C
        o
        s
        t
        (
        s
        ,
        a
        )
        â©
      
    
    {\displaystyle S:\langle S,A,Action(s),Result(s,a),Cost(s,a)\rangle }
  
, in which:


  
    
      
        S
      
    
    {\displaystyle S}
  
 is the set of all possible states;

  
    
      
        A
      
    
    {\displaystyle A}
  
 is the set of possible actions, not related to a particular state but regarding all the state space;

  
    
      
        A
        c
        t
        i
        o
        n
        (
        s
        )
      
    
    {\displaystyle Action(s)}
  
 is the function that establish which action is possible to perform in a certain state;

  
    
      
        R
        e
        s
        u
        l
        t
        (
        s
        ,
        a
        )
      
    
    {\displaystyle Result(s,a)}
  
 is the function that returns the state reached performing action 
  
    
      
        a
      
    
    {\displaystyle a}
  
 in state 
  
    
      
        s
      
    
    {\displaystyle s}
  


  
    
      
        C
        o
        s
        t
        (
        s
        ,
        a
        )
      
    
    {\displaystyle Cost(s,a)}
  
 is the cost of performing an action 
  
    
      
        a
      
    
    {\displaystyle a}
  
 in state 
  
    
      
        s
      
    
    {\displaystyle s}
  
. In many state spaces is a constant, but this is not true in general.
Examples of state-space search algorithms[edit]
Uninformed search[edit]
According to Poole and Mack worth, the following are uninformed state-space search methods, meaning that they do not have any prior information about the goal's location.[1]

Traditional depth-first search
Breadth-first search
Iterative deepening
Lowest-cost-first search
Heuristic search[edit]
Some algorithms take into account information about the goal node's location in the form of a heuristic function.[2] Poole and Mackworth cite the following examples as informed search algorithms:

Heuristic depth-first search
Greedy best-first search
A* search
See also[edit]
State space
State space planning
References[edit]

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Poole, David; Mackworth, Alan. "3.5 Uninformed Search Strategiesâ£ Chapter 3 Searching for Solutions â£ Artificial Intelligence: Foundations of Computational Agents, 2nd Edition". artint.info. Retrieved 7 December 2017.

^ Poole, David; Mackworth, Alan. "3.6 Heuristic Searchâ£ Chapter 3 Searching for Solutions â£ Artificial Intelligence: Foundations of Computational Agents, 2nd Edition". artint.info. Retrieved 7 December 2017.


Stuart J. Russell and Peter Norvig (1995). Artificial Intelligence: A Modern Approach. Prentice Hall.


.mw-parser-output .asbox{position:relative;overflow:hidden}.mw-parser-output .asbox table{background:transparent}.mw-parser-output .asbox p{margin:0}.mw-parser-output .asbox p+p{margin-top:0.25em}.mw-parser-output .asbox-body{font-style:italic}.mw-parser-output .asbox-note{font-size:smaller}.mw-parser-output .asbox .navbar{position:absolute;top:-0.75em;right:1em;display:none}This artificial intelligence-related article is a stub. You can help Wikipedia by expanding it..mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vte




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=State_space_search&oldid=1051787592"
		Categories: Search algorithmsArtificial intelligence stubsHidden categories: Articles with short descriptionShort description matches WikidataAll stub articles
	
