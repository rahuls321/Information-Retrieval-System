
Title:
Computational complexity of mathematical operations
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		algorithmic runtime requirements for common math procedures
This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.Find sources:Â "Computational complexity of mathematical operations"Â âÂ newsÂ Â· newspapersÂ Â· booksÂ Â· scholarÂ Â· JSTOR  (April 2015) (Learn how and when to remove this template message)
  Graphs of functions commonly used in the analysis of algorithms, showing the number of operations 
  
    
      
        N
      
    
    {\displaystyle N}
  
 versus input size 
  
    
      
        n
      
    
    {\displaystyle n}
  
 for each function
The following tables list the computational complexity of various algorithms for common mathematical operations.
Here, complexity refers to the time complexity of performing computations on a multitape Turing machine.[1] See big O notation for an explanation of the notation used.
Note: Due to the variety of multiplication algorithms, 
  
    
      
        M
        (
        n
        )
      
    
    {\displaystyle M(n)}
  
 below stands in for the complexity of the chosen multiplication algorithm.

Contents

1 Arithmetic functions
2 Algebraic functions
3 Special functions

3.1 Elementary functions
3.2 Non-elementary functions
3.3 Mathematical constants


4 Number theory
5 Matrix algebra
6 Transforms
7 Notes
8 References
9 Further reading



Arithmetic functions[edit]



Operation

Input

Output

Algorithm

Complexity


Addition

Two 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit numbers, 
  
    
      
        N
      
    
    {\displaystyle N}
  
 and 
  
    
      
        N
      
    
    {\displaystyle N}
  


One 
  
    
      
        n
        +
        1
      
    
    {\displaystyle n+1}
  
-digit number

Schoolbook addition with carry


  
    
      
        Î
        (
        n
        )
        ,
        Î
        (
        log
        â¡
        (
        N
        )
        )
      
    
    {\displaystyle \Theta (n),\Theta (\log(N))}
  



Subtraction

Two 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit numbers, 
  
    
      
        N
      
    
    {\displaystyle N}
  
 and 
  
    
      
        N
      
    
    {\displaystyle N}
  


One 
  
    
      
        n
        +
        1
      
    
    {\displaystyle n+1}
  
-digit number

Schoolbook subtraction with borrow


  
    
      
        Î
        (
        n
        )
        ,
        Î
        (
        log
        â¡
        (
        N
        )
        )
      
    
    {\displaystyle \Theta (n),\Theta (\log(N))}
  



Multiplication

Two 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit numbers

One 
  
    
      
        2
        n
      
    
    {\displaystyle 2n}
  
-digit number

Schoolbook long multiplication


  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
  



Karatsuba algorithm


  
    
      
        O
        (
        
          n
          
            1.585
          
        
        )
      
    
    {\displaystyle O(n^{1.585})}
  



3-way ToomâCook multiplication


  
    
      
        O
        (
        
          n
          
            1.465
          
        
        )
      
    
    {\displaystyle O(n^{1.465})}
  




  
    
      
        k
      
    
    {\displaystyle k}
  
-way ToomâCook multiplication


  
    
      
        O
        (
        
          n
          
            
              
                log
                â¡
                (
                2
                k
                â
                1
                )
              
              
                log
                â¡
                k
              
            
          
        
        )
      
    
    {\displaystyle O(n^{\frac {\log(2k-1)}{\log k}})}
  



Mixed-level ToomâCook (Knuth 4.3.3-T)[2]


  
    
      
        O
        (
        n
        
        
          2
          
            
              2
              log
              â¡
              n
            
          
        
        
        log
        â¡
        n
        )
      
    
    {\displaystyle O(n\,2^{\sqrt {2\log n}}\,\log n)}
  



SchÃ¶nhageâStrassen algorithm


  
    
      
        O
        (
        n
        log
        â¡
        n
        log
        â¡
        log
        â¡
        n
        )
      
    
    {\displaystyle O(n\log n\log \log n)}
  



FÃ¼rer's algorithm[3]


  
    
      
        O
        (
        n
        log
        â¡
        n
        
        
          2
          
            2
            
              log
              
                â
              
            
            â¡
            n
          
        
        )
      
    
    {\displaystyle O(n\log n\,2^{2\log ^{*}n})}
  



Harvey-Hoeven algorithm[4][5]


  
    
      
        O
        (
        n
        log
        â¡
        n
        )
      
    
    {\displaystyle O(n\log n)}
  



Division

Two 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit numbers

One 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit number

Schoolbook long division


  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
  



BurnikelâZiegler Divide-and-Conquer Division[6]


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



NewtonâRaphson division


  
    
      
        O
        (
        M
        (
        n
        )
        )
      
    
    {\displaystyle O(M(n))}
  



Square root

One 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit number

One 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit number

Newton's method


  
    
      
        O
        (
        M
        (
        n
        )
        )
      
    
    {\displaystyle O(M(n))}
  



Modular exponentiation

Two 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit integers and a 
  
    
      
        k
      
    
    {\displaystyle k}
  
-bit exponent

One 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit integer

Repeated multiplication and reduction


  
    
      
        O
        (
        M
        (
        n
        )
        
        
          2
          
            k
          
        
        )
      
    
    {\displaystyle O(M(n)\,2^{k})}
  



Exponentiation by squaring


  
    
      
        O
        (
        M
        (
        n
        )
        
        k
        )
      
    
    {\displaystyle O(M(n)\,k)}
  



Exponentiation with Montgomery reduction


  
    
      
        O
        (
        M
        (
        n
        )
        
        k
        )
      
    
    {\displaystyle O(M(n)\,k)}
  


Algebraic functions[edit]


Operation

Input

Output

Algorithm

Complexity


Polynomial evaluation

One polynomial of degree 
  
    
      
        n
      
    
    {\displaystyle n}
  
 with fixed-size coefficients

One fixed-size number

Direct evaluation


  
    
      
        Î
        (
        n
        )
      
    
    {\displaystyle \Theta (n)}
  



Horner's method


  
    
      
        Î
        (
        n
        )
      
    
    {\displaystyle \Theta (n)}
  



Polynomial gcd (over 
  
    
      
        
          Z
        
        [
        x
        ]
      
    
    {\displaystyle \mathbb {Z} [x]}
  
 or 
  
    
      
        F
        [
        x
        ]
      
    
    {\displaystyle F[x]}
  
)

Two polynomials of degree 
  
    
      
        n
      
    
    {\displaystyle n}
  
 with fixed-size integer coefficients

One polynomial of degree at most 
  
    
      
        n
      
    
    {\displaystyle n}
  


Euclidean algorithm


  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
  



Fast Euclidean algorithm (Lehmer)[7]


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  


Special functions[edit]
Many of the methods in this section are given in Borwein & Borwein.[8]

Elementary functions[edit]
The elementary functions are constructed by composing arithmetic operations, the exponential function (
  
    
      
        exp
      
    
    {\displaystyle \exp }
  
), the natural logarithm (
  
    
      
        log
      
    
    {\displaystyle \log }
  
), trigonometric functions (
  
    
      
        sin
        ,
        cos
      
    
    {\displaystyle \sin ,\cos }
  
), and their inverses. The complexity of an elementary function is equivalent to that of its inverse, since all elementary functions are analytic and hence invertible by means of Newton's method. In particular, if either 
  
    
      
        exp
      
    
    {\displaystyle \exp }
  
 or 
  
    
      
        log
      
    
    {\displaystyle \log }
  
 in the complex domain can be computed with some complexity, then that complexity is attainable for all other elementary functions.
Below, the size 
  
    
      
        n
      
    
    {\displaystyle n}
  
 refers to the number of digits of precision at which the function is to be evaluated.



Algorithm

Applicability

Complexity


Taylor series; repeated argument reduction (e.g. 
  
    
      
        exp
        â¡
        (
        2
        x
        )
        =
        [
        exp
        â¡
        (
        x
        )
        
          ]
          
            2
          
        
      
    
    {\displaystyle \exp(2x)=[\exp(x)]^{2}}
  
) and direct summation


  
    
      
        exp
        ,
        log
        ,
        sin
        ,
        cos
        ,
        arctan
      
    
    {\displaystyle \exp ,\log ,\sin ,\cos ,\arctan }
  



  
    
      
        O
        (
        M
        (
        n
        )
        
          n
          
            1
            
              /
            
            2
          
        
        )
      
    
    {\displaystyle O(M(n)n^{1/2})}
  



Taylor series; FFT-based acceleration


  
    
      
        exp
        ,
        log
        ,
        sin
        ,
        cos
        ,
        arctan
      
    
    {\displaystyle \exp ,\log ,\sin ,\cos ,\arctan }
  



  
    
      
        O
        (
        M
        (
        n
        )
        
          n
          
            1
            
              /
            
            3
          
        
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)n^{1/3}(\log n)^{2})}
  



Taylor series; binary splitting + bit-burst algorithm[9]


  
    
      
        exp
        ,
        log
        ,
        sin
        ,
        cos
        ,
        arctan
      
    
    {\displaystyle \exp ,\log ,\sin ,\cos ,\arctan }
  



  
    
      
        O
        (
        M
        (
        n
        )
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)(\log n)^{2})}
  



Arithmeticâgeometric mean iteration[10]


  
    
      
        exp
        ,
        log
        ,
        sin
        ,
        cos
        ,
        arctan
      
    
    {\displaystyle \exp ,\log ,\sin ,\cos ,\arctan }
  



  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  


It is not known whether 
  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  
 is the optimal complexity for elementary functions. The best known lower bound is the trivial bound 

  
    
      
        Î©
      
    
    {\displaystyle \Omega }
  

  
    
      
        (
        M
        (
        n
        )
        )
      
    
    {\displaystyle (M(n))}
  
.

Non-elementary functions[edit]


Function

Input

Algorithm

Complexity


Gamma function


  
    
      
        n
      
    
    {\displaystyle n}
  
-digit number

Series approximation of the incomplete gamma function


  
    
      
        O
        (
        M
        (
        n
        )
        
          n
          
            1
            
              /
            
            2
          
        
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)n^{1/2}(\log n)^{2})}
  



Fixed rational number

Hypergeometric series


  
    
      
        O
        (
        M
        (
        n
        )
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)(\log n)^{2})}
  




  
    
      
        m
        
          /
        
        24
      
    
    {\displaystyle m/24}
  
, for 
  
    
      
        m
      
    
    {\displaystyle m}
  
 integer.

Arithmetic-geometric mean iteration


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



Hypergeometric function 
  
    
      
        
          

          
          
            p
          
        
        
        
          F
          
            q
          
        
      
    
    {\displaystyle {}_{p}\!F_{q}}
  



  
    
      
        n
      
    
    {\displaystyle n}
  
-digit number

(As described in Borwein & Borwein)


  
    
      
        O
        (
        M
        (
        n
        )
        
          n
          
            1
            
              /
            
            2
          
        
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)n^{1/2}(\log n)^{2})}
  



Fixed rational number

Hypergeometric series


  
    
      
        O
        (
        M
        (
        n
        )
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)(\log n)^{2})}
  


Mathematical constants[edit]
This table gives the complexity of computing approximations to the given constants to 
  
    
      
        n
      
    
    {\displaystyle n}
  
 correct digits.



Constant

Algorithm

Complexity


Golden ratio, 
  
    
      
        Ï
      
    
    {\displaystyle \phi }
  


Newton's method


  
    
      
        O
        (
        M
        (
        n
        )
        )
      
    
    {\displaystyle O(M(n))}
  



Square root of 2, 
  
    
      
        
          
            2
          
        
      
    
    {\displaystyle {\sqrt {2}}}
  


Newton's method


  
    
      
        O
        (
        M
        (
        n
        )
        )
      
    
    {\displaystyle O(M(n))}
  



Euler's number, 
  
    
      
        e
      
    
    {\displaystyle e}
  


Binary splitting of the Taylor series for the exponential function


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



Newton inversion of the natural logarithm


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



Pi, 
  
    
      
        Ï
      
    
    {\displaystyle \pi }
  


Binary splitting of the arctan series in Machin's formula


  
    
      
        O
        (
        M
        (
        n
        )
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)(\log n)^{2})}
  
[11]


GaussâLegendre algorithm


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  
[11]


Euler's constant, 
  
    
      
        Î³
      
    
    {\displaystyle \gamma }
  


Sweeney's method (approximation in terms of the exponential integral)


  
    
      
        O
        (
        M
        (
        n
        )
        (
        log
        â¡
        n
        
          )
          
            2
          
        
        )
      
    
    {\displaystyle O(M(n)(\log n)^{2})}
  


Number theory[edit]
Algorithms for number theoretical calculations are studied in computational number theory.



Operation

Input

Output

Algorithm

Complexity


Greatest common divisor

Two 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit integers

One integer with at most 
  
    
      
        n
      
    
    {\displaystyle n}
  
 digits

Euclidean algorithm


  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
  



Binary GCD algorithm


  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
  



Left/right k-ary binary GCD algorithm[12]


  
    
      
        O
        (
        
          n
          
            2
          
        
        log
        â¡
        n
        )
      
    
    {\displaystyle O(n^{2}\log n)}
  



StehlÃ©âZimmermann algorithm[13]


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



SchÃ¶nhage controlled Euclidean descent algorithm[14]


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



Jacobi symbol

Two 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit integers


  
    
      
        0
      
    
    {\displaystyle 0}
  
, 
  
    
      
        â
        1
      
    
    {\displaystyle -1}
  
 or 
  
    
      
        1
      
    
    {\displaystyle 1}
  


SchÃ¶nhage controlled Euclidean descent algorithm[15]


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



StehlÃ©âZimmermann algorithm[16]


  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  



Factorial

A positive integer less than 
  
    
      
        m
      
    
    {\displaystyle m}
  


One 
  
    
      
        O
        (
        m
        log
        â¡
        m
        )
      
    
    {\displaystyle O(m\log m)}
  
-digit integer

Bottom-up multiplication


  
    
      
        O
        (
        M
        (
        
          m
          
            2
          
        
        )
        log
        â¡
        m
        )
      
    
    {\displaystyle O(M(m^{2})\log m)}
  



Binary splitting


  
    
      
        O
        (
        M
        (
        m
        log
        â¡
        m
        )
        log
        â¡
        m
        )
      
    
    {\displaystyle O(M(m\log m)\log m)}
  



Exponentiation of the prime factors of 
  
    
      
        m
      
    
    {\displaystyle m}
  



  
    
      
        O
        (
        M
        (
        m
        log
        â¡
        m
        )
        log
        â¡
        log
        â¡
        m
        )
      
    
    {\displaystyle O(M(m\log m)\log \log m)}
  
,[17]
  
    
      
        O
        (
        M
        (
        m
        log
        â¡
        m
        )
        )
      
    
    {\displaystyle O(M(m\log m))}
  
[1]


Primality test

A 
  
    
      
        n
      
    
    {\displaystyle n}
  
-digit integer

True or false

AKS primality test


  
    
      
        O
        (
        
          n
          
            6
          
        
        )
      
    
    {\displaystyle O(n^{6})}
  
[18][19] or 
  
    
      
        O
        (
        
          n
          
            6
            +
            Îµ
          
        
        )
      
    
    {\displaystyle O(n^{6+\varepsilon })}
  
,[20][21]
  
    
      
        O
        (
        
          n
          
            3
          
        
        )
      
    
    {\displaystyle O(n^{3})}
  
, assuming Agrawal's conjecture


Elliptic curve primality proving


  
    
      
        O
        (
        
          n
          
            4
            +
            Îµ
          
        
        )
      
    
    {\displaystyle O(n^{4+\varepsilon })}
  
 heuristically[22]


BaillieâPSW primality test


  
    
      
        O
        (
        
          n
          
            2
            +
            Îµ
          
        
        )
      
    
    {\displaystyle O(n^{2+\varepsilon })}
  
[23][24]


MillerâRabin primality test


  
    
      
        O
        (
        k
        
          n
          
            2
            +
            Îµ
          
        
        )
      
    
    {\displaystyle O(kn^{2+\varepsilon })}
  
[25]


SolovayâStrassen primality test


  
    
      
        O
        (
        k
        
          n
          
            2
            +
            Îµ
          
        
        )
      
    
    {\displaystyle O(kn^{2+\varepsilon })}
  
[25]


Integer factorization

A 
  
    
      
        b
      
    
    {\displaystyle b}
  
-bit input integer

A set of factors

General number field sieve


  
    
      
        O
        (
        (
        1
        +
        Îµ
        
          )
          
            b
          
        
        )
      
    
    {\displaystyle O((1+\varepsilon )^{b})}
  
[nb 1]


Shor's algorithm


  
    
      
        O
        (
        
          b
          
            3
          
        
        )
      
    
    {\displaystyle O(b^{3})}
  
, on a quantum computer


Matrix algebra[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}Main article: Computational complexity of matrix multiplication
The following complexity figures assume that arithmetic with individual elements has complexity O(1), as is the case with fixed-precision floating-point arithmetic or operations on a finite field.



Operation

Input

Output

Algorithm

Complexity


Matrix multiplication

Two 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrices

One 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix

Schoolbook matrix multiplication


  
    
      
        O
        (
        
          n
          
            3
          
        
        )
      
    
    {\displaystyle O(n^{3})}
  



Strassen algorithm


  
    
      
        O
        (
        
          n
          
            2.807
          
        
        )
      
    
    {\displaystyle O(n^{2.807})}
  



CoppersmithâWinograd algorithm (galactic algorithm)


  
    
      
        O
        (
        
          n
          
            2.376
          
        
        )
      
    
    {\displaystyle O(n^{2.376})}
  



Optimized CW-like algorithms[26][27][28][29] (galactic algorithms)


  
    
      
        O
        (
        
          n
          
            2.3728596
          
        
        )
      
    
    {\displaystyle O(n^{2.3728596})}
  



Matrix multiplication

One 
  
    
      
        n
        Ã
        m
      
    
    {\displaystyle n\times m}
  
 matrix & one 
  
    
      
        m
        Ã
        p
      
    
    {\displaystyle m\times p}
  
 matrix

One 
  
    
      
        n
        Ã
        p
      
    
    {\displaystyle n\times p}
  
 matrix

Schoolbook matrix multiplication


  
    
      
        O
        (
        n
        m
        p
        )
      
    
    {\displaystyle O(nmp)}
  



Matrix multiplication

One 
  
    
      
        n
        Ã
        â
        
          n
          
            k
          
        
        â
      
    
    {\displaystyle n\times \lceil n^{k}\rceil }
  
 matrix &
one 
  
    
      
        â
        
          n
          
            k
          
        
        â
        Ã
        n
      
    
    {\displaystyle \lceil n^{k}\rceil \times n}
  
 matrix, for some 
  
    
      
        k
        â¥
        0
      
    
    {\displaystyle k\geq 0}
  



One 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix

Algorithms given in [30]


  
    
      
        O
        (
        
          n
          
            Ï
            (
            k
            )
            +
            Ïµ
          
        
        )
      
    
    {\displaystyle O(n^{\omega (k)+\epsilon })}
  
, where upper bounds on 
  
    
      
        Ï
        (
        k
        )
      
    
    {\displaystyle \omega (k)}
  
 are given in [30]


Matrix inversion*

One 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix

One 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix

GaussâJordan elimination


  
    
      
        O
        (
        
          n
          
            3
          
        
        )
      
    
    {\displaystyle O(n^{3})}
  



Strassen algorithm


  
    
      
        O
        (
        
          n
          
            2.807
          
        
        )
      
    
    {\displaystyle O(n^{2.807})}
  



CoppersmithâWinograd algorithm


  
    
      
        O
        (
        
          n
          
            2.376
          
        
        )
      
    
    {\displaystyle O(n^{2.376})}
  



Optimized CW-like algorithms


  
    
      
        O
        (
        
          n
          
            2.373
          
        
        )
      
    
    {\displaystyle O(n^{2.373})}
  



Singular value decomposition

One 
  
    
      
        m
        Ã
        n
      
    
    {\displaystyle m\times n}
  
 matrix

One 
  
    
      
        m
        Ã
        m
      
    
    {\displaystyle m\times m}
  
 matrix,  one 
  
    
      
        m
        Ã
        n
      
    
    {\displaystyle m\times n}
  
 matrix, &  one 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix

Bidiagonalization and QR algorithm


  
    
      
        O
        (
        m
        
          n
          
            2
          
        
        +
        
          m
          
            2
          
        
        n
        )
      
    
    {\displaystyle O(mn^{2}+m^{2}n)}
  
  (
  
    
      
        m
        â¥
        n
      
    
    {\displaystyle m\geq n}
  
)


One 
  
    
      
        m
        Ã
        n
      
    
    {\displaystyle m\times n}
  
 matrix,  one 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix, &  one 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix

Bidiagonalization and QR algorithm


  
    
      
        O
        (
        m
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(mn^{2})}
  
  (
  
    
      
        m
        â¥
        n
      
    
    {\displaystyle m\geq n}
  
)


Determinant

One 
  
    
      
        n
        Ã
        n
      
    
    {\displaystyle n\times n}
  
 matrix

One number

Laplace expansion


  
    
      
        O
        (
        n
        !
        )
      
    
    {\displaystyle O(n!)}
  



Division-free algorithm[31]


  
    
      
        O
        (
        
          n
          
            4
          
        
        )
      
    
    {\displaystyle O(n^{4})}
  



LU decomposition


  
    
      
        O
        (
        
          n
          
            3
          
        
        )
      
    
    {\displaystyle O(n^{3})}
  



Bareiss algorithm


  
    
      
        O
        (
        
          n
          
            3
          
        
        )
      
    
    {\displaystyle O(n^{3})}
  



Fast matrix multiplication[32]


  
    
      
        O
        (
        
          n
          
            2.373
          
        
        )
      
    
    {\displaystyle O(n^{2.373})}
  




Back substitution

Triangular matrix


  
    
      
        n
      
    
    {\displaystyle n}
  
 solutions

Back substitution[33]


  
    
      
        O
        (
        
          n
          
            2
          
        
        )
      
    
    {\displaystyle O(n^{2})}
  



In 2005, Henry Cohn, Robert Kleinberg, BalÃ¡zs Szegedy, and Chris Umans showed that either of two different conjectures would imply that the exponent of matrix multiplication is 2.[34]


Transforms[edit]
Algorithms for computing transforms of functions (particularly integral transforms) are widely used in all areas of mathematics, particularly analysis and signal processing.



Operation

Input

Output

Algorithm

Complexity


Discrete Fourier transform

Finite data sequence of size 
  
    
      
        n
      
    
    {\displaystyle n}
  


Set of complex numbers

Fast Fourier transform


  
    
      
        O
        (
        n
        log
        â¡
        n
        )
      
    
    {\displaystyle O(n\log n)}
  


Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ This form of sub-exponential time is valid for all 
  
    
      
        Îµ
        >
        0
      
    
    {\displaystyle \varepsilon >0}
  
. A more precise form of the complexity can be given as 
  
    
      
        O
        
          (
          
            exp
            â¡
            
              
                
                  
                    
                      64
                      9
                    
                  
                  b
                  (
                  log
                  â¡
                  b
                  
                    )
                    
                      2
                    
                  
                
                
                  3
                
              
            
          
          )
        
      
    
    {\displaystyle O\left(\exp {\sqrt[{3}]{{\frac {64}{9}}b(\log b)^{2}}}\right)}
  



References[edit]


^ Jump up to: a b A. SchÃ¶nhage, A.F.W. Grotefeld, E. Vetter: Fast AlgorithmsâA Multitape Turing Machine Implementation, BI Wissenschafts-Verlag, Mannheim, 1994

^ D. Knuth. The Art of Computer Programming, Volume 2. Third Edition, Addison-Wesley 1997.

^ Martin FÃ¼rer. Faster Integer Multiplication [https://web.archive.org/web/20130425232048/http://www.cse.psu.edu/~furer/Papers/mult.pdf Archived 2013-04-25 at the Wayback Machine. Proceedings of the 39th Annual ACM Symposium on Theory of Computing, San Diego, California, USA, June 11â13, 2007, pp. 55â67.

^ David Harvey, Joris van der Hoeven Integer multiplication in time O (n log n). (2019).

^ Erica Klarreich. 2019. Multiplication hits the speed limit. Commun. ACM 63, 1 (December 2019), 11â13. doi:10.1145/3371387

^ Christoph Burnikel and Joachim Ziegler Fast Recursive Division Im Stadtwald, D- Saarbrucken 1998.

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"Fast Euclidean algorithm".

^ J. Borwein & P. Borwein. Pi and the AGM: A Study in Analytic Number Theory and Computational Complexity. John Wiley 1987.

^ David and Gregory Chudnovsky. Approximations and complex multiplication according to Ramanujan. Ramanujan revisited, Academic Press, 1988, pp 375â472.

^ Richard P. Brent, Multiple-precision zero-finding methods and the complexity of elementary function evaluation, in: Analytic Computational Complexity (J. F. Traub, ed.), Academic Press, New York, 1975, 151â176.

^ Jump up to: a b Richard P. Brent (2020), The Borwein Brothers, Pi and the AGM, Springer Proceedings in Mathematics & Statistics, vol.Â 313, arXiv:1802.07558, doi:10.1007/978-3-030-36568-4, ISBNÂ 978-3-030-36567-7, S2CIDÂ 214742997

^ J. Sorenson. (1994). "Two Fast GCD Algorithms". Journal of Algorithms. 16 (1): 110â144. doi:10.1006/jagm.1994.1006.

^ R. Crandall & C. Pomerance. Prime Numbers â A Computational Perspective. Second Edition, Springer 2005.

^ MÃ¶ller N (2008). "On SchÃ¶nhage's algorithm and subquadratic integer gcd computation" (PDF). Mathematics of Computation. 77 (261): 589â607. Bibcode:2008MaCom..77..589M. doi:10.1090/S0025-5718-07-02017-0.

^ Bernstein D J. "Faster Algorithms to Find Non-squares Modulo Worst-case Integers".

^ Richard P. Brent; Paul Zimmermann (2010). "An 
  
    
      
        O
        (
        M
        (
        n
        )
        log
        â¡
        n
        )
      
    
    {\displaystyle O(M(n)\log n)}
  
 algorithm for the Jacobi symbol". arXiv:1004.2091 [cs.DS].

^ Borwein, P. (1985). "On the complexity of calculating factorials". Journal of Algorithms. 6 (3): 376â380. doi:10.1016/0196-6774(85)90006-9.

^ H. W. Lenstra Jr. and Carl Pomerance, "Primality testing with Gaussian periods", preliminary version July 20, 2005.

^ H. W. Lenstra jr. and Carl Pomerance, "Primality testing with Gaussian periods Archived 2012-02-25 at the Wayback Machine", version of April 12, 2011.

^ Tao, Terence (2010). "1.11 The AKS primality test". An epsilon of room, II: Pages from year three of a mathematical blog. Graduate Studies in Mathematics. Vol.Â 117. Providence, RI: American Mathematical Society. pp.Â 82â86. doi:10.1090/gsm/117. ISBNÂ 978-0-8218-5280-4. MRÂ 2780010.

^ Lenstra, Jr., H.W.; Pomerance, Carl (December 11, 2016). "Primality testing with Gaussian periods" (PDF).

^ Morain, F. (2007). "Implementing the asymptotically fast version of the elliptic curve primality proving algorithm". Mathematics of Computation. 76 (257): 493â505. arXiv:math/0502097. Bibcode:2007MaCom..76..493M. doi:10.1090/S0025-5718-06-01890-4. MRÂ 2261033. S2CIDÂ 133193.

^ Carl Pomerance; John L. Selfridge; Samuel S. Wagstaff, Jr. (July 1980). "The pseudoprimes to 25Â·109" (PDF). Mathematics of Computation. 35 (151): 1003â1026. doi:10.1090/S0025-5718-1980-0572872-7. JSTORÂ 2006210.

^ Robert Baillie; Samuel S. Wagstaff, Jr. (October 1980). "Lucas Pseudoprimes" (PDF). Mathematics of Computation. 35 (152): 1391â1417. doi:10.1090/S0025-5718-1980-0583518-6. JSTORÂ 2006406. MRÂ 0583518.

^ Jump up to: a b Monier, Louis (1980). "Evaluation and comparison of two efficient probabilistic primality testing algorithms". Theoretical Computer Science. 12 (1): 97â108. doi:10.1016/0304-3975(80)90007-9. MRÂ 0582244.

^ 
Alman, Josh; Williams, Virginia Vassilevska (2020), "A Refined Laser Method and Faster Matrix Multiplication", 32nd Annual ACM-SIAM Symposium on Discrete Algorithms (SODA 2021), arXiv:2010.05846

^ Davie, A.M.; Stothers, A.J. (2013), "Improved bound for complexity of matrix multiplication", Proceedings of the Royal Society of Edinburgh, 143A (2): 351â370, doi:10.1017/S0308210511001648, S2CIDÂ 113401430

^ Vassilevska Williams, Virginia (2011), Breaking the Coppersmith-Winograd barrier (PDF)

^ Le Gall, FranÃ§ois (2014), "Powers of tensors and fast matrix multiplication", Proceedings of the 39th International Symposium on Symbolic and Algebraic Computation - ISSAC '14, p.Â 23, arXiv:1401.7714, Bibcode:2014arXiv1401.7714L, doi:10.1145/2608628.2627493, ISBNÂ 9781450325011, S2CIDÂ 353236

^ Jump up to: a b Le Gall, FranÃ§ois; Urrutia, Floren (2018). "Improved Rectangular Matrix Multiplication using Powers of the Coppersmith-Winograd Tensor".  In Czumaj, Artur (ed.). Proceedings of the Twenty-Ninth Annual ACM-SIAM Symposium on Discrete Algorithms. Society for Industrial and Applied Mathematics (SIAM). doi:10.1137/1.9781611975031.67. ISBNÂ 978-1-61197-503-1. S2CIDÂ 33396059.

^ http://page.mi.fu-berlin.de/rote/Papers/pdf/Division-free+algorithms.pdf

^ Aho, Alfred V.; Hopcroft, John E.; Ullman, Jeffrey D. (1974), The Design and Analysis of Computer Algorithms, Addison-Wesley, Theorem 6.6, p.Â 241

^ J. B. Fraleigh and R. A. Beauregard, "Linear Algebra," Addison-Wesley Publishing Company, 1987, p 95.

^ Henry Cohn, Robert Kleinberg, Balazs Szegedy, and Chris Umans. Group-theoretic Algorithms for Matrix Multiplication. arXiv:math.GR/0511460. Proceedings of the 46th Annual Symposium on Foundations of Computer Science, 23â25 October 2005, Pittsburgh, PA, IEEE Computer Society, pp. 379â388.


Further reading[edit]
Brent, Richard P.; Zimmermann, Paul (2010). Modern Computer Arithmetic. Cambridge University Press. ISBNÂ 978-0-521-19469-3.
Knuth, Donald Ervin (1997). The Art of Computer Programming. Volume 2: Seminumerical Algorithms (3rdÂ ed.). Addison-Wesley. ISBNÂ 978-0-201-89684-8.




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Computational_complexity_of_mathematical_operations&oldid=1068409619"
		Categories: Computer arithmetic algorithmsComputational complexity theoryMathematics-related listsNumber theoretic algorithmsUnsolved problems in computer scienceHidden categories: Webarchive template wayback linksArticles with short descriptionPages with lower-case short descriptionShort description matches WikidataArticles needing additional references from April 2015All articles needing additional references
	
