
Title:
Free software
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Software licensed to preserve user freedoms
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}For other uses, see Free software (disambiguation).
Not to be confused with Freeware.
For broader coverage of this topic, see Free software movement.
  Linux Mint. An example of a free-software operating system running some representative applications. Shown are the Xfce desktop environment, the Firefox web browser, the Vim text editor, the GIMP image editor, and the VLC media player.
Free software (or libre software)[1][2] is computer software distributed under terms that allow users to run the software for any purpose as well as to study, change, and distribute it and any adapted versions.[3][4][5][6] Free software is a matter of liberty, not price; all users are legally free to do what they want with their copies of a free software (including profiting from them) regardless of how much is paid to obtain the program.[7][2] Computer programs are deemed "free" if they give end-users (not just the developer) ultimate control over the software and, subsequently, over their devices.[5][8]
The right to study and modify a computer program entails that source codeâthe preferred format for making changesâbe made available to users of that program. While this is often called "access to source code" or "public availability", the Free Software Foundation (FSF) recommends against thinking in those terms,[9] because it might give the impression that users have an obligation (as opposed to a right) to give non-users a copy of the program.
Although the term "free software" had already been used loosely in the past,[10] Richard Stallman is credited with tying it to the sense under discussion and starting the free-software movement in 1983, when he launched the GNU Project: a collaborative effort to create a freedom-respecting operating system, and to revive the spirit of cooperation once prevalent among hackers during the early days of computing.[11][12]

Contents

1 Context

1.1 Naming and differences with Open Source


2 Definition and the Four Essential Freedoms of Free Software
3 Examples
4 History

4.1 1980s: Foundation of the GNU Project
4.2 1990s: Release of the Linux kernel


5 Licensing
6 Security and reliability

6.1 Binary blobs and other proprietary software


7 Business model
8 Economic aspects and adoption
9 See also
10 Notes
11 References
12 Further reading
13 External links



Context[edit]
  This Euler diagram describes the typical relationship between freeware and free and open-source software (FOSS): According to David Rosen from Wolfire Games in 2010, open source / free software (orange) is most often gratis but not always. Freeware (green) seldom expose their source code.[13]
Free software thus differs from:

proprietary software, such as Microsoft Office, Google Docs, Sheets, and Slides or iWork from Apple. Users cannot study, change, and share their source code.
freeware, which is a category of proprietary software that does not require payment for basic use.
For software under the purview of copyright to be free, it must carry a software license whereby the author grants users the aforementioned rights. Software that is not covered by copyright law, such as software in the public domain, is free as long as the source code is in the public domain too, or otherwise available without restrictions.
Proprietary software uses restrictive software licences or EULAs and usually does not provide users with the source code. Users are thus legally or technically prevented from changing the software, and this results in reliance on the publisher to provide updates, help, and support. (See also vendor lock-in and abandonware). Users often may not reverse engineer, modify, or redistribute proprietary software.[14][15] Beyond copyright law, contracts and lack of source code, there can exist additional obstacles keeping users from exercising freedom over a piece of software, such as software patents and digital rights management (more specifically, tivoization).[16]
Free software can be a for-profit, commercial activity or not. Some free software is developed by volunteer computer programmers while other is developed by corporations; or even by both.[17][7]

Naming and differences with Open Source[edit]
Main article: Alternative terms for free software
Although both definitions refer to almost equivalent corpora of programs, the Free Software Foundation recommends using the term "free software" rather than "open-source software" (a younger vision coined in 1998), because the goals and messaging are quite dissimilar. According to the Free Software Foundation, "Open source" and its associated campaign mostly focus on the technicalities of the public development model and marketing free software to businesses, while taking the ethical issue of user rights very lightly or even antagonistically.[18] Stallman has also stated that considering the practical advantages of free software is like considering the practical advantages of not being handcuffed, in that it is not necessary for an individual to consider practical reasons in order to realize that being handcuffed is undesirable in itself.[19]
The FSF also notes that "Open Source" has exactly one specific meaning in common English, namely that "you can look at the source code." It states that while the term "Free Software" can lead to two different interpretations, at least one of them is consistent with the intended meaning unlike the term "Open Source".[a] The loan adjective "libre" is often used to avoid the ambiguity of the word "free" in English language, and the ambiguity with the older usage of "free software" as public-domain software.[10] (See Gratis versus libre.)

Definition and the Four Essential Freedoms of Free Software[edit]
Main article: The Free Software Definition
See also: Debian Free Software Guidelines and Open Source Definition
  Diagram of free and nonfree software, as defined by the Free Software Foundation. Left: free software, right: proprietary software, encircled: Gratis software
The first formal definition of free software was published by FSF in February 1986.[20] That definition, written by Richard Stallman, is still maintained today and states that software is free software if people who receive a copy of the software have the following four freedoms.[21][22] The numbering begins with zero, not only as a spoof on the common usage of zero-based numbering in programming languages, but also because "Freedom 0" was not initially included in the list, but later added first in the list as it was considered very important.

Freedom 0: The freedom to run the program for any purpose.
Freedom 1: The freedom to study how the program works, and change it to make it do what you wish.
Freedom 2: The freedom to redistribute and make copies so you can help your neighbour.
Freedom 3: The freedom to improve the program, and release your improvements (and modified versions in general) to the public, so that the whole community benefits.
Freedoms 1 and 3 require source code to be available because studying and modifying software without its source code can range from highly impractical to nearly impossible.
Thus, free software means that computer users have the freedom to cooperate with whom they choose, and to control the software they use. To summarize this into a remark distinguishing libre (freedom) software from gratis (zero price) software, the Free Software Foundation says: "Free software is a matter of liberty, not price. To understand the concept, you should think of 'free' as in 'free speech', not as in 'free beer'".[21] (See Gratis versus libre.)
In the late 1990s, other groups published their own definitions that describe an almost identical set of software. The most notable are Debian Free Software Guidelines published in 1997,[23] and the Open Source Definition, published in 1998.
The BSD-based operating systems, such as FreeBSD, OpenBSD, and NetBSD, do not have their own formal definitions of free software. Users of these systems generally find the same set of software to be acceptable, but sometimes see copyleft as restrictive. They generally advocate permissive free-software licenses, which allow others to use the software as they wish, without being legally forced to provide the source code. Their view is that this permissive approach is more free. The Kerberos, X11, and Apache software licenses are substantially similar in intent and implementation.

Examples[edit]
Main article: List of free and open-source software packagesThere are thousands of free applications and many operating systems available on the Internet. Users can easily download and install those applications via a package manager that comes included with most Linux distributions.
The Free Software Directory maintains a large database of free-software packages. Some of the best-known examples include the Linux kernel, the BSD and Linux operating systems, the GNU Compiler Collection and C library; the MySQL relational database; the Apache web server; and the Sendmail mail transport agent. Other influential examples include the Emacs text editor; the GIMP raster drawing and image editor; the X Window System graphical-display system; the LibreOffice office suite; and the TeX and LaTeX typesetting systems.

@media all and (max-width:720px){.mw-parser-output .mod-gallery{width:100%!important}}.mw-parser-output .mod-gallery{display:table}.mw-parser-output .mod-gallery-default{background:transparent;margin-top:0.3em}.mw-parser-output .mod-gallery-center{margin-left:auto;margin-right:auto}.mw-parser-output .mod-gallery-left{float:left}.mw-parser-output .mod-gallery-right{float:right}.mw-parser-output .mod-gallery-none{float:none}.mw-parser-output .mod-gallery-collapsible{width:100%}.mw-parser-output .mod-gallery .title,.mw-parser-output .mod-gallery .main,.mw-parser-output .mod-gallery .footer{display:table-row}.mw-parser-output .mod-gallery .title>div{display:table-cell;padding:0.2em 0 0.6em 1.6em;text-align:center;font-weight:bold}.mw-parser-output .mod-gallery .main>div{display:table-cell}.mw-parser-output .mod-gallery .gallery{line-height:1.35em}.mw-parser-output .mod-gallery .footer>div{display:table-cell;padding:0.2em 0 0.6em 1.6em;text-align:right;font-size:80%;line-height:1em}.mw-parser-output .mod-gallery .title>div *,.mw-parser-output .mod-gallery .footer>div *{overflow:visible}.mw-parser-output .mod-gallery .gallerybox img{background:none!important}.mw-parser-output .mod-gallery .bordered-images .thumb img{border:solid #eaecf0 1px}.mw-parser-output .mod-gallery .whitebg .thumb{background:#fff!important}Free Software
		
			
			
Blender, a free software.

			
		
		
			
			
KDE Plasma desktop on Debian.

			
		
		
			
			
OpenSSL's manual page.

			
		
		
			
			
Creating a 3D car racing game using the Blender Game Engine.

			
		
		
			
			
Replicant smartphone, an Android-based system that is 100% free software.

			
		
		
			
			
Libreoffice is a free multi-platform office suite.

			
		

History[edit]
Further information: History of free and open-source software
See also: Open-source software Â§Â History
  Richard Stallman, founder of the Free Software Movement (2002)
From the 1950s up until the early 1970s, it was normal for computer users to have the software freedoms associated with free software, which was typically public-domain software.[10] Software was commonly shared by individuals who used computers and by hardware manufacturers who welcomed the fact that people were making software that made their hardware useful. Organizations of users and suppliers, for example, SHARE, were formed to facilitate exchange of software. As software was often written in an interpreted language such as BASIC, the source code was distributed to use these programs. Software was also shared and distributed as printed source code (Type-in program) in computer magazines (like Creative Computing, SoftSide, Compute!, Byte, etc.) and books, like the bestseller BASIC Computer Games.[24] By the early 1970s, the picture changed: software costs were dramatically increasing, a growing software industry was competing with the hardware manufacturer's bundled software products (free in that the cost was included in the hardware cost), leased machines required software support while providing no revenue for software, and some customers able to better meet their own needs did not want the costs of "free" software bundled with hardware product costs. In United States vs. IBM, filed January 17, 1969, the government charged that bundled software was anti-competitive.[25] While some software might always be free, there would henceforth be a growing amount of software produced primarily for sale. In the 1970s and early 1980s, the software industry began using technical measures (such as only distributing binary copies of computer programs) to prevent computer users from being able to study or adapt the software applications as they saw fit. In 1980, copyright law was extended to computer programs.
In 1983, Richard Stallman, one of the original authors of the popular Emacs program and a longtime member of the hacker community at the MIT Artificial Intelligence Laboratory, announced the GNU Project, the purpose of which was to produce a completely non-proprietary Unix-compatible operating system, saying that he had become frustrated with the shift in climate surrounding the computer world and its users. In his initial declaration of the project and its purpose, he specifically cited as a motivation his opposition to being asked to agree to non-disclosure agreements and restrictive licenses which prohibited the free sharing of potentially profitable in-development software, a prohibition directly contrary to the traditional hacker ethic. Software development for the GNU operating system began in January 1984, and the Free Software Foundation (FSF) was founded in October 1985. He developed a free software definition and the concept of "copyleft", designed to ensure software freedom for all.
Some non-software industries are beginning to use techniques similar to those used in free software development for their research and development process; scientists, for example, are looking towards more open development processes, and hardware such as microchips are beginning to be developed with specifications released under copyleft licenses (see the OpenCores project, for instance). Creative Commons and the free-culture movement have also been largely influenced by the free software movement.

1980s: Foundation of the GNU Project[edit]
In 1983, Richard Stallman, longtime member of the hacker community at the MIT Artificial Intelligence Laboratory, announced the GNU Project, saying that he had become frustrated with the effects of the change in culture of the computer industry and its users.[26] Software development for the GNU operating system began in January 1984, and the Free Software Foundation (FSF) was founded in October 1985. An article outlining the project and its goals was published in March 1985 titled the GNU Manifesto. The manifesto included significant explanation of the GNU philosophy, Free Software Definition and "copyleft" ideas.

1990s: Release of the Linux kernel[edit]
The Linux kernel, started by Linus Torvalds, was released as freely modifiable source code in 1991. The first licence was a proprietary software licence. However, with version 0.12 in February 1992, he relicensed the project under the GNU General Public License.[27] Much like Unix, Torvalds' kernel attracted the attention of volunteer programmers.
FreeBSD and NetBSD (both derived from 386BSD) were released as free software when the USL v. BSDi lawsuit was settled out of court in 1993. OpenBSD forked from NetBSD in 1995. Also in 1995, The Apache HTTP Server, commonly referred to as Apache, was released under the Apache License 1.0.

Licensing[edit]
Main article: Free-software license
Further information: Open-source license
See also: Free and open-source software Â§Â Licensing
  Copyleft, a novel use of copyright law to ensure that works remain unrestricted, originates in the world of free software.[28]
All free-software licenses must grant users all the freedoms discussed above. However, unless the applications' licenses are compatible, combining programs by mixing source code or directly linking binaries is problematic, because of license technicalities. Programs indirectly connected together may avoid this problem.
The majority of free software falls under a small set of licenses. The most popular of these licenses are:[29][30]

The MIT License
The GNU General Public License v2  (GPLv2)
The Apache License
The GNU General Public License v3 (GPLv3)
The BSD License
The GNU Lesser General Public License (LGPL)
The Mozilla Public License (MPL)
The Eclipse Public License
The Free Software Foundation and the Open Source Initiative both publish lists of licenses that they find to comply with their own definitions of free software and open-source software respectively:

List of FSF approved software licenses
List of OSI approved software licenses
The FSF list is not prescriptive: free-software licenses can exist that the FSF has not heard about, or considered important enough to write about. So it's possible for a license to be free and not in the FSF list. The OSI list only lists licenses that have been submitted, considered and approved. All open-source licenses must meet the Open Source Definition in order to be officially recognized as open source software. Free software, on the other hand, is a more informal classification that does not rely on official recognition. Nevertheless, software licensed under licenses that do not meet the Free Software Definition cannot rightly be considered free software.
Apart from these two organizations, the Debian project is seen by some to provide useful advice on whether particular licenses comply with their Debian Free Software Guidelines. Debian does not publish a list of approved licenses, so its judgments have to be tracked by checking what software they have allowed into their software archives. That is summarized at the Debian web site.[31]
It is rare that a license announced as being in-compliance with the FSF guidelines does not also meet the Open Source Definition, although the reverse is not necessarily true (for example, the NASA Open Source Agreement is an OSI-approved license, but non-free according to FSF).
There are different categories of free software.

Public-domain software: the copyright has expired, the work was not copyrighted (released without copyright notice before 1988), or the author has released the software onto the public domain with a waiver statement (in countries where this is possible). Since public-domain software lacks copyright protection, it may be freely incorporated into any work, whether proprietary or free. The FSF recommends the CC0 public domain dedication for this purpose.[32]
Permissive licenses, also called BSD-style because they are applied to much of the software distributed with the BSD operating systems: many of these licenses are also known as copyfree as they have no restrictions on distribution.[33] The author retains copyright solely to disclaim warranty and require proper attribution of modified works, and permits redistribution and any modification, even closed-source ones. In this sense, a permissive license provides an incentive to create non-free software, by reducing the cost of developing restricted software. Since this is incompatible with the spirit of software freedom, many people consider permissive licenses to be less free than copyleft licenses.
Copyleft licenses, with the GNU General Public License being the most prominent: the author retains copyright and permits redistribution under the restriction that all such redistribution is licensed under the same license. Additions and modifications by others must also be licensed under the same "copyleft" license whenever they are distributed with part of the original licensed product. This is also known as a viral, protective, or reciprocal license. Due to the restriction on distribution not everyone considers this type of license to be free.[34]
Security and reliability[edit]
  Although nearly all computer viruses only affect Microsoft Windows,[35][36][37] antivirus software such as ClamTk (shown here) is still provided for Linux and other Unix-based systems, so that users can detect malware that might infect Windows hosts.
There is debate over the security of free software in comparison to proprietary software, with a major issue being security through obscurity. A popular quantitative test in computer security is to use relative counting of known unpatched security flaws. Generally, users of this method advise avoiding products that lack fixes for known security flaws, at least until a fix is available.
Free software advocates strongly believe that this methodology is biased by counting more vulnerabilities for the free software systems, since their source code is accessible and their community is more forthcoming about what problems exist,[38] (This is called "Security Through Disclosure"[39]) and proprietary software systems can have undisclosed societal drawbacks, such as disenfranchising less fortunate would-be users of free programs. As users can analyse and trace the source code, many more people with no commercial constraints can inspect the code and find bugs and loopholes than a corporation would find practicable. According to Richard Stallman, user access to the source code makes deploying free software with undesirable hidden spyware functionality far more difficult than for proprietary software.[40]
Some quantitative studies have been done on the subject.[41][42][43][44]

Binary blobs and other proprietary software[edit]
In 2006, OpenBSD started the first campaign against the use of binary blobs in kernels. Blobs are usually freely distributable device drivers for hardware from vendors that do not reveal driver source code to users or developers. This restricts the users' freedom effectively to modify the software and distribute modified versions. Also, since the blobs are undocumented and may have bugs, they pose a security risk to any operating system whose kernel includes them. The proclaimed aim of the campaign against blobs is to collect hardware documentation that allows developers to write free software drivers for that hardware, ultimately enabling all free operating systems to become or remain blob-free.
The issue of binary blobs in the Linux kernel and other device drivers motivated some developers in Ireland to launch gNewSense, a Linux based distribution with all the binary blobs removed. The project received support from the Free Software Foundation and stimulated the creation, headed by the Free Software Foundation Latin America, of the Linux-libre kernel.[45] As of October 2012, Trisquel is the most popular FSF endorsed Linux distribution ranked by Distrowatch (over 12 months).[46] While Debian is not endorsed by the FSF and does not use Linux-libre, it is also a popular distribution available without kernel blobs by default since 2011.[45]

Business model[edit]
See also: Business models for open-source software
Selling software under any free-software licence is permissible, as is commercial use. This is true for licenses with or without copyleft.[17][47][48]
Since free software may be freely redistributed, it is generally available at little or no fee. Free software business models are usually based on adding value such as customization, accompanying hardware, support, training, integration, or certification.[17] Exceptions exist however, where the user is charged to obtain a copy of the free application itself.[49]
Fees are usually charged for distribution on compact discs and bootable USB drives, or for services of installing or maintaining the operation of free software. Development of large, commercially used free software is often funded by a combination of user donations, crowdfunding, corporate contributions, and tax money. The SELinux project at the United States National Security Agency is an example of a federally funded free-software project.
Proprietary software, on the other hand, tends to use a different business model, where a customer of the proprietary application pays a fee for a license to legally access and use it. This license may grant the customer the ability to configure some or no parts of the software themselves. Often some level of support is included in the purchase of proprietary software, but additional support services (especially for enterprise applications) are usually available for an additional fee. Some proprietary software vendors will also customize software for a fee.[50]
The Free Software Foundation encourages selling free software. As the Foundation has written, "distributing free software is an opportunity to raise funds for development. Don't waste it!".[7] For example, the FSF's own recommended license (the GNU GPL) states that "[you] may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee."[51]
Microsoft CEO Steve Ballmer stated in 2001 that "open source is not available to commercial companies. The way the license is written, if you use any open-source software, you have to make the rest of your software open source."[52] This misunderstanding is based on a requirement of copyleft licenses (like the GPL) that if one distributes modified versions of software, they must release the source and use the same license. This requirement does not extend to other software from the same developer.[citation needed] The claim of incompatibility between commercial companies and free software is also a misunderstanding. There are several large companies, e.g. Red Hat and IBM, which do substantial commercial business in the development of free software.[citation needed]

 Economic aspects and adoption[edit]
Main article: Free and open-source software Â§Â Adoption
See also: Linux adoption and Open-source software Â§Â Adoption
Free software played a significant part in the development of the Internet, the World Wide Web and the infrastructure of dot-com companies.[53][54] Free software allows users to cooperate in enhancing and refining the programs they use; free software is a pure public good rather than a private good. Companies that contribute to free software increase commercial innovation.[55]

.mw-parser-output .quotebox{background-color:#F9F9F9;border:1px solid #aaa;box-sizing:border-box;padding:10px;font-size:88%;max-width:100%}.mw-parser-output .quotebox.floatleft{margin:.5em 1.4em .8em 0}.mw-parser-output .quotebox.floatright{margin:.5em 0 .8em 1.4em}.mw-parser-output .quotebox.centered{overflow:hidden;position:relative;margin:.5em auto .8em auto}.mw-parser-output .quotebox.floatleft span,.mw-parser-output .quotebox.floatright span{font-style:inherit}.mw-parser-output .quotebox>blockquote{margin:0;padding:0;border-left:0;font-family:inherit;font-size:inherit}.mw-parser-output .quotebox-title{background-color:#F9F9F9;text-align:center;font-size:110%;font-weight:bold}.mw-parser-output .quotebox-quote>:first-child{margin-top:0}.mw-parser-output .quotebox-quote:last-child>:last-child{margin-bottom:0}.mw-parser-output .quotebox-quote.quoted:before{font-family:"Times New Roman",serif;font-weight:bold;font-size:large;color:gray;content:" â ";vertical-align:-45%;line-height:0}.mw-parser-output .quotebox-quote.quoted:after{font-family:"Times New Roman",serif;font-weight:bold;font-size:large;color:gray;content:" â ";line-height:0}.mw-parser-output .quotebox .left-aligned{text-align:left}.mw-parser-output .quotebox .right-aligned{text-align:right}.mw-parser-output .quotebox .center-aligned{text-align:center}.mw-parser-output .quotebox .quote-title,.mw-parser-output .quotebox .quotebox-quote{display:block}.mw-parser-output .quotebox cite{display:block;font-style:normal}@media screen and (max-width:640px){.mw-parser-output .quotebox{width:100%!important;margin:0 0 .8em!important;float:none!important}}

"We migrated key functions from Windows to Linux because we needed an operating system that was stable and reliableÂ â one that would give us in-house control. So if we needed to patch, adjust, or adapt, we could."


Official statement of the United Space Alliance, which manages the computer systems for the International Space Station (ISS), regarding their May 2013 decision to migrate ISS computer systems from Windows to Linux[56][57]


The economic viability of free software has been recognized by large corporations such as IBM, Red Hat, and Sun Microsystems.[58][59][60][61][62] Many companies whose core business is not in the IT sector choose free software for their Internet information and sales sites, due to the lower initial capital investment and ability to freely customize the application packages. Most companies in the software business include free software in their commercial products if the licenses allow that.[17]
Free software is generally available at no cost and can result in permanently lower TCO costs compared to proprietary software.[63] With free software, businesses can fit software to their specific needs by changing the software themselves or by hiring programmers to modify it for them. Free software often has no warranty, and more importantly, generally does not assign legal liability to anyone. However, warranties are permitted between any two parties upon the condition of the software and its usage. Such an agreement is made separately from the free software license.
A report by Standish Group estimates that adoption of free software has caused a drop in revenue to the proprietary software industry by about $60Â billion per year.[64] Eric S. Raymond argued that the term free software is too ambiguous and intimidating for the business community. Raymond promoted the term open-source software as a friendlier alternative for the business and corporate world.[65]

See also[edit]
.mw-parser-output .portalbox{float:right;border:solid #aaa 1px;padding:0}.mw-parser-output .portalbox.tleft{margin:0.5em 1em 0.5em 0}.mw-parser-output .portalbox.tright{margin:0.5em 0 0.5em 1em}.mw-parser-output .portalbox>ul{display:table;box-sizing:border-box;padding:0.1em;max-width:175px;background:#f9f9f9;font-size:85%;line-height:110%;font-style:italic;font-weight:bold}.mw-parser-output .portalbox>ul>li{display:table-row}.mw-parser-output .portalbox>ul>li>span:first-child{display:table-cell;padding:0.2em;vertical-align:middle;text-align:center}.mw-parser-output .portalbox>ul>li>span:last-child{display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle}

Free and open-source software portal
.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}
Definition of Free Cultural Works
Digital rights
Free content
Libre knowledge
List of formerly proprietary software
List of free software project directories
List of free software for Web 2.0 Services
Open format
Open standard
Open-source hardware
Outline of free software
Category:Free software lists and comparisons
Appropriate Technology
Sustainable Development

Notes[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ Access to source code is a necessary but insufficient condition, according to both the Free Software and Open Source definitions.


References[edit]


^ See .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}GNU Project. "What is free software?". Free Software Foundation.

^ Jump up to: a b "Richard Stallman - Internet Hall of Fame". Retrieved 26 March 2017.

^ "Free Software Movement". gnu.org. Retrieved 2021-01-11.{{cite web}}:  CS1 maint: url-status (link)

^ "Philosophy of the GNU Project". gnu.org. Retrieved 2021-01-11.{{cite web}}:  CS1 maint: url-status (link)

^ Jump up to: a b "What is free software and why is it so important for society?". Free Software Foundation. Retrieved 2021-01-11.{{cite web}}:  CS1 maint: url-status (link)

^ Stallman, Richard M. (2015). Free Software Free Society: Selected Essays of Richard M. Stallman, 3rd Edition.

^ Jump up to: a b c Selling Free Software (gnu.org)

^ Stallman, Richard (27 September 1983). "Initial Announcement". GNU Project. Free Software Foundation.

^ "Words to Avoid (or Use with Care) Because They Are Loaded or Confusing: Access". www.gnu.org.

^ Jump up to: a b c Shea, Tom (1983-06-23). "Free software - Free software is a junkyard of software spare parts". InfoWorld. Retrieved 2016-02-10. "In contrast to commercial software is a large and growing body of free software that exists in the public domain. Public-domain software is written by microcomputer hobbyists (also known as "hackers") many of whom are professional programmers in their work life. [...] Since everybody has access to source code, many routines have not only been used but dramatically improved by other programmers."

^ Levi, Ran. "Richard Stallman and The History of Free Software and Open Source". Curious Minds Podcast.

^ Amit Garg, Ryan Burdett, Ishaan Shastri, Evan Parker. "GNU". cs.stanford.edu. Retrieved 2017-10-17.{{cite web}}:  CS1 maint: uses authors parameter (link)

^ Rosen, David (May 16, 2010). "Open-source software is not always freeware". wolfire.com. Retrieved 2016-01-18.

^ Dixon, Rod (2004). Open Source Software Law. Artech House. p.Â 4. ISBNÂ 978-1-58053-719-3. Retrieved 2009-03-16.

^ Graham, Lawrence D. (1999). Legal battles that shaped the computer industry. Greenwood Publishing Group. p.Â 175. ISBNÂ 978-1-56720-178-9. Retrieved 2009-03-16.

^ Sullivan, John (17 July 2008). "The Last Mile is Always the Hardest". fsf.org. Archived from the original on 28 October 2014. Retrieved 29 December 2014.

^ Jump up to: a b c d Popp, Dr. Karl Michael (2015). Best Practices for commercial use of open source software. Norderstedt, Germany: Books on Demand. ISBNÂ 978-3738619096.

^ Stallman, Richard. "Why "Open Source" misses the point of Free Software". GNU Project. Free Software Foundation.

^ Stallman, Richard (2013-05-14). "The advantages of free software". Free Software Foundation. Retrieved 2013-08-12.

^ Stallman, Richard. "What is the Free Software Foundation?". GNU's Bulletin. Vol.Â 1, no.Â 1. p.Â 8.

^ Jump up to: a b Free Software Foundation. "What is free software?". Retrieved 14 December 2011.

^ "Four Freedoms - FSFE". fsfe.org.

^ Perens, Bruce. "Debian's "Social Contract" with the Free Software Community". debian-announce mailing list.

^ Ahl, David. "David H. Ahl biography from Who's Who in America". Retrieved 2009-11-23.

^ Fisher, Franklin M.; McKie, James W.; Mancke, Richard B. (1983). IBM and the U.S. Data Processing Industry: An Economic History. Praeger. ISBNÂ 0-03-063059-2.

^ Williams, Sam (2002). Free as in Freedom: Richard Stallman's Crusade for Free Software. O'Reilly Media. ISBNÂ 0-596-00287-4.

^ "Release notes for Linux kernel 0.12". Kernel.org.

^ Carver, Brian W. (2005-04-05). "Share and Share Alike: Understanding and Enforcing Open Source and Free Software Licenses". Berkeley Technology Law Journal. 20: 39. SSRNÂ 1586574.

^ "Top 20 licenses". Black Duck Software. 19 November 2015. Archived from the original on 19 July 2016. Retrieved 19 November 2015. 1. MIT license 24%, 2. GNU General Public License (GPL) 2.0 23%, 3. Apache License 16%, 4. GNU General Public License (GPL) 3.0 9%, 5. BSD License 2.0 (3-clause, New or Revised) License 6%, 6. GNU Lesser General Public License (LGPL) 2.1 5%, 7. Artistic License (Perl) 4%, 8. GNU Lesser General Public License (LGPL) 3.0 2%, 9. Microsoft Public License 2%, 10. Eclipse Public License (EPL) 2%

^ Balter, Ben (2015-03-09). "Open source license usage on GitHub.com". github.com. Retrieved 2015-11-21. "1 MIT 44.69%, 2 Other 15.68%, 3 GPLv2 12.96%, 4 Apache 11.19%, 5 GPLv3 8.88%, 6 BSD 3-clause 4.53%, 7 Unlicense 1.87%, 8 BSD 2-clause 1.70%, 9 LGPLv3 1.30%, 10 AGPLv3 1.05%

^ "Debian -- License information". Retrieved 2008-01-08.

^ "Various Licenses and Comments about Them". gnu.org. Retrieved 20 March 2014.

^ "CI: Main". Retrieved 19 March 2015.

^ Palmer, Doug (2003-02-15). "Why Not Use the GPL? Thoughts on Free and Open-Source Software". www.charvolant.org. Archived from the original on 2020-01-24. Retrieved 2020-01-24.

^ Mookhey, K.K.; Burghate, Nilesh (2005). Linux: Security, Audit and Control Features. ISACA. p.Â 128. ISBNÂ 9781893209787.{{cite book}}:  CS1 maint: uses authors parameter (link)

^ Toxen, Bob (2003). Real World Linux Security: Intrusion Prevention, Detection, and Recovery. Prentice Hall Professional. p.Â 365. ISBNÂ 9780130464569.

^ Noyes, Katherine (Aug 3, 2010). "Why Linux Is More Secure Than Windows". PCWorld. Archived from the original on 2013-09-01.

^ "Firefox more secure than MSIE after all". News.com.

^ "The Benefits of Open Source". Retrieved 19 March 2015.

^ "Transcript where Stallman explains about spyware".

^ David A. Wheeler: Why Open Source Software / Free Software (OSS/FS, FLOSS, or FOSS)? Look at the Numbers! 2007

^ Michelle Delio: Linux: Fewer Bugs Than Rivals Wired.com 2004

^ Barton P. Miller; David Koski; Cjin Pheow Lee; Vivekananda Maganty; Ravi Murthy; Ajitkumar Natarajan; Jeff Steidl (October 1995). "Fuzz Revisited: A Re-examination of the Reliability of UNIX Utilities and Services" (PDF). Madison, WI 53706-1685 USA: University of Wisconsin: Computer Sciences Department. Archived from the original (PDF) on 21 June 2010. Retrieved 1 May 2013. ...The reliability of the basic utilities from GNU and Linux were noticeably better than those of the commercial systems [sic] {{cite journal}}: Cite journal requires |journal= (help)CS1 maint: location (link)

^ Barton P. Miller; Gregory Cooksey; Fredrick Moore (20 July 2006). "An Empirical Study of the Robustness of MacOS Applications Using Random Testing" (PDF). Madison, WI 53706-1685 USA: University of Wisconsin: Computer Sciences Department: 1, 2. Archived from the original (PDF) on 21 June 2010. Retrieved 1 May 2013. We are back again, this time testing... Appleâs Mac OS X. [...] While the results were reasonable, we were disappointed to find that the reliability was no better than that of the Linux/GNU tools tested in 1995. We were less sure what to expect when testing the GUI- based applications; the results turned out worse than we expected. {{cite journal}}: Cite journal requires |journal= (help)CS1 maint: location (link)

^ Jump up to: a b "Links to Other Free Software Sites - GNU Project - Free Software Foundation". Retrieved 19 March 2015.

^ "DistroWatch Page Hit Ranking". DistroWatch. 30 October 2012. Archived from the original on 7 October 2011. Retrieved 30 October 2012.

^ "BSD license definition". Retrieved 19 March 2015.

^ "Why you should use a BSD style license for your Open Source Project". Retrieved 19 March 2015.

^ "[libreplanet-discuss] Is there any software that is libre but not gratis".

^ Andy Dornan. "The Five Open Source Business Models". Archived from the original on October 10, 2009.

^ GNU General Public License, section 4. gnu.org

^ "Ballmer calling open source a 'cancer', saying it's "not available to commercial companies"". Archived from the original on 2001-06-15. Retrieved 2001-06-15.{{cite web}}:  CS1 maint: bot: original URL status unknown (link) Chicago Sun-Times, 2001

^ Netcraft. "Web Server Usage Survey".

^ The Apache Software Foundation. "Apache Strategy in the New Economy" (PDF). Archived from the original (PDF) on 2008-02-16.

^ Waring, Teresa; Maddocks, Philip (1 October 2005). "Open Source Software implementation in the UK public sector: Evidence from the field and implications for the future". International Journal of Information Management. 25 (5): 411â428. doi:10.1016/j.ijinfomgt.2005.06.002. In addition OSSâs development process is creating innovative products that are reliable, secure, practical and have high usability and performance ratings. Users are now not only benefiting from the OSS revolution but also from the improved proprietary software development that is being forced upon suppliers in order to maintain competitive advantage.

^ Gunter, Joel (May 10, 2013). "International Space Station to boldly go with Linux over Windows". The Telegraph. Archived from the original on 2022-01-11.

^ Bridgewater, Adrian (May 13, 2013). "International Space Station adopts Debian Linux, drops Windows & Red Hat into airlock". Computer Weekly.

^ "IBM launches biggest Linux lineup ever". IBM. 1999-03-02. Archived from the original on 1999-11-10.

^ Hamid, Farrah (2006-05-24). "IBM invests in Brazil Linux Tech Center". LWN.net.

^ "Interview: The Eclipse code donation". IBM. 2001-11-01. Archived from the original on 2009-12-18.

^ "Sun begins releasing Java under the GPL". Free Software Foundation. November 15, 2006. Retrieved 2007-09-23.

^ Rishab Aiyer Ghosh (November 20, 2006). "Study on the: Economic impact of open source software on innovation and the competitiveness of the Information and Communication Technologies (ICT) sector in the EU" (PDF). European Union. p.Â 51. Retrieved 2007-01-25.

^ "Total cost of ownership of open source software: a report for the UK Cabinet Office supported by OpenForum Europe". Retrieved 19 March 2015.

^ "Open Source". Standish Newsroom. Standishgroup.com. 2008-04-16. Archived from the original on 2012-01-18. Retrieved 2010-08-22.

^ Eric S. Raymond. "Eric S. Raymond's initial call to start using the term open source software, instead of free software".


Further reading[edit]
Puckette, Miller. "Who Owns our Software?: A first-person case study." eContact (September 2009). MontrÃ©al: CEC
Hancock, Terry. "The Jargon of Freedom: 60 Words and Phrases with Context". Free Software Magazine. 2010-20-24
Stallman, Richard M. (2010) [2002]. Free Software Free Society: Selected Essays of Richard M. Stallman, 2nd Edition. GNU Press. ISBNÂ 978-0-9831592-0-9.
External links[edit]



Wikiquote has quotations related to: Free software




Wikimedia Commons has media related to Free software.




Wikinews has news related to:
 FLOSS  

.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}hide.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:"[ "}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:" ]"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}vteFree and open-source softwareGeneral
Alternative terms for free software
Comparison of open-source and closed-source software
Comparison of source-code-hosting facilities
Free software
Free software project directories
Gratis versus libre
Long-term support
Open-source software
Open-source software development
Outline
Timeline
Softwarepackages
Audio
Bioinformatics
Codecs
Configuration management
Drivers
Graphics
Wireless
Geophysics
Health
Mathematics
Office Suites
Operating systems
Programming languages
Routing
Television
Video games
Web applications
E-commerce
Android apps
iOS apps
Commercial
Trademarked
Formerly proprietary
Formerly open-source
Community
Free software movement
History
Open-source-software movement
Events
Organisations
Free Software Movement of India
Free Software Foundation
Licenses
AFL
Apache
APSL
Artistic
Beerware
BSD
Creative Commons
CDDL
EPL
Free Software Foundation
GNU GPL
GNU LGPL
ISC
MIT
MPL
Python
Python Software Foundation License
Shared Source Initiative
Sleepycat
Unlicense
WTFPL
zlib
Types and standards
Comparison of licenses
Contributor License Agreement
Copyleft
Debian Free Software Guidelines
Definition of Free Cultural Works
Free license
The Free Software Definition
The Open Source Definition
Open-source license
Permissive software license
Public domain
Viral license

Challenges
Digital rights management
Hardware restrictions
License proliferation
Mozilla software rebranding
Proprietary device drivers
Proprietary firmware
Proprietary software
SCO/Linux controversies
Software patents
Software security
Trusted Computing
Related topics
Forking
GNU Manifesto
Microsoft Open Specification Promise
Open-core model
Open-source hardware
Shared Source Initiative
Source-available software
The Cathedral and the Bazaar
Revolution OS

 Portal
 Category

showvteSoftware distributionLicenses
Beerware
Floating licensing
Free and open-source
Free
Open source
Freely redistributable
Proprietary
Public domain
Source-available
Compensation models
Adware
Commercial software
Retail software
Crippleware
Crowdfunding
Freemium
Freeware
Pay what you want
Careware
Donationware
Open-core model
Postcardware
Shareware
Nagware
Delivery methods
Digital distribution
File sharing
On-premises
Pre-installed
Product bundling
Retail software
Sneakernet
Software as a service
Deceptive and/or illicit
Unwanted software bundling
Malware
Spyware
Trojan horse
Worm
Ransomware
Scareware
Shovelware
Vaporware
list
Software release life cycle
Abandonware
End-of-life
Long-term support
Software maintenance
Software maintainer
Software publisher
Copy protection
Digital rights management
Software protection dongle
Hardware restrictions
License manager
Product activation
Product key
Software copyright
Software patent
Torrent poisoning

showvteIndependent productionReading
Alternative comics
Alternative manga
Fanzine
Webcomic
business
Webtoon
Minicomic
Co-ops
Doujinshi
conventions
printers
shops
Self-publishing
Small press
Amateur press association
Audio
Independent music
Record label
Netlabel
Open-source label
Radio
Station
Pirate radio
Cassette culture
Doujin music
Lo-fi music
Tracker (MOD) music
Podsafe
Underground music
Musical instruments
Circuit bending
Experimental musical instrument
VideoAmateur
Home movies
Amateur film
Amateur pornography
Fan film
Machinima
Professional
Independent animation
Cinema of Transgression
Independent film
Exploitation film
Guerrilla filmmaking
B movie
Golden Age
50s
60sâ70s
80sâpresent
Z movie
Midnight movie
Low-budget film
No-budget film
No Wave Cinema
Double feature
Software
Cowboy coding
Demoscene
Free software
Open-source software
Software cracking
Unofficial patch
Warez scene
Video games
Indie games
development
developers
Homebrew
Fangame
Doujin soft
Mod
Open-source video game
ROM hack
FoodDrinks
Independent soft drink
Homebrewing
Microbrewery
Other
Indie art
Amateur photography
Mail art
NaÃ¯ve art
Outsider art
Visionary environment
Indie RPG
Independent circuit (wrestling)
Independent TV station
General
Indie design
Do it yourself (DIY ethic)
Doujin
Make (magazine)
Maker Faire
Social peer-to-peer processes

Authority control: National libraries  
United States
2





<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Free_software&oldid=1065374842"
		Categories: Free softwareSoftware licensesApplied ethicsHidden categories: CS1 maint: url-statusCS1 maint: uses authors parameterCS1 errors: missing periodicalCS1 maint: locationCS1 maint: bot: original URL status unknownArticles with short descriptionShort description is different from WikidataAll articles with unsourced statementsArticles with unsourced statements from April 2019Pages using div col with small parameterCommons category link from WikidataArticles with LCCN identifiersArticles with multiple identifiers
	
