
Title:
Role-based access control
Text:

		From Wikipedia, the free encyclopedia
		
		
		
		
		Jump to navigation
		Jump to search
		Approach to restricting system access to authorized users
This article's lead section may be too short to adequately summarize the key points. Please consider expanding the lead to provide an accessible overview of all important aspects of the article.  (May 2012)
In computer systems security, role-based access control (RBAC)[1][2] or role-based security[3] is an approach to restricting system access to authorized users. It is an approach to implement mandatory access control (MAC) or discretionary access control (DAC).
Role-based access control (RBAC) is a policy-neutral access-control mechanism defined around roles and privileges. The components of RBAC such as role-permissions, user-role and role-role relationships make it simple to perform user assignments. A study by NIST has demonstrated that RBAC addresses many needs of commercial and government organizations.[4] RBAC can be used to facilitate administration of security in large organizations with hundreds of users and thousands of permissions. Although RBAC is different from MAC and DAC access control frameworks, it can enforce these policies without any complication.

Contents

1 Design

1.1 Standardized levels


2 Relation to other models

2.1 Comparing to ACL
2.2 Attribute-based access control


3 Use and availability
4 See also
5 References
6 Further reading
7 External links



Design[edit]
Within an organization, roles are created for various job functions. The permissions to perform certain operations are assigned to specific roles. Members or staff (or other system users) are assigned particular roles, and through those role assignments acquire the permissions needed to perform particular system functions. Since users are not assigned permissions directly, but only acquire them through their role (or roles), management of individual user rights becomes a matter of simply assigning appropriate roles to the user's account; this simplifies common operations, such as adding a user, or changing a user's department.
Role based access control interference is a relatively new issue in security applications, where multiple user accounts with dynamic access levels may lead to encryption key instability, allowing an outside user to exploit the weakness for unauthorized access. Key sharing applications within dynamic virtualized environments have shown some success in addressing this problem.[5]
Three primary rules are defined for RBAC:

Role assignment: A subject can exercise a permission only if the subject has selected or been assigned a role.
Role authorization: A subject's active role must be authorized for the subject. With rule 1 above, this rule ensures that users can take on only roles for which they are authorized.
Permission authorization: A subject can exercise a permission only if the permission is authorized for the subject's active role. With rules 1 and 2, this rule ensures that users can exercise only permissions for which they are authorized.
Additional constraints may be applied as well, and roles can be combined in a hierarchy where higher-level roles subsume permissions owned by sub-roles.
With the concepts of role hierarchy and constraints, one can control RBAC to create or simulate lattice-based access control (LBAC). Thus RBAC can be considered to be a superset of LBAC.
When defining an RBAC model, the following conventions are useful:

S = Subject = A person or automated agent
R = Role = Job function or title which defines an authority level
P = Permissions = An approval of a mode of access to a resource
SE = Session = A mapping involving S, R and/or P
SA = Subject Assignment
PA = Permission Assignment
RH = Partially ordered Role Hierarchy. RH can also be written: â¥ (The notation: x â¥ y means that x inherits the permissions of y.)
A subject can have multiple roles.
A role can have multiple subjects.
A role can have many permissions.
A permission can be assigned to many roles.
An operation can be assigned to many permissions.
A permission can be assigned to many operations.
A constraint places a restrictive rule on the potential inheritance of permissions from opposing roles, thus it can be used to achieve appropriate separation of duties. For example, the same person should not be allowed to both create a login account and to authorize the account creation.
Thus, using set theory notation:


  
    
      
        P
        A
        â
        P
        Ã
        R
      
    
    {\displaystyle PA\subseteq P\times R}
  
 and is a many to many permission to role assignment relation.

  
    
      
        S
        A
        â
        S
        Ã
        R
      
    
    {\displaystyle SA\subseteq S\times R}
  
 and is a many to many subject to role assignment relation.

  
    
      
        R
        H
        â
        R
        Ã
        R
      
    
    {\displaystyle RH\subseteq R\times R}
  

A subject may have multiple simultaneous sessions with/in different roles.  RBAC
Standardized levels[edit]
.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}See also: NIST RBAC model
The NIST/ANSI/INCITS RBAC standard (2004) recognizes three levels of RBAC:[6]

core RBAC
hierarchical RBAC, which adds support for inheritance between roles
constrained RBAC, which adds separation of duties
Relation to other models[edit]
RBAC is a flexible access control technology whose flexibility allows it to implement DAC[7] or MAC.[8] DAC with groups (e.g., as implemented in POSIX file systems) can emulate RBAC.[9] MAC can simulate RBAC if the role graph is restricted to a tree rather than a partially ordered set.[10]
Prior to the development of RBAC, the Bell-LaPadula (BLP) model was synonymous with MAC and file system permissions were synonymous with DAC. These were considered to be the only known models for access control: if a model was not BLP, it was considered to be a DAC model, and vice versa. Research in the late 1990s demonstrated that RBAC falls in neither category.[11][12] Unlike context-based access control (CBAC), RBAC does not look at the message context (such as a connection's source). RBAC has also been criticized for leading to role explosion,[13] a problem in large enterprise systems which require access control of finer granularity than what RBAC can provide as roles are inherently assigned to operations and data types. In resemblance to CBAC, an Entity-Relationship Based Access Control (ERBAC, although the same acronym is also used for modified RBAC systems,[14] such as Extended Role-Based Access Control[15]) system is able to secure instances of data by considering their association to the executing subject.[16]

Comparing to ACL[edit]
Access control lists (ACLs) are used in traditional discretionary access-control systems to affect low-level data-objects. RBAC differs from ACL in assigning permissions to operations which change the direct-relations between several entities (see: ACLg below). For example, an ACL could be used for granting or denying write access to a particular system file, but it wouldn't dictate how that file could be changed. In an RBAC-based system, an operation might be to 'create a credit account' transaction in a financial application or to 'populate a blood sugar level test' record in a medical application. A Role is thus a sequence of operations within a larger activity. RBAC has been shown to be particularly well suited to separation of duties (SoD) requirements, which ensure that two or more people must be involved in authorizing critical operations. Necessary and sufficient conditions for safety of SoD in RBAC have been analyzed. An underlying principle of SoD is that no individual should be able to effect a breach of security through dual privilege. By extension, no person may hold a role that exercises audit, control or review authority over another, concurrently held role.[17][18]
Then again, a "minimal RBAC Model", RBACm, can be compared with an ACL mechanism, ACLg, where only groups are permitted as entries in the ACL. Barkley (1997)[19] showed that RBACm and ACLg are equivalent.
In modern SQL implementations, like ACL of the CakePHP framework, ACLs also manage groups and inheritance in a hierarchy of groups. Under this aspect, specific "modern ACL" implementations can be compared with specific "modern RBAC" implementations, better than "old (file system) implementations".
For data interchange, and for "high level comparisons", ACL data can be translated to XACML.

Attribute-based access control[edit]
Attribute-based access control or ABAC is a model which evolves from RBAC to consider additional attributes in addition to roles and groups. In ABAC, it is possible to use attributes of:

the user e.g. citizenship, clearance,
the resource e.g. classification, department, owner,
the action, and
the context e.g. time, location, IP.
ABAC is policy-based in the sense that it uses policies rather than static permissions to define what is allowed or what is not allowed.

Use and availability[edit]
The use of RBAC to manage user privileges (computer permissions) within a single system or application is widely accepted as a best practice. A 2010 report prepared for NIST by the Research Triangle Institute analyzed the economic value of RBAC for enterprises, and estimated benefits per employee from reduced employee downtime, more efficient provisioning, and more efficient access control policy administration.[20]
In an organization with a heterogeneous IT infrastructure and requirements that span dozens or hundreds of systems and applications, using RBAC to manage sufficient roles and assign adequate role memberships becomes extremely complex without hierarchical creation of roles and privilege assignments.[21] Newer systems extend the older NIST RBAC model[22] to address the limitations of RBAC for enterprise-wide deployments. The NIST model was adopted as a standard by INCITS as ANSI/INCITS 359-2004. A discussion of some of the design choices for the NIST model has also been published.[23]

See also[edit]
.mw-parser-output .div-col{margin-top:0.3em;column-width:30em}.mw-parser-output .div-col-small{font-size:90%}.mw-parser-output .div-col-rules{column-rule:1px solid #aaa}.mw-parser-output .div-col dl,.mw-parser-output .div-col ol,.mw-parser-output .div-col ul{margin-top:0}.mw-parser-output .div-col li,.mw-parser-output .div-col dd{page-break-inside:avoid;break-inside:avoid-column}
Access control list
Attribute-based access control (ABAC)
Organisation-based access control (OrBAC)
RSBAC
Capability-based security
Location-based authentication
Risk-based authentication
AGDLP (Microsoft's recommendations for implementing RBAC)
Identity driven networking (IDN)
PERMIS
Classified information
Apache Fortress
References[edit]
.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}

^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Ferraiolo, D.F. & Kuhn, D.R. (October 1992). "Role-Based Access Control" (PDF). 15th National Computer Security Conference: 554â563.

^ Sandhu, R., Coyne, E.J., Feinstein, H.L. and Youman, C.E. (August 1996). "Role-Based Access Control Models" (PDF). IEEE Computer. 29 (2): 38â47. CiteSeerXÂ 10.1.1.50.7649. doi:10.1109/2.485845.{{cite journal}}:  CS1 maint: multiple names: authors list (link)

^ ABREU, VILMAR; Santin, Altair O.; VIEGAS, EDUARDO K.; STIHLER, MAICON (2017). A multi-domain role activation model (PDF). ICC 2017 2017 IEEE International Conference on Communications. IEEE Press. pp.Â 1â6. doi:10.1109/ICC.2017.7997247. ISBNÂ 978-1-4673-8999-0. S2CIDÂ 6185138.

^ Gilbert MD, Lynch N, Ferraiolo FD (1995). "An examination of federal and commercial access control policy needs". National Computer Security Conference, 1993 (16th) Proceedings: Information Systems Security: User Choices. DIANE Publishing. p.Â 107. ISBNÂ 9780788119248.

^ Marikkannu, P (2011). "Fault-tolerant adaptive mobile agent system using dynamic role based access control". International Journal of Computer Applications. 20 (2): 1â6. Bibcode:2011IJCA...20b...1M. doi:10.5120/2409-3208.

^ Alberto Belussi; Barbara Catania; Eliseo Clementini; Elena Ferrari (2007). Spatial Data on the Web: Modeling and Management. Springer. p.Â 194. ISBNÂ 978-3-540-69878-4.

^ Ravi Sandhu; Qamar Munawer (October 1998). "How to do discretionary access control using roles". 3rd ACM Workshop on Role-Based Access Control: 47â54.

^ Sylvia Osborn; Ravi Sandhu & Qamar Munawer (2000). "Configuring role-based access control to enforce mandatory and discretionary access control policies". ACM Transactions on Information and System Security: 85â106.

^ Brucker, Achim D.; Wolff, Burkhart (2005). "A Verification Approach for Applied System Security". International Journal on Software Tools for Technology (STTT). 7 (3): 233â247. doi:10.1007/s10009-004-0176-3. hdl:20.500.11850/52625. S2CIDÂ 6427232.

^ D.R. Kuhn (1998). "Role Based Access Control on MLS Systems Without Kernel Changes". Proceedings of the third ACM workshop on Role-based access control - RBAC '98 (PDF). Third ACM Workshop on Role Based Access Control. pp.Â 25â32. CiteSeerXÂ 10.1.1.55.4755. doi:10.1145/286884.286890. ISBNÂ 978-1-58113-113-0. S2CIDÂ 1711956.

^ Editor, CSRC Content (2016-11-21). "Role Based Access Control â FAQs". csrc.nist.gov. Retrieved 15 August 2018. {{cite web}}: |last= has generic name (help)

^ (NIST), Author: David Ferraiolo; (NIST), Author: Richard Kuhn (1992-10-13). "Role-Based Access Controls" (PDF). csrc.nist.gov. pp.Â 554â563. Retrieved 15 August 2018. {{cite web}}: |first1= has generic name (help)

^ A. A. Elliott & G. S. Knight (2010). "Role Explosion: Acknowledging the Problem" (PDF). Proceedings of the 2010 International Conference on Software Engineering Research & Practice.

^ "ERBAC â Enterprise Role-Based Access Control (computing) â AcronymFinder". www.acronymfinder.com. Retrieved 15 August 2018.

^ "Dr. Bhavani Thuraisingham and Srinivasan Iyer (PPT)". Retrieved 15 August 2018.

^ Korhonen, Kalle. "tapestry-security-jpa". www.tynamo.org. Retrieved 15 August 2018.

^ D.R. Kuhn (1997). "Mutual Exclusion of Roles as a Means of Implementing Separation of Duty in Role-Based Access Control Systems" (PDF). 2nd ACM Workshop Role-Based Access Control: 23â30.

^ Ninghui Li, Ziad Bizri, and Mahesh V. Tripunitara . Tripunitara (2004). "On mutually exclusive roles and separation-of-duty" (PDF). 11th ACM Conference on Computer and Communications Security. CCS '04: 42â51. CiteSeerXÂ 10.1.1.159.2556. doi:10.1145/1030083.1030091. ISBNÂ 978-1581139617. S2CIDÂ 798546.{{cite journal}}:  CS1 maint: multiple names: authors list (link)

^ J. Barkley (1997) "Comparing simple role based access control models and access control lists", In "Proceedings of the second ACM workshop on Role-based access control", pages 127-132.

^ A.C. O'Connor & R.J. Loomis (March 2002). Economic Analysis of Role-Based Access Control (PDF). Research Triangle Institute. p.Â 145.

^ Systems, Hitachi ID. "Beyond Roles: A Practical Approach to Enterprise IAM". www.idsynch.com. Retrieved 15 August 2018.

^ Sandhu, R., Ferraiolo, D.F. and Kuhn, D.R. (July 2000). "The NIST Model for Role-Based Access Control: Toward a Unified Standard" (PDF). 5th ACM Workshop Role-Based Access Control: 47â63.{{cite journal}}:  CS1 maint: multiple names: authors list (link)

^ Ferraiolo, D.F., Kuhn, D.R., and Sandhu, R. (NovâDec 2007). "RBAC Standard Rationale: comments on a Critique of the ANSI Standard on Role-Based Access Control" (PDF). IEEE Security & Privacy. 5 (6): 51â53. doi:10.1109/MSP.2007.173. S2CIDÂ 28140142. Archived from the original (PDF) on 2008-09-17.{{cite journal}}:  CS1 maint: multiple names: authors list (link)


Further reading[edit]
David F. Ferraiolo; D. Richard Kuhn; Ramaswamy Chandramouli (2007). Role-based Access Control (2ndÂ ed.). Artech House. ISBNÂ 978-1-59693-113-8.
External links[edit]
FAQ on RBAC models and standards
Role Based Access Controls at NIST
XACML core and hierarchical role based access control profile
Institute for Cyber Security at the University of Texas San Antonio
Practical experiences in implementing RBAC




<img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" />
Retrieved from "https://en.wikipedia.org/w/index.php?title=Role-based_access_control&oldid=1057321774"
		Categories: Computer security modelsAccess controlHidden categories: CS1 maint: multiple names: authors listCS1 errors: generic nameArticles with short descriptionShort description is different from WikidataWikipedia introduction cleanup from May 2012All pages needing cleanupArticles covered by WikiProject Wikify from May 2012All articles covered by WikiProject Wikify
	
